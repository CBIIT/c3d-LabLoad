--
-- NCI_LABS  (Table) 
--
CREATE TABLE NCI_LABS
(
  RECORD_ID          NUMBER(10),
  PATIENT_ID         VARCHAR2(10 BYTE),
  SAMPLE_DATETIME    VARCHAR2(10 BYTE),
  TEST_COMPONENT_ID  VARCHAR2(8 BYTE),
  LABORATORY         VARCHAR2(10 BYTE),
  LABTEST_NAME       VARCHAR2(200 BYTE),
  LAB_GRADE          VARCHAR2(13 BYTE),
  RESULT             VARCHAR2(30 BYTE),
  UNIT               VARCHAR2(30 BYTE),
  NORMAL_VALUE       VARCHAR2(80 BYTE),
  PANEL_NAME         VARCHAR2(50 BYTE),
  PATIENT_NAME       VARCHAR2(50 BYTE),
  COMMENTS           VARCHAR2(100 BYTE),
  OC_LAB_PANEL       VARCHAR2(20 BYTE),
  OC_LAB_QUESTION    VARCHAR2(20 BYTE),
  OC_LAB_EVENT       VARCHAR2(40 BYTE),
  OC_PATIENT_POS     VARCHAR2(12 BYTE),
  LOAD_DATE          DATE,
  LOAD_FLAG          VARCHAR2(1 BYTE)           DEFAULT 'N',
  RECEIVED_DATE      DATE,
  DATE_CREATED       DATE,
  DATE_MODIFIED      DATE,
  CREATED_BY         VARCHAR2(240 BYTE),
  MODIFIED_BY        VARCHAR2(240 BYTE),
  TEST_CODE          VARCHAR2(12 BYTE),
  CDW_RESULT_ID      VARCHAR2(15 BYTE),
  OC_STUDY           VARCHAR2(15 BYTE),
  ERROR_REASON       VARCHAR2(200 BYTE),
  OC_LAB_SUBSET      VARCHAR2(12 BYTE),
  LOAD_MARK_DATE     DATE,
  LOAD_MARK_USER     VARCHAR2(30 BYTE)
)
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LABS_IDX  (Index) 
--
CREATE INDEX NCI_LABS_IDX ON NCI_LABS
(LOAD_FLAG, PATIENT_ID)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LABS_IDX10  (Index) 
--
CREATE INDEX NCI_LABS_IDX10 ON NCI_LABS
(LOAD_FLAG, RECORD_ID)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LABS_IDX2  (Index) 
--
CREATE INDEX NCI_LABS_IDX2 ON NCI_LABS
(TEST_CODE, TEST_COMPONENT_ID)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LABS_IDX5  (Index) 
--
CREATE INDEX NCI_LABS_IDX5 ON NCI_LABS
(OC_STUDY, PATIENT_ID, SAMPLE_DATETIME, LABTEST_NAME, RESULT, 
UNIT, LOAD_FLAG)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LABS_IDX6  (Index) 
--
CREATE INDEX NCI_LABS_IDX6 ON NCI_LABS
(OC_STUDY, LOAD_FLAG)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LABS_IDX8  (Index) 
--
CREATE INDEX NCI_LABS_IDX8 ON NCI_LABS
(CDW_RESULT_ID)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LABS_INDX3  (Index) 
--
CREATE INDEX NCI_LABS_INDX3 ON NCI_LABS
(OC_STUDY, RECORD_ID)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LABS_LLI  (Index) 
--
CREATE INDEX NCI_LABS_LLI ON NCI_LABS
(LOAD_FLAG, OC_STUDY, OC_PATIENT_POS, SAMPLE_DATETIME, LABTEST_NAME, 
OC_LAB_QUESTION)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LABS_PTLAB  (Index) 
--
CREATE INDEX NCI_LABS_PTLAB ON NCI_LABS
(PATIENT_ID, LABORATORY)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LABS_TEMP  (Index) 
--
CREATE INDEX NCI_LABS_TEMP ON NCI_LABS
(CDW_RESULT_ID, RECORD_ID)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NCI_LAB_IDX4  (Index) 
--
CREATE INDEX NCI_LAB_IDX4 ON NCI_LABS
(OC_STUDY, OC_PATIENT_POS, OC_LAB_PANEL, OC_LAB_SUBSET, SAMPLE_DATETIME)
LOGGING
TABLESPACE &&USERS_TABLESPACE;

--
-- NLB_BRI_SEQ  (Trigger) 
--
CREATE OR REPLACE TRIGGER NLB_BRI_SEQ
 BEFORE INSERT
 ON NCI_LABS 
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL BLOCK
BEGIN
 IF :new.record_id IS NULL THEN
       SELECT NLB_SEQ.NEXTVAL
       INTO :new.record_id
       FROM dual;
       IF SQL%notfound THEN
       raise_application_error(-20031,
           'Warning on Insert: The NLB sequence generator is not working');
       END IF;
 END IF;
 if :new.CREATED_BY IS NULL THEN
   :new.CREATED_BY := user;
 END IF;
 :new.DATE_CREATED := sysdate;
END;
/
SHOW ERRORS;


--
-- NLB_BRU_SEQ  (Trigger) 
--
CREATE OR REPLACE TRIGGER NLB_BRU_SEQ
 BEFORE UPDATE
 ON NCI_LABS 
 FOR EACH ROW
BEGIN

    :new.MODIFIED_BY  := user;
    :new.DATE_MODIFIED := sysdate;
END;
/
SHOW ERRORS;

