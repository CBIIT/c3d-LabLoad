SQL> 
SQL> Select to_char(sysdate,'MM/DD/YYYY HH24:MI:SS') "Execution Date", User "User"
  2    from dual;

Execution Date      User                                                        
------------------- ------------------------------                              
04/09/2013 14:48:11 OPS$BDL                                                     

SQL> 
SQL> 
SQL> --install the sequences
SQL> Prompt ...Installing Sequences
...Installing Sequences
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Sequence GLRS_SEQ
Sequence GLRS_SEQ
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @GLRS_SEQ.seq
SQL> CREATE SEQUENCE GLRS_SEQ
  2    START WITH 1
  3    NOMAXVALUE
  4    MINVALUE 0
  5    NOCYCLE
  6    NOCACHE
  7    NOORDER;
CREATE SEQUENCE GLRS_SEQ
                *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Sequence MD_LABS_SEQ
Sequence MD_LABS_SEQ
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @MD_LABS_SEQ.seq
SQL> 
SQL> CREATE SEQUENCE MD_LABS_SEQ
  2    START WITH 1
  3    NOMAXVALUE
  4    MINVALUE 1
  5    NOCYCLE
  6    NOCACHE
  7    NOORDER;
CREATE SEQUENCE MD_LABS_SEQ
                *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Sequence NCI_MANUAL_LOAD_SEQ
Sequence NCI_MANUAL_LOAD_SEQ
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_MANUAL_LOAD_SEQ.seq
SQL> 
SQL> 
SQL> CREATE SEQUENCE NCI_MANUAL_LOAD_SEQ
  2    START WITH 1
  3    NOMAXVALUE
  4    MINVALUE 1
  5    NOCYCLE
  6    NOCACHE
  7    NOORDER;
CREATE SEQUENCE NCI_MANUAL_LOAD_SEQ
                *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Sequence NLB_SEQ
Sequence NLB_SEQ
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NLB_SEQ.seq
SQL> 
SQL> CREATE SEQUENCE NLB_SEQ
  2    START WITH 1000
  3    NOMAXVALUE
  4    MINVALUE 1
  5    NOCYCLE
  6    NOCACHE
  7    NOORDER;

Sequence created.

SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Sequence NLM_SEQ
Sequence NLM_SEQ
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NLM_SEQ.seq
SQL> CREATE SEQUENCE NLM_SEQ
  2    START WITH 100
  3    NOMAXVALUE
  4    MINVALUE 1
  5    NOCYCLE
  6    CACHE 20
  7    NOORDER;
CREATE SEQUENCE NLM_SEQ
                *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> 
SQL> --install the table, index and privs
SQL> Prompt ...Installing Tables, Index, Synonym and Privileges.
...Installing Tables, Index, Synonym and Privileges.
SQL> /* 	 GU_LAB_RESULTS_HOLD.sql	 -- added 11/1/06	      */
SQL> /* 	 GU_LAB_RESULTS_STAGE.sql	 -- added 11/1/06	      */
SQL> /* 	 MDLABS_STG.sql 		 -- added 11/1/06	      */
SQL> /* 	 MDLABS_HOLD.sql		 -- added 11/1/06	      */
SQL> /* 	 NCI_LABS_MANUAL_LOAD_STAGE.sql  -- added 11/1/06	      */
SQL> /* 	 NCI_LABS_MANUAL_LOAD_HOLD.sql	 -- added 11/1/06	      */
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Object GU_LAB_RESULTS_HOLD
Object GU_LAB_RESULTS_HOLD
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @GU_LAB_RESULTS_HOLD.sql
SQL> 
SQL> --
SQL> -- GU_LAB_RESULTS_HOLD  (Table)
SQL> --
SQL> CREATE TABLE GU_LAB_RESULTS_HOLD
  2  (
  3    MRN		VARCHAR2(20 BYTE),
  4    SHORT_NAME	VARCHAR2(40 BYTE),
  5    LONG_NAME	VARCHAR2(100 BYTE),
  6    SAMPLE_DATE_RAW	VARCHAR2(15 BYTE),
  7    SAMPLE_TIME_RAW	VARCHAR2(15 BYTE),
  8    RESULT		VARCHAR2(15 BYTE),
  9    HI_LOW		VARCHAR2(20 BYTE),
 10    RANGE		VARCHAR2(20 BYTE),
 11    STUDY_NO 	VARCHAR2(30 BYTE),
 12    INITIALS 	VARCHAR2(10 BYTE),
 13    DEPT		VARCHAR2(30 BYTE),
 14    UNITS_RAW	VARCHAR2(30 BYTE),
 15    C3D_LAB_NAME	VARCHAR2(30 BYTE),
 16    GU_LAB_ID	VARCHAR2(10 BYTE)
 17  )
 18  TABLESPACE  &&USERS_TABLESPACE;
Enter value for users_tablespace: USERS
CREATE TABLE GU_LAB_RESULTS_HOLD
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Object GU_LAB_RESULTS_STAGE
Object GU_LAB_RESULTS_STAGE
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @GU_LAB_RESULTS_STAGE.sql
SQL> --
SQL> -- GU_LAB_RESULTS_STAGE  (Table)
SQL> --
SQL> CREATE TABLE GU_LAB_RESULTS_STAGE
  2  (
  3    MRN		  VARCHAR2(20 BYTE),
  4    SHORT_NAME	  VARCHAR2(40 BYTE),
  5    LONG_NAME	  VARCHAR2(100 BYTE),
  6    SAMPLE_DATE_RAW	  VARCHAR2(15 BYTE),
  7    SAMPLE_TIME_RAW	  VARCHAR2(15 BYTE),
  8    RESULT		  VARCHAR2(15 BYTE),
  9    HI_LOW		  VARCHAR2(20 BYTE),
 10    RANGE		  VARCHAR2(20 BYTE),
 11    STUDY_NO 	  VARCHAR2(30 BYTE),
 12    INITIALS 	  VARCHAR2(10 BYTE),
 13    DEPT		  VARCHAR2(30 BYTE),
 14    UNITS_RAW	  VARCHAR2(30 BYTE),
 15    CREATE_DATE	  DATE,
 16    CREATE_USER	  VARCHAR2(30 BYTE),
 17    LOAD_FLAG	  VARCHAR2(1 BYTE),
 18    SAMPLE_DATETIME	  DATE,
 19    PROCESS_DATE	  DATE,
 20    TEST_COMPONENT_ID  VARCHAR2(10 BYTE),
 21    C3DLABNAME	  VARCHAR2(30 BYTE),
 22    GU_LAB_ID	  VARCHAR2(10 BYTE),
 23    RECORD_ID	  NUMBER(10)
 24  )
 25  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE GU_LAB_RESULTS_STAGE
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> --
SQL> -- BRI_GLRS_TRG  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER BRI_GLRS_TRG
  2  BEFORE INSERT
  3  ON GU_LAB_RESULTS_STAGE
  4  REFERENCING NEW AS NEW OLD AS OLD
  5  FOR EACH ROW
  6  DECLARE
  7  tmpVar NUMBER;
  8  
  9  BEGIN
 10   If :new.load_flag is null then
 11  	 :new.load_flag := 'N';
 12   End If;
 13  
 14   IF :new.record_id IS NULL THEN
 15  	    SELECT GLRS_SEQ.NEXTVAL
 16  	    INTO :new.record_id
 17  	    FROM dual;
 18  	    IF SQL%notfound THEN
 19  	    raise_application_error(-20031,
 20  		'Warning on Insert: The GLRS sequence generator is not working');
 21  	    END IF;
 22   END IF;
 23   if :new.CREATE_USER IS NULL THEN
 24  	:new.CREATE_USER := user;
 25   END IF;
 26   :new.CREATE_DATE := sysdate;
 27  
 28  End;
 29  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Object MDLABS_STG
Object MDLABS_STG
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @MDLABS_STG.sql
SQL> --
SQL> -- MDLABS_STG  (Table)
SQL> --
SQL> CREATE TABLE MDLABS_STG
  2  (
  3    PROTOCOL 	     VARCHAR2(10 BYTE),
  4    ACCESSIONNUMBER	     VARCHAR2(10 BYTE),
  5    OBX_OBSERVATIONDTIME  VARCHAR2(40 BYTE),
  6    LAB_NAME 	     VARCHAR2(100 BYTE),
  7    PROCEDURENAME	     VARCHAR2(100 BYTE),
  8    OBSERVATIONVALUE      VARCHAR2(10 BYTE),
  9    UNITS		     VARCHAR2(10 BYTE),
 10    REFERENCERANGE	     VARCHAR2(50 BYTE),
 11    DATE_CREATED	     DATE,
 12    DATE_MODIFIED	     DATE,
 13    CREATED_BY	     VARCHAR2(240 BYTE),
 14    MODIFIED_BY	     VARCHAR2(240 BYTE),
 15    RECORD_ID	     NUMBER(6),
 16    LOAD_FLAG	     VARCHAR2(6 BYTE)
 17  )
 18  TABLESPACE  &&USERS_TABLESPACE;
CREATE TABLE MDLABS_STG
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> --
SQL> -- MD_LABS_TRG  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER MD_LABS_TRG
  2  BEFORE INSERT
  3  ON MDLABS_STG
  4  REFERENCING NEW AS NEW OLD AS OLD
  5  FOR EACH ROW
  6  DECLARE
  7  tmpVar NUMBER;
  8  
  9  BEGIN
 10   If :new.load_flag is null then
 11  	 :new.load_flag := 'N';
 12   End If;
 13  
 14   IF :new.record_id IS NULL THEN
 15  	    SELECT MD_Labs_SEQ.NEXTVAL
 16  	    INTO :new.record_id
 17  	    FROM dual;
 18  	    IF SQL%notfound THEN
 19  	    raise_application_error(-20031,
 20  		'Warning on Insert: The MDLABSSEQ sequence generator is not working');
 21  	    END IF;
 22   END IF;
 23  
 24  End;
 25  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> --
SQL> -- NLB_MDLABS  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER NLB_MDLABS
  2   BEFORE INSERT
  3   ON MDLABS_STG
  4    FOR EACH ROW
  5  -- PL/SQL BLOCK
  6  BEGIN
  7  
  8   if :new.CREATED_BY IS NULL THEN
  9  	:new.CREATED_BY := user;
 10   END IF;
 11   :new.DATE_CREATED := sysdate;
 12  END;
 13  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> --
SQL> -- NLB_MDLABS_US  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER NLB_MDLABS_US
  2   BEFORE UPDATE
  3   ON MDLABS_STG
  4   FOR EACH ROW
  5  BEGIN
  6  
  7  	 :new.MODIFIED_BY  := user;
  8  	 :new.DATE_MODIFIED := sysdate;
  9  END;
 10  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Object MDLABS_HOLD
Object MDLABS_HOLD
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @MDLABS_HOLD.sql
SQL> --
SQL> -- MDLABS_HOLD  (Table)
SQL> --
SQL> CREATE TABLE MDLABS_HOLD
  2  (
  3    PROTOCOL 	     VARCHAR2(20 BYTE),
  4    ACCESSIONNUMBER	     VARCHAR2(10 BYTE),
  5    OBX_OBSERVATIONDTIME  VARCHAR2(50 BYTE),
  6    LAB_NAME 	     VARCHAR2(50 BYTE),
  7    PROCEDURENAME	     VARCHAR2(50 BYTE),
  8    OBSERVATIONVALUE      VARCHAR2(50 BYTE),
  9    UNITS		     VARCHAR2(20 BYTE),
 10    REFERENCERANGE	     VARCHAR2(20 BYTE)
 11  )
 12  TABLESPACE  &&USERS_TABLESPACE;
CREATE TABLE MDLABS_HOLD
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Object NCI_LABS_MANUAL_LOAD_STAGE
Object NCI_LABS_MANUAL_LOAD_STAGE
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LABS_MANUAL_LOAD_STAGE.sql
SQL> -- drop table first
SQL> DROP TABLE NCI_LABS_MANUAL_LOAD_STAGE;

Table dropped.

SQL> 
SQL> -- create table
SQL> CREATE TABLE NCI_LABS_MANUAL_LOAD_STAGE
  2  (
  3    STUDY		    VARCHAR2(15 BYTE),
  4    PATIENT_ID	    VARCHAR2(10 BYTE),
  5    OC_PATIENT_POS	    VARCHAR2(12 BYTE),
  6    LAB_SAMPLE_DATE_RAW  VARCHAR2(20 BYTE),
  7    LAB_SAMPLE_TIME_RAW  VARCHAR2(20 BYTE),
  8    LAB_TEST_NAME	    VARCHAR2(200 BYTE),
  9    LAB_TEST_RESULT	    VARCHAR2(20 BYTE),
 10    LAB_TEST_UOM	    VARCHAR2(20 BYTE),
 11    LAB_TEST_RANGE	    VARCHAR2(80 BYTE),
 12    LABORATORY	    VARCHAR2(10 BYTE),
 13    RECORD_ID	    NUMBER(10),
 14    RECEIVED_DATE	    DATE,
 15    LAB_SAMPLE_DATE	    DATE,
 16    STAGE_DATE	    DATE,
 17    STAGE_USER	    VARCHAR2(240 BYTE),
 18    STAGE_NOTE	    VARCHAR2(200 BYTE),
 19    STAGE_ID 	    NUMBER(10),
 20    STATUS_FLAG	    VARCHAR2(1 BYTE),
 21    PROCESS_DATE	    DATE,
 22    PROCESS_USER	    VARCHAR2(240 BYTE),
 23    LAB_TEST_EVENT	    VARCHAR2(40 BYTE),
 24    BATCH_ID 	    NUMBER,
 25    LAB_TEST_RANGE_LOW   VARCHAR2(30 BYTE),
 26    LAB_TEST_RANGE_HIGH  VARCHAR2(30 BYTE),
 27    QUALIFYING_VALUE     VARCHAR2(80 BYTE),
 28    STATUS_COMMENT	    VARCHAR2(200 BYTE)	     DEFAULT 'New Record'
 29  )
 30  TABLESPACE USERS
 31  PCTUSED	40
 32  PCTFREE	10
 33  INITRANS	1
 34  MAXTRANS	255
 35  STORAGE	(
 36  		 INITIAL	  128K
 37  		 NEXT		  128K
 38  		 MINEXTENTS	  1
 39  		 MAXEXTENTS	  2147483645
 40  		 PCTINCREASE	  0
 41  		 FREELISTS	  1
 42  		 FREELIST GROUPS  1
 43  		 BUFFER_POOL	  DEFAULT
 44  		)
 45  LOGGING
 46  NOCOMPRESS
 47  NOCACHE
 48  NOPARALLEL
 49  NOMONITORING;

Table created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LABS_MANUAL_LOAD_STAGE.LAB_TEST_EVENT IS 'This column holds the CPE (Event) as assigned by the investigator.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LABS_MANUAL_LOAD_STAGE.QUALIFYING_VALUE IS 'Used to pass QUALIFYING_VALUE to the DCM in C3D';

Comment created.

SQL> 
SQL> GRANT DELETE, INSERT, SELECT, UPDATE ON  NCI_LABS_MANUAL_LOAD_STAGE TO C3PR;

Grant succeeded.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Object NCI_LABS_MANUAL_LOAD_HOLD
Object NCI_LABS_MANUAL_LOAD_HOLD
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LABS_MANUAL_LOAD_HOLD.sql
SQL> -- drop table first
SQL> DROP TABLE NCI_LABS_MANUAL_LOAD_HOLD;

Table dropped.

SQL> 
SQL> -- create table
SQL> CREATE TABLE NCI_LABS_MANUAL_LOAD_HOLD
  2  (
  3    STUDY		    VARCHAR2(200 BYTE),
  4    PATIENT_ID	    VARCHAR2(10 BYTE),
  5    OC_PATIENT_POS	    VARCHAR2(12 BYTE),
  6    LAB_SAMPLE_DATE_RAW  VARCHAR2(20 BYTE),
  7    LAB_SAMPLE_TIME_RAW  VARCHAR2(20 BYTE),
  8    LAB_TEST_NAME	    VARCHAR2(200 BYTE),
  9    LAB_TEST_RESULT	    VARCHAR2(300 BYTE),
 10    LAB_TEST_UOM	    VARCHAR2(20 BYTE),
 11    LAB_TEST_RANGE	    VARCHAR2(80 BYTE),
 12    LABORATORY	    VARCHAR2(10 BYTE),
 13    RECEIVED_DATE	    DATE,
 14    RECORD_ID	    NUMBER(10),
 15    LAB_TEST_EVENT	    VARCHAR2(40 BYTE),
 16    BATCH_ID 	    INTEGER,
 17    LAB_TEST_RANGE_LOW   VARCHAR2(30 BYTE),
 18    LAB_TEST_RANGE_HIGH  VARCHAR2(30 BYTE),
 19    QUALIFYING_VALUE     VARCHAR2(80 BYTE),
 20    STATUS_CODE	    VARCHAR2(1 BYTE)	     DEFAULT 'N',
 21    STATUS_COMMENT	    VARCHAR2(200 BYTE)	     DEFAULT 'New Record'
 22  )
 23  TABLESPACE USERS
 24  PCTUSED	40
 25  PCTFREE	10
 26  INITRANS	1
 27  MAXTRANS	255
 28  STORAGE	(
 29  		 INITIAL	  128K
 30  		 NEXT		  128K
 31  		 MINEXTENTS	  1
 32  		 MAXEXTENTS	  2147483645
 33  		 PCTINCREASE	  0
 34  		 FREELISTS	  1
 35  		 FREELIST GROUPS  1
 36  		 BUFFER_POOL	  DEFAULT
 37  		)
 38  LOGGING
 39  NOCOMPRESS
 40  NOCACHE
 41  NOPARALLEL
 42  NOMONITORING;

Table created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LABS_MANUAL_LOAD_HOLD.LAB_TEST_EVENT IS 'This column holds the EVENT that the investigator has assigned to the lab already.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LABS_MANUAL_LOAD_HOLD.BATCH_ID IS 'Batch ID is assigned at commit to ensure entire group of data is processed together.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LABS_MANUAL_LOAD_HOLD.QUALIFYING_VALUE IS 'Use to pass QUALIFYING_VALUE to the DCM in C3D.';

Comment created.

SQL> 
SQL> CREATE OR REPLACE TRIGGER BI_ER_MLT
  2  before insert
  3  on NCI_LABS_MANUAL_LOAD_HOLD
  4  REFERENCING OLD AS OLD NEW AS NEW
  5  FOR EACH ROW
  6  Begin
  7  	Declare
  8  	  /* Ekagra Software Technologies						  */
  9  	  /* Table Trigger to set audit trail columns and launch the Lab Load Autoloader  */
 10  	  /*										  */
 11  	  Hold_Number Number;	    -- Holds Job Id Number during checking
 12  	  Hold_Found  Varchar2(1);  -- Holds Found/Not-Found results
 13  
 14  	Begin
 15  
 16  	   -- Set date record created
 17  	   :new.received_date := sysdate;
 18  
 19  	   -- Set Record ID for the record received, used for tracking into NCI_LABS
 20  	   select nci_manual_load_seq.nextval
 21  	     into :new.record_id
 22  	     from dual;
 23  
 24  	   If sql%notfound Then
 25  	      -- If sequence cannot be created, raise an error to the calling application
 26  	      Raise_application_error(-20041,
 27  		   'Warning: Record Id cannot be issued, NCI_MANUAL_LOAD_SEQ not working');
 28  	   End If;
 29  
 30  	   -- Get Batch ID for group of committed records, each group should have
 31  	   -- a unique ID as these records are processed as a group through the AutoLoader
 32  	   Begin
 33  	      -- Get the current value from the Batch ID Sequence.  If this is the
 34  	      -- first time trying, an error should occur because the sequnce was
 35  	      -- not initiated.  That way we always get a NEW id for each batch.
 36  	      select nci_manual_load_batch_seq.currval
 37  		into hold_number
 38  		from dual;
 39  
 40  	   Exception
 41  	      when others then
 42  		 -- if ANY error occurs from last statement, get a NEW id number.
 43  		 -- This is the behavior we are expecting.  The next record through this
 44  		 -- routine will get the same Batch ID, because we check current value first
 45  		 select nci_manual_load_batch_seq.nextval
 46  		   into hold_number
 47  		   from dual;
 48  
 49  		 -- If we do not get a sequence, there is a problem. Raise an error to the
 50  		 -- calling program.
 51  		 If sql%notfound Then
 52  		    Raise_application_error(-20041,
 53  		      'Warning: Batch Id cannot be issued, NCI_MANUAL_LOAD_BATCH_SEQ not working');
 54  		 End If;
 55  	   End;
 56  
 57  	   Begin
 58  	      -- Check the Batch ID we just polled.  If it has already been used for a started
 59  	      -- Job, then we need a different number.	This can happen when the DB connection is
 60  	      -- not closed and reused, or when the user commits two seperate batches of records
 61  	      -- from the command line.
 62  	      Select 'X' into Hold_Found
 63  		from nci_labs_manual_load_batches
 64  	       where batch_id = hold_number
 65  		 and job_id is not null;
 66  
 67  	      Begin
 68  		 -- get a new sequence number because the above statement found it in the submitted
 69  		 -- batches table
 70  		 select nci_manual_load_batch_seq.nextval
 71  		   into hold_number
 72  		   from dual;
 73  
 74  		 -- If we do not get a sequence, there is a problem. Raise an error to the
 75  		 -- calling program.
 76  	      Exception
 77  		 When Others Then
 78  		    Raise_application_error(-20041,
 79  		      'Warning: Batch Id cannot be issued, NCI_MANUAL_LOAD_BATCH_SEQ not working');
 80  	      End;
 81  
 82  	   Exception
 83  	     When Others Then
 84  		-- If an error occurs when checking the existence of the Batch ID in the
 85  		-- summitted batches table, then the sequence is okay and nothing needs done
 86  		Null;
 87  	   End;
 88  
 89  	   -- Assign the Batch ID to the tables Batch ID column.
 90  	   :new.batch_id := hold_number;
 91  
 92  	   Begin
 93  
 94  	      -- Write the Batch ID, the user committing the data and the Date into the
 95  	      -- submitted batches table of the Autoloader.
 96  	      -- The AutoLoader WATCHER application will see it and execute.
 97  	      Insert into NCI_LABS_MANUAL_LOAD_BATCHES
 98  		    (BATCH_ID, SUBMIT_BY, SUBMIT_DATE)
 99  	      select Hold_Number, USER, SYSDATE
100  		from DUAL
101  	       where not exists (select 'X'
102  				   from NCI_LABS_MANUAL_LOAD_BATCHES
103  				  where BATCH_ID = Hold_Number);
104  
105  	      -- Request that the Lab Loader AutoLoader start.	This ensures
106  	      -- that the batches of records committed will be processed by the
107  	      -- AutoLoader by ensure that the Watcher is running.
108  	      -- Nci_labs_manual_loader.AutoLoad_Watcher_Control ('START');
109  
110  	   End;
111  
112  	End;
113  
114  End;
115  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> CREATE PUBLIC SYNONYM NCI_LABS_MANUAL_LOAD_HOLD FOR NCI_LABS_MANUAL_LOAD_HOLD;
CREATE PUBLIC SYNONYM NCI_LABS_MANUAL_LOAD_HOLD FOR NCI_LABS_MANUAL_LOAD_HOLD
                      *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> GRANT DELETE, INSERT, SELECT, UPDATE ON  NCI_LABS_MANUAL_LOAD_HOLD TO C3PR;

Grant succeeded.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> prompt Object BDL_TEMP_FILES
Object BDL_TEMP_FILES
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @BDL_TEMP_FILES.sql
SQL> --
SQL> -- BDL_TEMP_FILES	(Table)
SQL> --
SQL> CREATE TABLE BDL_TEMP_FILES
  2  (
  3    ID		 VARCHAR2(20 BYTE),
  4    INVESTIGATOR	 VARCHAR2(10 BYTE),
  5    SITE		 VARCHAR2(10 BYTE),
  6    PATIENT		 VARCHAR2(10 BYTE),
  7    DOCUMENT_NO	 VARCHAR2(20 BYTE),
  8    PLANNED_EVENT	 VARCHAR2(30 BYTE),
  9    SUBEVENT_NO	 NUMBER(2),
 10    DCI_DATE 	 VARCHAR2(50 BYTE),
 11    DCI_TIME 	 VARCHAR2(6 BYTE),
 12    DCI_NAME 	 VARCHAR2(50 BYTE),
 13    DCM_NAME 	 VARCHAR2(50 BYTE),
 14    DCM_SUBSET	 VARCHAR2(50 BYTE),
 15    DCM_QUESGRP	 VARCHAR2(50 BYTE),
 16    DCM_QUES 	 VARCHAR2(50 BYTE),
 17    DCM_OCCUR	 NUMBER(3),
 18    REPEAT_SN	 NUMBER(4),
 19    VALUETEXT	 VARCHAR2(200 BYTE),
 20    DATA_COMMENT	 VARCHAR2(200 BYTE),
 21    QUALIFYING_VALUE  VARCHAR2(100 BYTE),
 22    STUDY		 VARCHAR2(50 BYTE),
 23    DATE_CREATED	 DATE,
 24    DATE_MODIFIED	 DATE,
 25    CREATED_BY	 VARCHAR2(240 BYTE),
 26    MODIFIED_BY	 VARCHAR2(240 BYTE)
 27  )
 28  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE BDL_TEMP_FILES
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- BTE_BRI_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER BTE_BRI_SEQ
  2   BEFORE INSERT
  3   ON BDL_TEMP_FILES
  4   FOR EACH ROW
  5  BEGIN
  6  
  7  	if :new.CREATED_BY IS NULL THEN
  8  	:new.CREATED_BY := user;
  9  	END IF;
 10  	:new.DATE_CREATED := sysdate;
 11  END;
 12  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> --
SQL> -- BTE_BRU_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER BTE_BRU_SEQ
  2   BEFORE UPDATE
  3   ON BDL_TEMP_FILES
  4   FOR EACH ROW
  5  BEGIN
  6  
  7  	 :new.MODIFIED_BY  := user;
  8  	 :new.DATE_MODIFIED := sysdate;
  9  END;
 10  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object CDW_LAB_RESULTS
Object CDW_LAB_RESULTS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @CDW_LAB_RESULTS.sql
SQL> --
SQL> -- CDW_LAB_RESULTS  (Table)
SQL> --
SQL> CREATE TABLE CDW_LAB_RESULTS
  2  (
  3    RESULT_ID	     VARCHAR2(15 BYTE),
  4    PATIENT_ID	     VARCHAR2(10 BYTE),
  5    RECORD_DATETIME	     VARCHAR2(15 BYTE),
  6    TEST_ID		     NUMBER(10),
  7    TEST_CODE	     VARCHAR2(10 BYTE),
  8    TEST_NAME	     VARCHAR2(30 BYTE),
  9    TEST_UNIT	     VARCHAR2(15 BYTE),
 10    ORDER_ID 	     VARCHAR2(15 BYTE),
 11    PARENT_TEST_ID	     NUMBER(10),
 12    ORDER_NUMBER	     NUMBER(7,2),
 13    ACCESSION	     CHAR(6 BYTE),
 14    TEXT_RESULT	     VARCHAR2(20 BYTE),
 15    NUMERIC_RESULT	     NUMBER(10,3),
 16    HI_LOW_FLAG	     CHAR(2 BYTE),
 17    UPDATED_FLAG	     NUMBER(5),
 18    LOW_RANGE	     NUMBER(9,4),
 19    HIGH_RANGE	     NUMBER(9,4),
 20    REPORTED_DATETIME     VARCHAR2(15 BYTE),
 21    RECEIVED_DATETIME     VARCHAR2(15 BYTE),
 22    COLLECTED_DATETIME    VARCHAR2(15 BYTE),
 23    MASKED		     CHAR(1 BYTE),
 24    RANGE		     VARCHAR2(80 BYTE),
 25    SPECIMEN_ID	     NUMBER(10),
 26    SPECIMEN_MODIFIER_ID  NUMBER(10),
 27    QUALITATIVE_DICT_ID   NUMBER(10),
 28    INSERTED_DATETIME     VARCHAR2(15 BYTE),
 29    UPDATE_DATETIME	     VARCHAR2(15 BYTE),
 30    LOAD_FLAG	     VARCHAR2(1 BYTE),
 31    LOAD_DATE	     DATE
 32  )
 33  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE CDW_LAB_RESULTS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- CLR_IDX2  (Index)
SQL> --
SQL> CREATE INDEX CLR_IDX2 ON CDW_LAB_RESULTS
  2  (LOAD_FLAG, UPDATED_FLAG)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX CLR_IDX2 ON CDW_LAB_RESULTS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- PRC_TEMP_LOAD_FLAG  (Index)
SQL> --
SQL> CREATE INDEX PRC_TEMP_LOAD_FLAG ON CDW_LAB_RESULTS
  2  (PATIENT_ID, LOAD_FLAG)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX PRC_TEMP_LOAD_FLAG ON CDW_LAB_RESULTS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object CDW_LAST_LOAD
Object CDW_LAST_LOAD
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @CDW_LAST_LOAD.sql
SQL> --
SQL> -- CDW_LAST_LOAD  (Table)
SQL> --
SQL> CREATE TABLE CDW_LAST_LOAD
  2  (
  3    INSERTED_DATE  DATE
  4  )
  5  TABLESPACE &&USERS_TABLESPACE;

Table created.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Data for CDW_LAST_LOAD
Data for CDW_LAST_LOAD
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @CDW_LAST_LOAD_DATA.sql
SQL> --
SQL> -- This table must contain a date.  It will be seeded with today's date.
SQL> --
SQL> 
SQL> Insert into CDW_LAST_LOAD
  2   values (SYSDATE);

1 row created.

SQL> 
SQL>  Commit;

Commit complete.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object MIS_CDR_TESTS
Object MIS_CDR_TESTS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @MIS_CDR_TESTS.sql
SQL> CREATE TABLE MIS_CDR_TESTS
  2  (
  3    TEST_ID		 NUMBER(18),
  4    EC_ID		 VARCHAR2(10 BYTE),
  5    TEST_CODE	 VARCHAR2(10 BYTE),
  6    TEST_UNIT	 VARCHAR2(15 BYTE),
  7    TEST_NAME	 VARCHAR2(30 BYTE),
  8    TEST_TYPE	 VARCHAR2(1 BYTE),
  9    ABBREVIATED_NAME  VARCHAR2(15 BYTE),
 10    TEST_TIME	 VARCHAR2(20 BYTE),
 11    ADDED_DATE	 VARCHAR2(30 BYTE),
 12    EFFECTIVE_DATE	 VARCHAR2(30 BYTE),
 13    MODIFIED_DATE	 VARCHAR2(30 BYTE),
 14    FIRST_RESULT_ID	 NUMBER(18),
 15    LAST_RESULT_ID	 NUMBER(18)
 16  )
 17  TABLESPACE &&USERS_TABLESPACE;

Table created.

SQL> 
SQL> CREATE INDEX MIS_CDR_TESTS_INDX2 ON MIS_CDR_TESTS
  2  (TEST_CODE, TEST_ID)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;

Index created.

SQL> 
SQL> CREATE INDEX MIS_CDR_TEST_IDX3 ON MIS_CDR_TESTS
  2  (EC_ID, TEST_CODE)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;

Index created.

SQL> 
SQL> CREATE INDEX MIS_CDR_TEST_INDX1 ON MIS_CDR_TESTS
  2  (TEST_NAME, FIRST_RESULT_ID, LAST_RESULT_ID)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;

Index created.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object MIS_LAB_RESULTS_HISTORY
Object MIS_LAB_RESULTS_HISTORY
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @MIS_LAB_RESULTS_HISTORY.sql
SQL> CREATE TABLE MIS_LAB_RESULTS_HISTORY
  2  (
  3    RESULT_ID	     VARCHAR2(20 BYTE),
  4    MPI		     VARCHAR2(15 BYTE),
  5    DATE_TIME	     VARCHAR2(30 BYTE),
  6    TEST_ID		     NUMBER(10),
  7    TEST_CODE	     VARCHAR2(10 BYTE),
  8    TEST_NAME	     VARCHAR2(30 BYTE),
  9    TEST_UNIT	     VARCHAR2(15 BYTE),
 10    ORDER_ID 	     VARCHAR2(20 BYTE),
 11    PARENT_TEST_ID	     NUMBER(10),
 12    ORDER_NUMBER	     NUMBER(7,2),
 13    ACCESSION	     CHAR(6 BYTE),
 14    TEXT_RESULT	     VARCHAR2(20 BYTE),
 15    NUMERIC_RESULT	     NUMBER(10,3),
 16    HI_LOW_FLAG	     CHAR(2 BYTE),
 17    UPDATED_FLAG	     NUMBER(5)		     NOT NULL,
 18    LOW_RANGE	     NUMBER(9,4),
 19    HIGH_RANGE	     NUMBER(9,4),
 20    REPORTED_DATETIME     VARCHAR2(30 BYTE),
 21    RECEIVED_DATETIME     VARCHAR2(30 BYTE),
 22    COLLECTED_DATETIME    VARCHAR2(30 BYTE),
 23    MASKED		     CHAR(1 BYTE),
 24    RANGE		     VARCHAR2(80 BYTE),
 25    SPECIMEN_ID	     NUMBER(10),
 26    SPECIMEN_MODIFIER_ID  NUMBER(10),
 27    QUALITATIVE_DICT_ID   NUMBER(10),
 28    INSERTED_DATETIME     VARCHAR2(30 BYTE),
 29    UPDATE_DATETIME	     VARCHAR2(30 BYTE)
 30  )
 31  TABLESPACE &&USERS_TABLESPACE;

Table created.

SQL> 
SQL> CREATE INDEX MLRH_INDX1 ON MIS_LAB_RESULTS_HISTORY
  2  (MPI, COLLECTED_DATETIME, TEST_NAME)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;

Index created.

SQL> 
SQL> CREATE INDEX MLRH_INDX2 ON MIS_LAB_RESULTS_HISTORY
  2  (TEST_NAME, MPI, COLLECTED_DATETIME)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;

Index created.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_INVALID_LABTESTS
Object NCI_INVALID_LABTESTS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_INVALID_LABTESTS.sql
SQL> --
SQL> -- NCI_INVALID_LABTESTS  (Table)
SQL> --
SQL> CREATE TABLE NCI_INVALID_LABTESTS
  2  (
  3    LABTEST_NAME   VARCHAR2(60 BYTE),
  4    DATE_CREATED   DATE,
  5    DATE_MODIFIED  DATE,
  6    CREATED_BY     VARCHAR2(30 BYTE),
  7    MODIFIED_BY    VARCHAR2(30 BYTE)
  8  )
  9  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_INVALID_LABTESTS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- ILT_PK	(Index)
SQL> --
SQL> CREATE UNIQUE INDEX ILT_PK ON NCI_INVALID_LABTESTS
  2  (LABTEST_NAME)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE UNIQUE INDEX ILT_PK ON NCI_INVALID_LABTESTS
                    *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- ILT_BRI_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER ILT_BRI_SEQ
  2   BEFORE INSERT
  3   ON NCI_INVALID_LABTESTS
  4   FOR EACH ROW
  5  BEGIN
  6  
  7  	if :new.CREATED_BY IS NULL THEN
  8  	:new.CREATED_BY := user;
  9  	END IF;
 10  	:new.DATE_CREATED := sysdate;
 11  END;
 12  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> --
SQL> -- ILT_BRU_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER ILT_BRU_SEQ
  2   BEFORE UPDATE
  3   ON NCI_INVALID_LABTESTS
  4   FOR EACH ROW
  5  BEGIN
  6  
  7  	 :new.MODIFIED_BY  := user;
  8  	 :new.DATE_MODIFIED := sysdate;
  9  END;
 10  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Data for NCI_INVALID_LABTESTS
Data for NCI_INVALID_LABTESTS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_INVALID_LABTESTS_DATA.sql
SQL> --
SQL> --
SQL> Insert into NCI_INVALID_LABTESTS
  2  	(LABTEST_NAME, DATE_CREATED, CREATED_BY)
  3   Values
  4  	('.', TO_DATE('12/19/2002 13:39:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');
Insert into NCI_INVALID_LABTESTS
*
ERROR at line 1:
ORA-00001: unique constraint (OPS$BDL.ILT_PK) violated 


SQL> Insert into NCI_INVALID_LABTESTS
  2  	(LABTEST_NAME, DATE_CREATED, CREATED_BY)
  3   Values
  4  	('TEMPERATURE', TO_DATE('12/02/2004 14:39:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');
Insert into NCI_INVALID_LABTESTS
*
ERROR at line 1:
ORA-00001: unique constraint (OPS$BDL.ILT_PK) violated 


SQL> COMMIT;

Commit complete.

SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_INVALID_RESULTS
Object NCI_INVALID_RESULTS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_INVALID_RESULTS.sql
SQL> --
SQL> -- NCI_INVALID_RESULTS  (Table)
SQL> --
SQL> CREATE TABLE NCI_INVALID_RESULTS
  2  (
  3    RESULT_VALUE   VARCHAR2(50 BYTE),
  4    DATE_CREATED   DATE,
  5    DATE_MODIFIED  DATE,
  6    CREATED_BY     VARCHAR2(30 BYTE),
  7    MODIFIED_BY    VARCHAR2(30 BYTE)
  8  )
  9  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_INVALID_RESULTS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- IRT_PK	(Index)
SQL> --
SQL> CREATE UNIQUE INDEX IRT_PK ON NCI_INVALID_RESULTS
  2  (RESULT_VALUE)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE UNIQUE INDEX IRT_PK ON NCI_INVALID_RESULTS
                    *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- IRT_BRI_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER IRT_BRI_SEQ
  2   BEFORE INSERT
  3   ON NCI_INVALID_RESULTS
  4   REFERENCING OLD AS OLD NEW AS NEW
  5   FOR EACH ROW
  6  -- PL/SQL BLOCK
  7  BEGIN
  8  	if :new.CREATED_BY IS NULL THEN
  9  	:new.CREATED_BY := user;
 10  	END IF;
 11  	:new.DATE_CREATED := sysdate;
 12  END;
 13  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> --
SQL> -- IRT_BRU_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER IRT_BRU_SEQ
  2   BEFORE UPDATE
  3   ON NCI_INVALID_RESULTS
  4   REFERENCING OLD AS OLD NEW AS NEW
  5   FOR EACH ROW
  6  -- PL/SQL BLOCK
  7  BEGIN
  8  	 :new.MODIFIED_BY  := user;
  9  	 :new.DATE_MODIFIED := sysdate;
 10  END;
 11  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Data for NCI_INVALID_RESULTS
Data for NCI_INVALID_RESULTS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_INVALID_RESULTS_DATA.sql
SQL> --
SQL> --
SQL> Insert into NCI_INVALID_RESULTS
  2  	(RESULT_VALUE, DATE_CREATED, CREATED_BY)
  3   Values
  4  	('DUPLICATE TEST', TO_DATE('12/19/2002 16:28:04', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');
Insert into NCI_INVALID_RESULTS
*
ERROR at line 1:
ORA-00001: unique constraint (OPS$BDL.IRT_PK) violated 


SQL> Insert into NCI_INVALID_RESULTS
  2  	(RESULT_VALUE, DATE_CREATED, CREATED_BY)
  3   Values
  4  	('SEE BELOW', TO_DATE('12/19/2002 16:28:18', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');
Insert into NCI_INVALID_RESULTS
*
ERROR at line 1:
ORA-00001: unique constraint (OPS$BDL.IRT_PK) violated 


SQL> Insert into NCI_INVALID_RESULTS
  2  	(RESULT_VALUE, DATE_CREATED, CREATED_BY)
  3   Values
  4  	('SEE NOTE', TO_DATE('05/20/2005 12:54:51', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');
Insert into NCI_INVALID_RESULTS
*
ERROR at line 1:
ORA-00001: unique constraint (OPS$BDL.IRT_PK) violated 


SQL> Insert into NCI_INVALID_RESULTS
  2  	(RESULT_VALUE, DATE_CREATED, CREATED_BY)
  3   Values
  4  	('SEE COMMENT', TO_DATE('05/20/2005 12:55:02', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');
Insert into NCI_INVALID_RESULTS
*
ERROR at line 1:
ORA-00001: unique constraint (OPS$BDL.IRT_PK) violated 


SQL> COMMIT;

Commit complete.

SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_LABS
Object NCI_LABS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LABS.sql
SQL> --
SQL> -- NCI_LABS  (Table)
SQL> --
SQL> CREATE TABLE NCI_LABS
  2  (
  3    RECORD_ID	  NUMBER(10),
  4    PATIENT_ID	  VARCHAR2(10 BYTE),
  5    SAMPLE_DATETIME	  VARCHAR2(10 BYTE),
  6    TEST_COMPONENT_ID  VARCHAR2(8 BYTE),
  7    LABORATORY	  VARCHAR2(10 BYTE),
  8    LABTEST_NAME	  VARCHAR2(200 BYTE),
  9    LAB_GRADE	  VARCHAR2(13 BYTE),
 10    RESULT		  VARCHAR2(30 BYTE),
 11    UNIT		  VARCHAR2(30 BYTE),
 12    NORMAL_VALUE	  VARCHAR2(80 BYTE),
 13    PANEL_NAME	  VARCHAR2(50 BYTE),
 14    PATIENT_NAME	  VARCHAR2(50 BYTE),
 15    COMMENTS 	  VARCHAR2(100 BYTE),
 16    OC_LAB_PANEL	  VARCHAR2(20 BYTE),
 17    OC_LAB_QUESTION	  VARCHAR2(20 BYTE),
 18    OC_LAB_EVENT	  VARCHAR2(40 BYTE),
 19    OC_PATIENT_POS	  VARCHAR2(12 BYTE),
 20    LOAD_DATE	  DATE,
 21    LOAD_FLAG	  VARCHAR2(1 BYTE)	     DEFAULT 'N',
 22    RECEIVED_DATE	  DATE,
 23    DATE_CREATED	  DATE,
 24    DATE_MODIFIED	  DATE,
 25    CREATED_BY	  VARCHAR2(240 BYTE),
 26    MODIFIED_BY	  VARCHAR2(240 BYTE),
 27    TEST_CODE	  VARCHAR2(12 BYTE),
 28    CDW_RESULT_ID	  VARCHAR2(15 BYTE),
 29    OC_STUDY 	  VARCHAR2(15 BYTE),
 30    ERROR_REASON	  VARCHAR2(200 BYTE),
 31    OC_LAB_SUBSET	  VARCHAR2(12 BYTE),
 32    LOAD_MARK_DATE	  DATE,
 33    LOAD_MARK_USER	  VARCHAR2(30 BYTE)
 34  )
 35  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_LABS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NCI_LABS_IDX  (Index)
SQL> --
SQL> CREATE INDEX NCI_LABS_IDX ON NCI_LABS
  2  (LOAD_FLAG, PATIENT_ID)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NCI_LABS_IDX ON NCI_LABS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NCI_LABS_IDX10	(Index)
SQL> --
SQL> CREATE INDEX NCI_LABS_IDX10 ON NCI_LABS
  2  (LOAD_FLAG, RECORD_ID)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NCI_LABS_IDX10 ON NCI_LABS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NCI_LABS_IDX2  (Index)
SQL> --
SQL> CREATE INDEX NCI_LABS_IDX2 ON NCI_LABS
  2  (TEST_CODE, TEST_COMPONENT_ID)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NCI_LABS_IDX2 ON NCI_LABS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NCI_LABS_IDX5  (Index)
SQL> --
SQL> CREATE INDEX NCI_LABS_IDX5 ON NCI_LABS
  2  (OC_STUDY, PATIENT_ID, SAMPLE_DATETIME, LABTEST_NAME, RESULT,
  3  UNIT, LOAD_FLAG)
  4  LOGGING
  5  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NCI_LABS_IDX5 ON NCI_LABS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NCI_LABS_IDX6  (Index)
SQL> --
SQL> CREATE INDEX NCI_LABS_IDX6 ON NCI_LABS
  2  (OC_STUDY, LOAD_FLAG)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NCI_LABS_IDX6 ON NCI_LABS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NCI_LABS_IDX8  (Index)
SQL> --
SQL> CREATE INDEX NCI_LABS_IDX8 ON NCI_LABS
  2  (CDW_RESULT_ID)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;

Index created.

SQL> 
SQL> --
SQL> -- NCI_LABS_INDX3	(Index)
SQL> --
SQL> CREATE INDEX NCI_LABS_INDX3 ON NCI_LABS
  2  (OC_STUDY, RECORD_ID)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NCI_LABS_INDX3 ON NCI_LABS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NCI_LABS_LLI  (Index)
SQL> --
SQL> CREATE INDEX NCI_LABS_LLI ON NCI_LABS
  2  (LOAD_FLAG, OC_STUDY, OC_PATIENT_POS, SAMPLE_DATETIME, LABTEST_NAME,
  3  OC_LAB_QUESTION)
  4  LOGGING
  5  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NCI_LABS_LLI ON NCI_LABS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NCI_LABS_PTLAB	(Index)
SQL> --
SQL> CREATE INDEX NCI_LABS_PTLAB ON NCI_LABS
  2  (PATIENT_ID, LABORATORY)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;

Index created.

SQL> 
SQL> --
SQL> -- NCI_LABS_TEMP  (Index)
SQL> --
SQL> CREATE INDEX NCI_LABS_TEMP ON NCI_LABS
  2  (CDW_RESULT_ID, RECORD_ID)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;

Index created.

SQL> 
SQL> --
SQL> -- NCI_LAB_IDX4  (Index)
SQL> --
SQL> CREATE INDEX NCI_LAB_IDX4 ON NCI_LABS
  2  (OC_STUDY, OC_PATIENT_POS, OC_LAB_PANEL, OC_LAB_SUBSET, SAMPLE_DATETIME)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NCI_LAB_IDX4 ON NCI_LABS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NLB_BRI_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER NLB_BRI_SEQ
  2   BEFORE INSERT
  3   ON NCI_LABS
  4   REFERENCING OLD AS OLD NEW AS NEW
  5   FOR EACH ROW
  6  -- PL/SQL BLOCK
  7  BEGIN
  8   IF :new.record_id IS NULL THEN
  9  	    SELECT NLB_SEQ.NEXTVAL
 10  	    INTO :new.record_id
 11  	    FROM dual;
 12  	    IF SQL%notfound THEN
 13  	    raise_application_error(-20031,
 14  		'Warning on Insert: The NLB sequence generator is not working');
 15  	    END IF;
 16   END IF;
 17   if :new.CREATED_BY IS NULL THEN
 18  	:new.CREATED_BY := user;
 19   END IF;
 20   :new.DATE_CREATED := sysdate;
 21  END;
 22  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> --
SQL> -- NLB_BRU_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER NLB_BRU_SEQ
  2   BEFORE UPDATE
  3   ON NCI_LABS
  4   FOR EACH ROW
  5  BEGIN
  6  
  7  	 :new.MODIFIED_BY  := user;
  8  	 :new.DATE_MODIFIED := sysdate;
  9  END;
 10  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_LABS_ERROR_LABS
Object NCI_LABS_ERROR_LABS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LABS_ERROR_LABS.sql
SQL> --
SQL> -- NCI_LABS_ERROR_LABS  (Table)
SQL> --
SQL> CREATE TABLE NCI_LABS_ERROR_LABS
  2  (
  3    OC_STUDY       VARCHAR2(15 BYTE),
  4    PATIENT_ID     VARCHAR2(10 BYTE),
  5    ERROR_REASON   VARCHAR2(200 BYTE),
  6    CYCLE	      VARCHAR2(100 BYTE),
  7    DATE_CREATED   DATE,
  8    DATE_MODIFIED  DATE,
  9    CREATED_BY     VARCHAR2(30 BYTE),
 10    MODIFIED_BY    VARCHAR2(30 BYTE)
 11  )
 12  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_LABS_ERROR_LABS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NLB_BI	(Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER NLB_BI
  2   BEFORE INSERT
  3   ON NCI_LABS_ERROR_LABS
  4    FOR EACH ROW
  5  -- PL/SQL BLOCK
  6  BEGIN
  7  
  8   if :new.CREATED_BY IS NULL THEN
  9  	:new.CREATED_BY := user;
 10   END IF;
 11   :new.DATE_CREATED := sysdate;
 12  END;
 13  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> --
SQL> -- NLB_BU	(Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER NLB_BU
  2   BEFORE UPDATE
  3   ON NCI_LABS_ERROR_LABS
  4   FOR EACH ROW
  5  BEGIN
  6  
  7  	 :new.MODIFIED_BY  := user;
  8  	 :new.DATE_MODIFIED := sysdate;
  9  END;
 10  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_LAB_LOAD_CTL
Object NCI_LAB_LOAD_CTL
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LAB_LOAD_CTL.sql
SQL> 
SQL> CREATE TABLE NCI_LAB_LOAD_CTL
  2  (
  3    OC_STUDY 		  VARCHAR2(30 BYTE)  NOT NULL,
  4    OFF_STUDY_OFFSET_DAYS	  NUMBER,
  5    STOP_LAB_LOAD_FLAG	  VARCHAR2(1 BYTE)   DEFAULT 'N',
  6    DATE_CREATED		  DATE,
  7    DATE_MODIFIED		  DATE,
  8    CREATED_BY		  VARCHAR2(30 BYTE),
  9    MODIFIED_BY		  VARCHAR2(30 BYTE),
 10    OFF_STUDY_DCM		  VARCHAR2(30 BYTE),
 11    OFF_STUDY_QUEST		  VARCHAR2(30 BYTE),
 12    LOAD_OTHER_LABS		  VARCHAR2(1 BYTE),
 13    LABORATORY		  VARCHAR2(10 BYTE),
 14    BLANK_PRESTUDY_USE_ENROLL  VARCHAR2(1 BYTE),
 15    REVIEW_STUDY		  VARCHAR2(1 BYTE),
 16    LABTESTNAME_IS_OCLABQUEST  VARCHAR2(1 BYTE),
 17    PRESTUDY_LAB_DATE_DCM	  VARCHAR2(30 BYTE),
 18    PRESTUDY_LAB_DATE_QUEST	  VARCHAR2(30 BYTE),
 19    PRESTUDY_OFFSET_DAYS	  NUMBER,
 20    DATE_CHECK_CODE		  VARCHAR2(4 BYTE),
 21    ENROLLMENT_DATE_DCM	  VARCHAR2(30 BYTE),
 22    ENROLLMENT_DATE_QUEST	  VARCHAR2(30 BYTE)
 23  )
 24  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_LAB_LOAD_CTL
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.ENROLLMENT_DATE_QUEST IS 'Question Name where Enrollment Date Question Resides';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.LOAD_OTHER_LABS IS '''Y'' will allow Non Repeat Defaults to be processed, ''N'' will marked them as an Error';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.BLANK_PRESTUDY_USE_ENROLL IS 'Use Enrollment Date when Prestudy Date is null';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.LABTESTNAME_IS_OCLABQUEST IS 'Use LABTEST_NAME to populate OC_LAB_QUESTION';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.OFF_STUDY_DCM IS 'What is the name of the DCM where the Off Study Question can be located';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.OFF_STUDY_QUEST IS 'What is the QUESTION that contains the Off Study Date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.PRESTUDY_LAB_DATE_DCM IS 'DCM Name where PreStudy Lab Date Question Resides';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.PRESTUDY_LAB_DATE_QUEST IS 'Question Name where PreStudy Lab Date Question Resides';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.PRESTUDY_OFFSET_DAYS IS 'Days to add (+) or subtract (-) to PreStudy Lab Date prior to comparison';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.DATE_CHECK_CODE IS '"NONE" - No date check; "PRE" - PreStudy Only; "OFF" - OffStudy Only; "BOTH" - Check Pre and OffStudy';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.ENROLLMENT_DATE_DCM IS 'DCM Name where Enrollment Date Question Resides';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN NCI_LAB_LOAD_CTL.REVIEW_STUDY IS '''Y'' Lab Test need reviewed via LLI prior to loading. ''N'' load Lab Tests without review.';

Comment created.

SQL> 
SQL> 
SQL> CREATE INDEX LAB_LOAD_CTL_IDX ON NCI_LAB_LOAD_CTL
  2  (OC_STUDY)
  3  LOGGING
  4  TABLESPACE  &&USERS_TABLESPACE;
CREATE INDEX LAB_LOAD_CTL_IDX ON NCI_LAB_LOAD_CTL
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> CREATE INDEX LLC_IDX ON NCI_LAB_LOAD_CTL
  2  (OC_STUDY, REVIEW_STUDY)
  3  LOGGING
  4  TABLESPACE  &&USERS_TABLESPACE;
CREATE INDEX LLC_IDX ON NCI_LAB_LOAD_CTL
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> CREATE OR REPLACE TRIGGER LLC_BFI
  2  BEFORE INSERT
  3  ON NCI_LAB_LOAD_CTL
  4  REFERENCING NEW AS NEW OLD AS OLD
  5  FOR EACH ROW
  6  DECLARE
  7  
  8  /******************************************************************************
  9  	NAME:	    llc_bfi
 10  	PURPOSE:
 11  
 12  	REVISIONS:
 13  	Ver	   Date        Author		Description
 14  	---------  ----------  ---------------	------------------------------------
 15  	1.0	   4/7/2004	Patrick Conrad	1. Created this trigger.
 16  
 17  	NOTES:
 18  
 19  	Automatically available Auto Replace Keywords:
 20  	   Object Name:     llc_bfi
 21  	   Sysdate:	    4/7/2004
 22  	   Date and Time:   4/7/2004, 12:22:45 PM, and 4/7/2004 12:22:45 PM
 23  	   Username:	     (set in TOAD Options, Proc Templates)
 24  	   Table Name:	    NCI_LAB_LOAD_CTL (set in the "New PL/SQL Object" dialog)
 25  	   Trigger Options:  (set in the "New PL/SQL Object" dialog)
 26  ******************************************************************************/
 27  BEGIN
 28  	:NEW.Date_Created := SYSDATE;
 29  	:NEW.Created_by := USER;
 30  
 31  	EXCEPTION
 32  	  WHEN OTHERS THEN
 33  	    -- Consider logging the error and then re-raise
 34  	    RAISE;
 35  END llc_bfi;
 36  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> CREATE OR REPLACE TRIGGER LLC_BFU
  2  BEFORE UPDATE
  3  ON NCI_LAB_LOAD_CTL
  4  REFERENCING NEW AS NEW OLD AS OLD
  5  FOR EACH ROW
  6  DECLARE
  7  /******************************************************************************
  8  	NAME:
  9  	PURPOSE:
 10  
 11  	REVISIONS:
 12  	Ver	   Date        Author		Description
 13  	---------  ----------  ---------------	------------------------------------
 14  	1.0	   4/7/2004    Patrick Conrad	1. Created this trigger.
 15  
 16  	NOTES:
 17  
 18  	Automatically available Auto Replace Keywords:
 19  	   Object Name:
 20  	   Sysdate:	    4/7/2004
 21  	   Date and Time:   4/7/2004, 12:25:46 PM, and 4/7/2004 12:25:46 PM
 22  	   Username:	     (set in TOAD Options, Proc Templates)
 23  	   Table Name:	     (set in the "New PL/SQL Object" dialog)
 24  	   Trigger Options:  (set in the "New PL/SQL Object" dialog)
 25  ******************************************************************************/
 26  BEGIN
 27  	:NEW.Date_Modified := SYSDATE;
 28  	:NEW.Modified_By := USER;
 29  
 30  	EXCEPTION
 31  	  WHEN OTHERS THEN
 32  	    -- Consider logging the error and then re-raise
 33  	    RAISE;
 34  END ;
 35  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> CREATE PUBLIC SYNONYM NCI_LAB_LOAD_CTL FOR NCI_LAB_LOAD_CTL;
CREATE PUBLIC SYNONYM NCI_LAB_LOAD_CTL FOR NCI_LAB_LOAD_CTL
                      *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> GRANT SELECT ON  NCI_LAB_LOAD_CTL TO LABLOADER;

Grant succeeded.

SQL> 
SQL> GRANT DELETE, INSERT, SELECT, UPDATE ON  NCI_LAB_LOAD_CTL TO LABLOADER_REVIEW;

Grant succeeded.

SQL> 
SQL> GRANT DELETE, INSERT, SELECT, UPDATE ON  NCI_LAB_LOAD_CTL TO LABLOADER_ADMIN;

Grant succeeded.

SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Data for NCI_LAB_LOAD_CTL
Data for NCI_LAB_LOAD_CTL
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LAB_LOAD_CTL_DATA.sql
SQL> INSERT INTO NCI_LAB_LOAD_CTL ( OC_STUDY, OFF_STUDY_OFFSET_DAYS, STOP_LAB_LOAD_FLAG, DATE_CREATED,
  2  DATE_MODIFIED, CREATED_BY, MODIFIED_BY, OFF_STUDY_DCM, OFF_STUDY_QUEST, LOAD_OTHER_LABS, LABORATORY,
  3  BLANK_PRESTUDY_USE_ENROLL, REVIEW_STUDY, LABTESTNAME_IS_OCLABQUEST, PRESTUDY_LAB_DATE_DCM,
  4  PRESTUDY_LAB_DATE_QUEST, PRESTUDY_OFFSET_DAYS, DATE_CHECK_CODE, ENROLLMENT_DATE_DCM,
  5  ENROLLMENT_DATE_QUEST ) VALUES (
  6  'ALL', 0, 'N',  Sysdate,  NULL, USER, NULL, 'OFF STUDY SUMM', 'OFF_STDY_DT', 'N', 'CDW', 'N', 'N', 'N'
  7  , 'ENROLLMENT', 'PRESTUDY_LAB_DATE', 0, 'BOTH', 'ENROLLMENT', 'REG_DT');

1 row created.

SQL> 
SQL> INSERT INTO NCI_LAB_LOAD_CTL ( OC_STUDY, OFF_STUDY_OFFSET_DAYS, STOP_LAB_LOAD_FLAG, DATE_CREATED,
  2  DATE_MODIFIED, CREATED_BY, MODIFIED_BY, OFF_STUDY_DCM, OFF_STUDY_QUEST, LOAD_OTHER_LABS, LABORATORY,
  3  BLANK_PRESTUDY_USE_ENROLL, REVIEW_STUDY, LABTESTNAME_IS_OCLABQUEST, PRESTUDY_LAB_DATE_DCM,
  4  PRESTUDY_LAB_DATE_QUEST, PRESTUDY_OFFSET_DAYS, DATE_CHECK_CODE, ENROLLMENT_DATE_DCM,
  5  ENROLLMENT_DATE_QUEST ) VALUES (
  6  'LAB_LOADER', 0, 'N',  Sysdate,  NULL, USER, NULL, 'OFF STUDY SUMM', 'OFF_STDY_DT', 'Y',
  7  'CDW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

1 row created.

SQL> 
SQL> commit;

Commit complete.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_LAB_MAPPING
Object NCI_LAB_MAPPING
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LAB_MAPPING.sql
SQL> --
SQL> -- NCI_LAB_MAPPING  (Table)
SQL> --
SQL> CREATE TABLE NCI_LAB_MAPPING
  2  (
  3    ID		  NUMBER(10),
  4    TEST_COMPONENT_ID  VARCHAR2(8 BYTE),
  5    TEST_CODE	  VARCHAR2(12 BYTE),
  6    LABORATORY	  VARCHAR2(10 BYTE),
  7    LAB_PANEL	  VARCHAR2(50 BYTE),
  8    LAB_TEST 	  VARCHAR2(60 BYTE),
  9    OC_LAB_QUESTION	  VARCHAR2(20 BYTE),
 10    DATE_CREATED	  DATE,
 11    DATE_MODIFIED	  DATE,
 12    CREATED_BY	  VARCHAR2(30 BYTE),
 13    MODIFIED_BY	  VARCHAR2(30 BYTE)
 14  )
 15  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_LAB_MAPPING
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NCI_LAB_MAPPING_IDX  (Index)
SQL> --
SQL> CREATE INDEX NCI_LAB_MAPPING_IDX ON NCI_LAB_MAPPING
  2  (TEST_COMPONENT_ID, LABORATORY, OC_LAB_QUESTION)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;

Index created.

SQL> 
SQL> --
SQL> -- NLM_BRI_TRG  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER NLM_BRI_TRG
  2   BEFORE INSERT
  3   ON NCI_LAB_MAPPING
  4   REFERENCING OLD AS OLD NEW AS NEW
  5   FOR EACH ROW
  6  -- PL/SQL BLOCK
  7  BEGIN
  8  
  9  	 if :new.id is null then
 10  	   select NLM_seq.nextval
 11  	   into :new.id
 12  	   from dual;
 13  	end if;
 14  	if :new.CREATED_BY IS NULL THEN
 15  	:new.CREATED_BY := user;
 16  	END IF;
 17  	:new.DATE_CREATED := sysdate;
 18  END;
 19  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> --
SQL> -- NLM_BRU_TRG  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER NLM_BRU_TRG
  2   BEFORE UPDATE
  3   ON NCI_LAB_MAPPING
  4   REFERENCING OLD AS OLD NEW AS NEW
  5   FOR EACH ROW
  6  -- PL/SQL BLOCK
  7  BEGIN
  8  
  9  	 :new.MODIFIED_BY  := user;
 10  	 :new.DATE_MODIFIED := sysdate;
 11  END;
 12  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Data for NCI_LAB_MAPPING
Data for NCI_LAB_MAPPING
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LAB_MAPPING_DATA.sql
SQL> --
SQL> --
SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(100, '503019', 'WBC', 'CDW', 'WBC Count', 'WBC_SERUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(101, '503021', 'HGB', 'CDW', 'Hemoglobin', 'HEMOGLOBIN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(102, '503022', 'HCT', 'CDW', 'Hematocrit', 'HEMATOCRIT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(103, '503023', 'MCV', 'CDW', 'MCV', 'MCV', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(104, '503024', 'RDW', 'CDW', 'RBC Distributn Width', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(105, '503028', 'LYMPH', 'CDW', 'Lymphocytes', 'LYMPHOCYTES_SERUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(106, '503029', 'MONOS', 'CDW', 'Monocytes', 'MONOCYTES_SERUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(107, '503030', 'EOS', 'CDW', 'Eosinophils', 'EOSIN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(108, '503031', 'BASO', 'CDW', 'Basophils', 'BASO', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(109, '503032', 'POLAB', 'CDW', 'Polys Absolute', 'ANC', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(110, '503033', 'LYMAB', 'CDW', 'Lymphocytes Absolute', 'LYMPHOCYTES_ABS', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(111, '503034', 'MONAB', 'CDW', 'Monocytes Absolute', 'MONOCYTES_ABS', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(112, '503035', 'EOAB', 'CDW', 'Eosinophils Absolute', 'EOSIN_ABS', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(113, '503038', 'PTTA', 'CDW', 'PTT(Automated)', 'PTT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(114, '503044', 'NA', 'CDW', 'Sodium', 'SODIUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(115, '503052', 'K', 'CDW', 'Potassium', 'POTASSIUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(116, '503053', 'CL', 'CDW', 'Chloride', 'CHLORIDE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(117, '503054', 'CO2', 'CDW', 'Carbon Dioxide, Total', 'BICARB_SERUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(118, '503056', 'GLU', 'CDW', 'Glucose', 'GLUC_NONFASTING', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(119, '503057', 'BUN', 'CDW', 'Urea Nitrogen (blood)', 'BUN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(120, '503060', 'PROT', 'CDW', 'Protein, Total', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/21/2004 17:40:06', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(121, '503083', 'UPROT', 'CDW', 'Qualitative Protein', 'QUALITATIVE_PROTEIN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(122, '503093', 'URVOL', 'CDW', 'Urine Volume', 'VOLUME_URINE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(123, '503098', 'URK', 'CDW', 'Potassium, Urine', 'POTASSIUM_URINE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(124, '503100', 'URCL', 'CDW', 'Chloride, Urine', 'CHLORIDE_URINE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(125, '503113', 'FIO2', 'CDW', 'FIO2', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(126, '503114', 'HCO3A', 'CDW', 'Arterial HCO3', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(127, '503115', 'SO2A', 'CDW', 'Arterial O2 Sat.', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(128, '503133', 'VLYMP', 'CDW', 'Variant Lymphocytes', 'LYMPH_VAR_PC_SER', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('12/09/2004 16:51:18', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(129, '503142', 'ALK', 'CDW', 'Alkaline Phosphatase', 'ALK_PHOS', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(130, '503143', 'ALT', 'CDW', 'ALT/GPT(Alanine Trans.)', 'SGPT_ALT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(131, '503144', 'AST', 'CDW', 'AST/GOT(Aspartate Trans.)', 'SGOT_AST', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(132, '503145', 'TBIL', 'CDW', 'Bilirubin, Total', 'BILIRUBIN_TOTAL', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(133, '503146', 'ALB', 'CDW', 'Albumin', 'ALBUMIN_SERUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(134, '503147', 'CA', 'CDW', 'Calcium', 'CALCIUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(135, '503149', 'URIC', 'CDW', 'Uric Acid', 'URIC_ACID', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(136, '503299', 'TROPN', 'CDW', 'Troponin I', 'TROPONIN_I_BLD', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('03/26/2004 11:22:07', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(137, '503353', 'PSA', 'CDW', 'Prostatic Spec. Antig.', 'PSA', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(138, '503406', 'LDLD', 'CDW', 'LDL Cholest., Direct', 'LDL', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(139, '503451', 'FT4', 'CDW', 'FT4 (Free Thyroxine)', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(140, '507208', 'ALKRA', 'CDW', 'Alk Phos Ratio', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(141, '507304', 'PCOTA', 'CDW', 'Arterial PCO2', 'PCO2', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(142, '507305', 'PO2TA', 'CDW', 'Arterial PO2', 'PO2', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(143, '507367', 'COLOR', 'CDW', 'Color', 'COLOR', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(144, '507369', 'SPGR', 'CDW', 'Specific Gravity', 'SPECIFIC_GRAVITY', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(145, '507371', 'UGLUC', 'CDW', 'Qualitative Glucose', 'QUALITATIVE_GLUCOSE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(146, '507372', 'KETON', 'CDW', 'Ketones', 'KETONES', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(147, '507375', 'UHGB', 'CDW', 'Blood', 'BLOOD', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(148, '507376', 'URBC', 'CDW', 'RBC/HPF', 'RBC_HPF', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(149, '507378', 'SQUAM', 'CDW', 'Squamous Cells/HPF', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(150, '507381', 'OCCBL', 'CDW', 'Occult blood test', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(151, '507383', 'CDIFF', 'CDW', 'C. difficile toxin assay', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(152, '507385', 'INR', 'CDW', 'PT - INR', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(153, '507387', 'TRANS', 'CDW', 'Transitional Epi/HPF', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(154, '507389', 'UAMOR', 'CDW', 'Amorphous Sediment', 'AMORPH_SED_URN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('03/28/2005 12:35:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(155, '507392', 'RBCMF', 'CDW', 'RBC Morphology', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(156, '507393', 'MYEL-', 'CDW', 'Myelocytes', 'MYELOCYTES', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(157, '507395', 'COMM.', 'CDW', 'Comment:', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(158, '507397', 'COARS', 'CDW', 'Coarse Granular Casts', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(159, '507398', 'UBACT', 'CDW', 'Bacteria', 'BACTERIA', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(160, '507405', 'WBCMF', 'CDW', 'WBC Morphology', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(161, '507406', 'UCAOX', 'CDW', 'CaOx Crystals', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(162, '507415', 'META-', 'CDW', 'Metamyelocytes', 'METAMYELOCYTES', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(163, '507424', 'BLAS-', 'CDW', 'Blasts', 'BLAST_CELLS', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(164, '507431', 'FINE', 'CDW', 'Fine Granular Casts', 'FINE_GRAN_CAST_URINE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('12/09/2004 16:42:53', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(165, '507432', 'HBSAG', 'CDW', 'HBsAg (Hep B surf Ag)', 'HBS_AG', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(166, '507434', 'HIV', 'CDW', 'anti-HIV-1/2', 'HIV', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(167, '507451', 'SPGR2', 'CDW', 'SGcom2.', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(168, '507460', 'HLACW', 'CDW', 'HLA-Cw*', 'HLA_CW_ANTIGEN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('03/25/2005 14:55:59', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(169, '507471', 'HLADQ', 'CDW', 'HLA-DQ*', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(170, '507472', 'HLAD', 'CDW', 'HLA-DRB*', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(172, '507729', 'UTPR1', 'CDW', 'Protein, Quant. Urine', 'PROTEIN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(173, '507758', 'ACP1', 'CDW', 'Acid Phosphatase', 'ACID_PHOSPHATASE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(174, '508291', 'ALB1', 'CDW', 'Albumin', 'ALBUMIN_SERUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(175, '508292', 'CA01', 'CDW', 'Calcium', 'CALCIUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(176, '508293', 'MG01', 'CDW', 'Magnesium', 'MAGNESIUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(177, '508294', 'PHO01', 'CDW', 'Phosphorus, Inorganic', 'INORG_PHOS', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(178, '508295', 'NA1', 'CDW', 'Sodium', 'SODIUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(179, '508296', 'K1', 'CDW', 'Potassium', 'POTASSIUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(180, '508297', 'CL1', 'CDW', 'Chloride', 'CHLORIDE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(181, '508299', 'CREA1', 'CDW', 'Creatinine', 'CREATININE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(182, '508301', 'ALK1', 'CDW', 'Alkaline Phosphatase', 'ALK_PHOS', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(183, '508303', 'AST01', 'CDW', 'AST/GOT(Aspartate Trans.)', 'SGOT_AST', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(184, '508304', 'TBIL1', 'CDW', 'Bilirubin, Total', 'BILIRUBIN_TOTAL', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(185, '508306', 'LDH01', 'CDW', 'LD(Lactate Dehydrogen.)', 'LDH', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(186, '508307', 'PROT1', 'CDW', 'Protein, Total', 'TOT_PROT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(187, '508309', 'URI01', 'CDW', 'Uric Acid', 'URIC_ACID', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(188, '508316', 'GGTP1', 'CDW', 'GGT(Gamma Glutamyltran.)', 'SGGT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/21/2004 11:55:12', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(189, '508365', 'COMMT', 'CDW', 'Comment:', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(190, '508565', 'ULEUK', 'CDW', 'Leukocytes', 'LEUKOCYTES', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(191, '508566', 'UNITR', 'CDW', 'Nitrite', 'NITRITE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(192, '503104', 'MG', 'CDW', 'Magnesium', 'MAGNESIUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(193, '507394', 'NRBC', 'CDW', 'Nucleated RBC''s', 'NUCLEATED_RBC', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(194, '503058', 'TSH', 'CDW', 'TSH(Thyroid Stim Horm)', 'TSH', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(195, '503055', 'CREA', 'CDW', 'Creatinine', 'CREATININE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(196, '503112', 'TEMPA', 'CDW', 'Temperature', 'TEMPERATURE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(197, '503130', 'MYELO', 'CDW', 'Myelocytes', 'MYELOCYTES', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(198, '503148', 'PHOS', 'CDW', 'Phosphorus, Inorganic', 'INORG_PHOS', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(199, '503396', 'ALKHS', 'CDW', 'Alk Phos Heat Stable', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(200, '505209', 'CK', 'CDW', 'CK, Total', 'CPK', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(201, '507368', 'APEAR', 'CDW', 'Appearance', 'APPEARANCE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(202, '507374', 'UBILI', 'CDW', 'Bilirubin', 'BILIRUBIN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(203, '507377', 'UWBC', 'CDW', 'WBC/HPF', 'WBC_HPF', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(204, '507382', 'BANDS', 'CDW', 'Bands', 'BANDS', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(205, '507388', 'MUCOS', 'CDW', 'Mucous', 'MUCOUS_URN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('08/20/2004 10:49:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(206, '507391', 'VLYM-', 'CDW', 'Variant Lymphocytes', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(207, '507396', 'RENAL', 'CDW', 'Renal Epithelial/HPF', 'RENAL_EPITH_URINE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('05/20/2005 15:57:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(208, '507400', 'HYALN', 'CDW', 'Hyaline Casts', 'HYAL_CAST_URINE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('05/31/2005 14:34:40', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(209, '507416', 'PLTMF', 'CDW', 'Platelet Morphology', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(210, '507435', 'HCV', 'CDW', 'anti-HCV (Hep C Ab)', 'HEP_C', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(211, '507470', 'HLADR', 'CDW', 'HLA-DRB1*', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(213, '507513', 'BYEST', 'CDW', 'Budding Yeast', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(214, '507730', 'PREX1', 'CDW', 'Protein Excretion', 'PROT_QUANT_URINE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('08/17/2004 09:52:19', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(215, '508305', 'DBIL1', 'CDW', 'Bilirubin, Direct', 'BILIRUBIN_DIRECT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(216, '508308', 'CK1', 'CDW', 'CK, Total', 'CPK', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(217, '508416', 'TTST1', 'CDW', 'Testosterone, Total', 'TESTOSTERONE_TOTAL', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(218, '509172', 'ACP2', 'CDW', 'Acid Phosphatase', 'ACID_PHOSPHATASE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(219, '503150', 'DBIL', 'CDW', 'Bilirubin, Direct', 'BILIRUBIN_DIRECT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(220, '503026', 'POLYS', 'CDW', 'Polys', 'NEUT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(221, '503521', 'TTST', 'CDW', 'Testosterone, Total', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(222, '503020', 'RBC', 'CDW', 'RBC Count', 'RBC_SERUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(223, '508298', 'CO21', 'CDW', 'Carbon Dioxide, Total', 'BICARB_SERUM', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(224, '503025', 'PLT', 'CDW', 'Platelets', 'PLT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(225, '503040', 'FIBGA', 'CDW', 'Fibrinogen(Automated)', 'FIBRINOGEN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(226, '503151', 'LDH', 'CDW', 'LD(Lactate Dehydrogen.)', 'LDH', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(227, '507373', 'UROBI', 'CDW', 'Urobilinogen', 'UROBILINOGEN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(228, '507390', ' ', 'CDW', ' ', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(229, '507399', 'GIARD', 'CDW', 'Giardia EIA', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(230, '507447', 'OTHBS', 'CDW', 'Other Mayo Test', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(231, '507648', 'HYEST', 'CDW', 'Hyphenated Yeast', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(232, '508300', 'BUN1', 'CDW', 'Urea Nitrogen (blood)', 'BUN', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(233, '508677', 'COMM4', 'CDW', 'PTT Comment:', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(234, '507494', 'HLAA2', 'CDW', 'HLA-A*02 subtype', 'HLA_A02', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('03/25/2005 14:56:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(235, '503009', 'PTA', 'CDW', 'PT(Automated)', 'PT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(236, '503036', 'BASAB', 'CDW', 'Basophils Absolute', 'BASO_ABS', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(237, '503131', 'PRO', 'CDW', 'Promyelocytes', 'PROMYELOCYTES', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(238, '507370', 'URPH', 'CDW', 'pH', 'PH_URINE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(239, '507583', 'PHTA', 'CDW', 'Arterial pH', 'PH_BLOOD', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('02/02/2005 17:11:41', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(240, '508302', 'ALT02', 'CDW', 'ALT/GPT(Alanine Trans.)', 'SGPT_ALT', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(241, '503096', 'URNA', 'CDW', 'Sodium, Urine', 'SODIUM_URINE', TO_DATE('04/23/2003 16:40:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(262, '503018', 'C4', 'CDW', 'C4 Complement', 'C4_COMP', TO_DATE('06/25/2003 17:58:03', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(261, '503017', 'C3', 'CDW', 'C3 Complement', 'C3_COMP', TO_DATE('06/25/2003 17:51:53', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(263, '508343', 'C20A1', 'CDW', 'CD20 #', 'CD20_ABS', TO_DATE('06/25/2003 17:58:03', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(264, '508342', 'C20P1', 'CDW', 'CD20 %', 'CD20_PCT', TO_DATE('06/25/2003 17:58:03', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(265, '508583', 'CD25A', 'CDW', 'CD25 #', 'CD25_ABS', TO_DATE('06/25/2003 17:59:18', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(266, '508582', 'CD25P', 'CDW', 'CD25 %', 'CD25_PCT', TO_DATE('06/25/2003 17:59:18', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(267, '508330', 'CD3A1', 'CDW', 'CD3 #', 'CD3_ABS', TO_DATE('06/25/2003 18:00:50', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(268, '508329', 'CD3P1', 'CDW', 'CD3 %', 'CD3_PCT', TO_DATE('06/25/2003 18:00:50', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(269, '508381', '325AB', 'CDW', 'CD3/CD25 #', 'CD3_CD25_ABS', TO_DATE('06/25/2003 18:01:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(270, '508380', '325P', 'CDW', 'CD3/CD25 %', 'CD3_CD25_PCT', TO_DATE('06/25/2003 18:03:49', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(271, '508332', 'CD4A1', 'CDW', 'CD4 #', 'CD4_ABS', TO_DATE('06/25/2003 18:03:49', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(272, '508611', 'CD4P1', 'CDW', 'CD4 %', 'CD4_PCT', TO_DATE('06/25/2003 18:03:49', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(273, '508383', '425AB', 'CDW', 'CD4/CD25 #', 'CD4_CD25_ABS', TO_DATE('06/25/2003 18:03:49', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(274, '508382', '425P', 'CDW', 'CD4/CD25 %', 'CD4_CD25_PCT', TO_DATE('06/25/2003 18:03:49', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(275, '508599', '2562A', 'CDW', 'CD4/CD25/CD62L #', 'CD4_25_62L_ABS', TO_DATE('06/25/2003 18:04:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(276, '508598', '2562P', 'CDW', 'CD4/CD25/CD62L %', 'CD4_25_62L_PCT', TO_DATE('06/25/2003 18:04:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(277, '508597', '2569A', 'CDW', 'CD4/CD25/CD69 #', 'CD4_25_69_ABS', TO_DATE('06/25/2003 18:06:24', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(278, '508596', '2569P', 'CDW', 'CD4/CD25/CD69 %', 'CD4_25_69_PCT', TO_DATE('06/25/2003 18:06:24', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(279, '508337', 'C43A1', 'CDW', 'CD4/CD3 #', 'CD4_CD3_ABS', TO_DATE('06/25/2003 18:06:24', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(280, '508336', 'C43P1', 'CDW', 'CD4/CD3 %', 'CD4_CD3_PCT', TO_DATE('06/25/2003 18:06:24', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(281, '508406', '4RAAB', 'CDW', 'CD4/CD45RA #', 'CD4_CD45RA_ABS', TO_DATE('06/25/2003 18:07:28', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(282, '508373', '4RAP', 'CDW', 'CD4/CD45RA %', 'CD4_CD45RA_PCT', TO_DATE('06/25/2003 18:07:28', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(283, '508372', '4ROAB', 'CDW', 'CD4/CD45RO #', 'CD4_CD45RO_ABS', TO_DATE('06/25/2003 18:08:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(284, '508371', '4ROP', 'CDW', 'CD4/CD45RO %', 'CD4_CD45RO_PCT', TO_DATE('06/25/2003 18:08:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(285, '508334', 'CD8A1', 'CDW', 'CD8 #', 'CD8_ABS', TO_DATE('06/25/2003 18:09:36', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(286, '508612', 'CD8P1', 'CDW', 'CD8 %', 'CD8_PCT', TO_DATE('06/25/2003 18:09:36', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(287, '508339', 'C83A1', 'CDW', 'CD8/CD3 #', 'CD8_CD3_ABS', TO_DATE('06/25/2003 18:10:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(288, '508338', 'C83P1', 'CDW', 'CD8/CD3 %', 'CD8_CD3_PCT', TO_DATE('06/25/2003 18:10:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(289, '503380', 'CEA', 'CDW', 'CEA', 'CEA', TO_DATE('06/25/2003 18:11:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(290, '508616', '163A1', 'CDW', 'NK Cells #', 'NK_CELL_ABS', TO_DATE('06/25/2003 18:19:38', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(291, '508678', '163P1', 'CDW', 'NK Cells %', 'NK_CELL_PCT', TO_DATE('06/25/2003 18:19:38', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(292, '508618', 'TNKA1', 'CDW', 'NK Tcells #', 'NK_TCELL_ABS', TO_DATE('06/25/2003 18:19:38', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(293, '508617', 'TNKP1', 'CDW', 'NK Tcells %', 'NK_TCELL_PCT', TO_DATE('06/25/2003 18:19:38', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(321, '503572', 'A1C', 'CDW', 'Hgb A1C', 'HEMOGLOBIN_A1C', TO_DATE('12/03/2003 08:57:09', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(341, '507789', 'ACTH1', 'CDW', 'ACTH, Plasma', 'ACTH_BLD', TO_DATE('02/25/2004 16:03:12', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('02/25/2004 16:07:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(296, '503012', 'RF', 'CDW', 'Rheumatoid Factor', 'RHEUMATOID_FACTOR', TO_DATE('06/25/2003 18:24:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(297, '508335', 'T4T81', 'CDW', 'T4/T8 Ratio', 'T4_T8_RATIO', TO_DATE('06/25/2003 18:24:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(298, '509170', 'TRFR2', 'CDW', 'Transferrin', 'TRANSFERRIN', TO_DATE('06/25/2003 18:26:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(299, '508271', 'TRIG1', 'CDW', 'Triglycerides', 'TRIGLYCERIDES', TO_DATE('06/25/2003 18:26:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(301, '503587', 'TG', 'CDW', 'Anti-Thyroglobulin', 'ANTITHY_GLOB', TO_DATE('07/15/2003 18:50:48', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(302, '508355', 'ANAS', 'CDW', 'Anti-nuclear abs Screen', 'ANA', TO_DATE('07/15/2003 18:50:48', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(303, '503081', 'APEAR', 'CDW', 'Appearance', 'APPEARANCE', TO_DATE('07/15/2003 18:51:49', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(304, '503080', 'COLOR', 'CDW', 'Color', 'COLOR', TO_DATE('07/15/2003 18:52:35', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(305, '503917', 'SCREA', 'CDW', 'Creatinine', 'CREATININE', TO_DATE('07/15/2003 18:53:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(306, '503589', 'TPO', 'CDW', 'Thyroid PeroxidaseAB', 'ANTITH_PEROX', TO_DATE('07/15/2003 18:58:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(307, '503086', 'UROBI', 'CDW', 'Urobilinogen', 'UROBILINOGEN', TO_DATE('07/15/2003 18:59:40', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(308, '503082', 'URPH', 'CDW', 'pH', 'PH_URINE', TO_DATE('07/15/2003 19:00:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(361, '503216', 'CORT', 'CDW', 'Cortisol, Serum', 'CORTISOL_BLD', TO_DATE('02/26/2004 12:08:25', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(381, '507231', 'MIT1', 'CDW', 'Mitotane (Lysodren)', 'MITOTANE_BLD', TO_DATE('03/01/2004 15:29:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(401, '503356', 'CA125', 'CDW', 'CA 125', 'CA125', TO_DATE('03/09/2004 13:10:05', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('03/09/2004 13:10:38', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'CTDEV');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(421, '503610', 'FHGB', 'CDW', 'Hgb, Fetal', 'FETAL_HGB_BLD', TO_DATE('03/26/2004 11:21:00', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('03/26/2004 11:26:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(441, '509496', 'HTG1', 'CDW', 'Thyroglobulin', 'THYROGLOBULIN_BLD', TO_DATE('03/30/2004 14:57:43', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('03/30/2004 15:02:17', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(461, '503070', 'HAPTO', 'CDW', 'Haptoglobin', 'HAPTOGLOB_SER', TO_DATE('06/02/2004 15:30:12', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(481, '508923', 'PAP', 'CDW', 'Prostatic Acid Phos.,S', 'PAP_SERUM', TO_DATE('07/01/2004 13:31:29', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(881, '503561', 'HTG1', 'CDW', 'Thyroglobulin', 'THYROGLOBULIN_BLD', TO_DATE('07/27/2004 09:45:48', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(901, '509530', 'HIV', 'CDW', 'anti-HIV1/2 EIA', 'HIV', TO_DATE('07/27/2004 11:37:49', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(921, '503293', 'CAEXC', 'CDW', 'Calcium Excretion', 'CALCIUM_URINE', TO_DATE('08/16/2004 11:19:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(922, '503101', 'CLEXC', 'CDW', 'Chloride Excretion', 'CHLORIDE_URINE', TO_DATE('08/16/2004 11:25:53', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(941, '503097', 'NAEXC', 'CDW', 'Sodium Excretion', 'SODIUM_URINE', TO_DATE('08/17/2004 09:53:33', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(942, '503099', 'KEXC', 'CDW', 'Potassium Excretion', 'POTASSIUM_URINE', TO_DATE('08/17/2004 09:54:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(943, '507733', 'CREX1', 'CDW', 'Creatinine Excretion', 'CREAT_CL_UCORR_URN', TO_DATE('08/17/2004 09:55:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(961, '503046', 'T3', 'CDW', 'T3', 'T3', TO_DATE('08/20/2004 09:29:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(962, '503047', 'T4', 'CDW', 'T4', 'T4', TO_DATE('08/20/2004 09:29:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(963, '509479', 'FT41', 'CDW', 'FT4 (Free Thyroxine)', 'T4_FREE', TO_DATE('08/20/2004 09:29:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(964, '508310', 'AMY01', 'CDW', 'Amylase', 'AMYLASE_SERUM', TO_DATE('08/20/2004 09:29:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(965, '508311', 'LIP1', 'CDW', 'Lipase', 'LIPASE_SERUM', TO_DATE('08/20/2004 09:29:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(981, '503503', 'GAMTE', 'CDW', 'Gamma Globulin', 'GAMMA', TO_DATE('08/20/2004 10:51:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(982, '503502', 'BTATE', 'CDW', 'Beta Globulin', 'BETA', TO_DATE('08/20/2004 10:52:17', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(983, '503501', 'A2TE', 'CDW', 'Alpha 2 Globulin', 'ALPHA_2', TO_DATE('08/20/2004 10:52:56', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(984, '503500', 'A1TE', 'CDW', 'Alpha 1 Globulin', 'ALPHA_1', TO_DATE('08/20/2004 10:53:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(985, '507386', 'CLEAR', 'CDW', 'Creatinine Clearance', 'CREATININE_CLEARANCE', TO_DATE('08/20/2004 10:54:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(986, '507728', 'UCRE1', 'CDW', 'Creatinine, Urine', 'CREATININE_URINE', TO_DATE('08/20/2004 10:54:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(987, '508959', 'UPRE1', 'CDW', 'Pregnancy, Urine', 'PREGNANCY_TEST_URINE', TO_DATE('08/20/2004 10:55:55', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1001, '503292', 'URCAL', 'CDW', 'Calcium, Urine', 'CALCIUM_URINE', TO_DATE('08/24/2004 15:05:03', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1021, '503042', 'RETP', 'CDW', 'Reticulocyte %', 'RETIC', TO_DATE('09/10/2004 10:06:36', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1041, '507226', 'CA153', 'CDW', 'CA 15-3 (Cancer Ag)', 'CA15_3', TO_DATE('10/04/2004 14:18:51', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1042, '507378', 'SQUAM', 'CDW', 'Squamous Cells/HPF', 'SQUAM_EPITH_URINE', TO_DATE('10/04/2004 14:20:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1043, '503024', 'RDW', 'CDW', 'RBC Distributn Width', 'RDW_SER', TO_DATE('10/04/2004 14:20:41', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1044, '503042', 'RETP', 'CDW', 'Reticulocyte %', 'RETIC', TO_DATE('10/04/2004 14:21:15', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1045, '507492', 'HLAA', 'CDW', 'HLA-A*', 'HLA_A_ANTIGEN', TO_DATE('10/04/2004 14:22:03', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1046, '507493', 'HLAB', 'CDW', 'HLA-B*', 'HLA_B_ANTIGEN', TO_DATE('10/04/2004 14:24:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1047, '508284', 'HSV1G', 'CDW', 'HSV1 lgG', 'HSV1_SERUM', TO_DATE('10/04/2004 14:24:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1048, '503619', 'CMVG', 'CDW', 'Anti-Cytomegalov.IGG', 'CMV_SERUM', TO_DATE('10/04/2004 14:24:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1049, '509201', 'EBVG', 'CDW', 'Epstein-Barr VCA lgG', 'ANTI_EBV_VCA_IGG_SER', TO_DATE('10/04/2004 14:26:06', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1050, '503352', 'FSH', 'CDW', 'Follicle Stim. Hormone', 'FSH', TO_DATE('10/04/2004 14:26:56', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1051, '503043', 'RETA', 'CDW', 'Retic Absolute Ct', 'RETICULUM_CELLS', TO_DATE('10/04/2004 14:27:35', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1052, '507454', 'HTLV', 'CDW', 'anti-HTLV-I/II', 'ANTI_HTLV_I_II_SERUM', TO_DATE('10/04/2004 14:31:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1053, '508356', 'DNA1', 'CDW', 'Anti-dsDNA AB', 'ANTI_DSDNA_AB_BLD', TO_DATE('10/04/2004 14:32:44', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1054, '508285', 'HSV2G', 'CDW', 'HSV2 IgG', 'HSV2_SERUM', TO_DATE('10/04/2004 14:33:26', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1055, '509572', 'HSVM2', 'CDW', 'HSV Ab, IgM, S', TO_DATE('10/04/2004 14:36:32', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/05/2004 17:17:50', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1056, '507470', 'HLADR', 'CDW', 'HLA-DRB1*', 'HLA_DRB1_ANTIGEN', TO_DATE('10/04/2004 14:38:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1057, '509234', 'HLAD', 'CDW', 'HLA-DRB_*', 'HLA_DRB_BLD', TO_DATE('10/04/2004 14:38:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1058, '504408', 'CA199', 'CDW', 'CA 19-9', 'CA19_9', TO_DATE('10/04/2004 14:39:40', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1061, '503324', 'ALBSE', 'CDW', 'Albumin', 'ALBUMIN', TO_DATE('10/07/2004 15:57:32', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1082, '1', 'A/G RATIO', 'GEORGETOWN', 'A/G RATIO', 'ALBUM_GLOB_SERUM_RAT', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('12/02/2004 12:37:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1083, '2', 'ADD MAN DIFF', 'GEORGETOWN', 'ADD MAN DIFF', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1084, '3', 'ALB', 'GEORGETOWN', 'ALB', 'ALBUMIN', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1085, '4', 'ALK PHOS', 'GEORGETOWN', 'ALK PHOS', 'ALK_PHOS', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1086, '5', 'AMORPH SED', 'GEORGETOWN', 'AMORPH SED', 'AMORPH_SED_URN', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 15:41:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1087, '6', 'APPEARANCE', 'GEORGETOWN', 'APPEARANCE', 'APPEARANCE', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1088, '7', 'BASO #', 'GEORGETOWN', 'BASO #', 'BASO_ABS', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 14:42:35', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1089, '8', 'BASO %', 'GEORGETOWN', 'BASO %', 'BASO_PCT_BLD', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1090, '9', 'BILI', 'GEORGETOWN', 'BILI', 'BILIRUBIN', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1091, '10', 'BILI,D', 'GEORGETOWN', 'BILI,D', 'BILIRUBIN_DIRECT', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1092, '11', 'BILI,T', 'GEORGETOWN', 'BILI,T', 'BILIRUBIN_TOTAL', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1093, '12', 'BLOOD', 'GEORGETOWN', 'BLOOD', 'BLOOD', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1094, '13', 'BUN', 'GEORGETOWN', 'BUN', 'BUN', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1095, '14', 'CA', 'GEORGETOWN', 'CA', 'CALCIUM', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1096, '15', 'CEA', 'GEORGETOWN', 'CEA', 'CEA', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1097, '16', 'CL', 'GEORGETOWN', 'CL', 'CHLORIDE', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1098, '17', 'CO2', 'GEORGETOWN', 'CO2', 'BICARB', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 15:29:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1099, '18', 'COLOR', 'GEORGETOWN', 'COLOR', 'COLOR', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 15:29:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1188, '5154', 'IonCalc', 'NETTRIALS', 'N-RESULT', 'CALCIUM,IONIZED', 'CALCIUM_IONIZD_SERUM', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 16:54:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1189, '5155', 'CD3/IL-2R', 'NETTRIALS', 'N-RESULT', 'CD3/IL-2R (TAC)', 'CD3CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 16:55:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1190, '5156', 'CD3/IL-2R', 'NETTRIALS', 'P-RESULT', 'CD3/IL-2R (TAC)', 'CD3CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:03:36', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1191, '5157', 'CD4/IL-2R', 'NETTRIALS', 'N-RESULT', 'CD4/IL-2R (TAC)', 'CD4CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:05:05', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1192, '5158', 'CD4/IL-2R', 'NETTRIALS', 'P-RESULT', 'CD4/IL-2R (TAC)', 'CD4CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:05:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1193, '5159', 'CD7/IL-2R', 'NETTRIALS', 'N-RESULT', 'CD7/IL-2R (Tac)', 'CD7CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:07:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1194, '5160', 'CD7/IL-2R', 'NETTRIALS', 'P-RESULT', 'CD7/IL-2R (Tac)', 'CD7CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:08:18', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1195, '5161', 'CrystalUr', 'NETTRIALS', 'A-RESULT', 'CRYSTALS, URINE', 'CRYSTAL_URN', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:54:24', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1196, '5162', 'HTLV1Ab', 'NETTRIALS', 'A-RESULT', 'HTLV-1 ANTIBODY', 'HTLV1_ANTI_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:56:46', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1197, '5163', 'HTLV2Ab', 'NETTRIALS', 'A-RESULT', 'HTLV-2 ANTIBODY', 'HTLV2_ANTI_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('02/08/2005 12:33:04', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1198, '5164', 'OtherWBC', 'NETTRIALS', 'P-RESULT', 'OTHER, WBC DIFF', 'OTHR_DIFF', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:09:37', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1200, '5166', 'BiliDir', 'NETTRIALS', 'N-RESULT', 'BILIRUBIN,DIRECT', 'BILIRUBIN_DIRECT', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:57:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1203, '5169', 'CD7-/IL-2R', 'NETTRIALS', 'N-RESULT', 'CD7-/IL-2R (Tac)', 'CD7NCD25PE_AB_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:10:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1204, '5170', 'CD7-/IL-2R', 'NETTRIALS', 'P-RESULT', 'CD7-/IL-2R (Tac)', 'CD7NCD25PE_PC_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:11:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1205, '5171', 'TCRBChain', 'NETTRIALS', 'A-RESULT', 'DNA: TCR B CHAIN', 'DNA_TCRB_CHAIN_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:00:56', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1206, '5172', 'HAT + GAH', 'NETTRIALS', 'N-RESULT', 'HAT + GAH Number', 'HUMATPGAH_AB_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:00:46', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1208, '5174', 'UPC10+GAM', 'NETTRIALS', 'P-RESULT', 'UPC10 + GAM FITC', 'UPC10PGAMFITC_PC_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1209, '5175', 'AppearUr', 'NETTRIALS', 'A-RESULT', 'APPEARANCE, URINE', 'APPEARANCE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:00:18', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1210, '5176', 'CD56/CD3-', 'NETTRIALS', 'N-RESULT', 'CD16 or CD56/CD3-', 'CD16_CD56CD3N_AB_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:05:35', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1212, '5178', 'UCREA', 'NETTRIALS', 'N-RESULT', 'CREATININE, URINE', 'CREATININE_URINE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:06:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1213, '5179', 'EpithUr', 'NETTRIALS', 'A-RESULT', 'EPITHELIAL, URINE', 'SQUAM_EPITH_URINE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:13:03', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1214, '5180', 'MCV', 'NETTRIALS', 'N-RESULT', 'MCV (RBC Indices)', 'MCV', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:06:37', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1215, '5181', 'RBCIndices', 'NETTRIALS', 'P-RESULT', 'RDW (RBC Indices)', 'RDW_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:06:59', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1216, '5182', 'Hct', 'NETTRIALS', 'P-RESULT', 'HCT   (Hematocrit)', 'HEMATOCRIT', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:07:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1218, '5184', 'SerumOsmol', 'NETTRIALS', 'N-RESULT', 'OSMOLALITY (SERUM)', 'OSMOLALITY_SERUM', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:08:48', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1220, '5186', 'RenEpithUr', 'NETTRIALS', 'A-RESULT', 'RENAL EPITH, URINE', 'RENAL_EPITH_URINE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:09:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1221, '5187', 'TrEpithUr', 'NETTRIALS', 'A-RESULT', 'TRANS EPITH, URINE', 'TRANS_EPITH_URINE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:09:41', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1223, '5189', 'Urobil', 'NETTRIALS', 'A-RESULT', 'UROBILINOGEN, URINE', 'UROBILINOGEN', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:10:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1224, '5190', 'ANTI-TPO', 'NETTRIALS', 'N-RESULT', 'ANTI-THYROPEROXIDASE', 'ANTITH_PEROX', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:11:08', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1225, '5191', 'At-ThyGlb', 'NETTRIALS', 'N-RESULT', 'ANTITHYROGLOBULIN AB', 'ANTITHY_GLOB', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:11:23', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1226, '5192', 'CK', 'NETTRIALS', 'N-RESULT', 'CK (Creatine Kinase)', 'CPK', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:11:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1228, '5194', 'PregUr', 'NETTRIALS', 'A-RESULT', 'PREGNANCY TEST, URINE', 'PREGNANCY_TEST_URINE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:14:41', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1229, '5195', 'T3', 'NETTRIALS', 'N-RESULT', 'T3 (Triiodothyronine)', 'T3', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:15:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1231, '5197', 'SpGrav', 'NETTRIALS', 'N-RESULT', 'SPECIFIC GRAVITY, URINE', 'SPECIFIC_GRAVITY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:15:56', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1232, '5198', 'HAHA', 'NETTRIALS', 'A-RESULT', 'HUMAN ANTI-HUMAN ANTIBODY', 'HAHA_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:16:20', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1234, '5200', 'HAT+GAH', 'NETTRIALS', 'P-RESULT', 'HUMANIZED ANTI- TAC + GAH', 'HUMATPGAH_PC_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1235, '5201', 'BUN', 'NETTRIALS', 'N-RESULT', 'UREA NITROGEN, BLOOD (BUN)', 'BUN', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:17:10', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1035, '5001', 'C3', 'NETTRIALS', 'N-RESULT', 'C3', 'C3_COMP', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('12/01/2004 12:01:36', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1036, '5002', 'C4', 'NETTRIALS', 'N-RESULT', 'C4', 'C4_COMP', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:13:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1037, '5003', 'AGC', 'NETTRIALS', 'N-RESULT', 'AGC', 'ANC', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:14:29', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1038, '5004', 'CD2', 'NETTRIALS', 'P-RESULT', 'CD2', 'CD2_PCT_BLD', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1039, '5005', 'CD3', 'NETTRIALS', 'N-RESULT', 'CD3', 'CD3_ABS', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:53:13', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1040, '5006', 'CD3', 'NETTRIALS', 'P-RESULT', 'CD3', 'CD3_PCT', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1041, '5007', 'CD4', 'NETTRIALS', 'N-RESULT', 'CD4', 'CD4_ABS', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:55:59', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1042, '5008', 'CD4', 'NETTRIALS', 'P-RESULT', 'CD4', 'CD4_PCT', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1043, '5009', 'CD5', 'NETTRIALS', 'P-RESULT', 'CD5', 'CD5_PCT_BLD', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1044, '5010', 'CD7', 'NETTRIALS', 'N-RESULT', 'CD7', 'CD7_ABS', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:56:14', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1045, '5011', 'CD7', 'NETTRIALS', 'P-RESULT', 'CD7', 'CD7_PCT', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1046, '5012', 'CD8', 'NETTRIALS', 'N-RESULT', 'CD8', 'CD8_ABS', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:59:29', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1047, '5013', 'CD8', 'NETTRIALS', 'P-RESULT', 'CD8', 'CD8_PCT', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1048, '5014', 'CO2', 'NETTRIALS', 'N-RESULT', 'CO2', 'BICARB_SERUM', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:00:11', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1049, '5015', 'IgA', 'NETTRIALS', 'N-RESULT', 'IgA', 'IG_A_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:01:14', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1050, '5016', 'IgG', 'NETTRIALS', 'N-RESULT', 'IgG', 'IG_G_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:01:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1051, '5017', 'IgM', 'NETTRIALS', 'N-RESULT', 'IgM', 'IG_M_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:03:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1052, '5018', 'PO2', 'NETTRIALS', 'N-RESULT', 'PO2', 'PO2', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:04:23', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1053, '5019', 'RBC', 'NETTRIALS', 'N-RESULT', 'RBC', 'RBC_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:15:06', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1054, '5020', 'WBC', 'NETTRIALS', 'N-RESULT', 'WBC', 'WBC_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:05:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1055, '5021', 'AALC', 'NETTRIALS', 'N-RESULT', 'AALC', 'A_LYMPH', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:16:41', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1056, '5022', 'CD20', 'NETTRIALS', 'N-RESULT', 'CD20', 'CD20_ABS', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:06:02', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1057, '5023', 'CD20', 'NETTRIALS', 'P-RESULT', 'CD20', 'CD20_PCT', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1058, '5024', 'PCO2', 'NETTRIALS', 'N-RESULT', 'PCO2', 'PCO2', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:06:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1059, '5025', 'Zinc', 'NETTRIALS', 'N-RESULT', 'ZINC', 'ZINC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:06:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1060, '5026', 'Bands', 'NETTRIALS', 'N-RESULT', 'BANDS', 'BANDS', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:11:17', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1061, '5027', 'Bands', 'NETTRIALS', 'P-RESULT', 'BANDS', 'BANDS_PCT_BLD', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:04:09', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1062, '5028', 'Monos', 'NETTRIALS', 'P-RESULT', 'MONOS', 'MONOCYTES_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:13:47', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1063, '5029', 'Retic', 'NETTRIALS', 'P-RESULT', 'RETIC', 'RETIC', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:15:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1064, '5030', '7G7PE', 'NETTRIALS', 'N-RESULT', '7G7 PE', 'S7G7_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:15:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1065, '5031', '7G7PE', 'NETTRIALS', 'P-RESULT', '7G7 PE', 'S7G7_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1066, '5032', 'Folate', 'NETTRIALS', 'N-RESULT', 'FOLATE', 'FOLATE_BLD', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:17:12', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1067, '5033', 'INR-PT', 'NETTRIALS', 'N-RESULT', 'INR-PT', 'INR_PT', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:17:52', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1068, '5034', 'Lipase', 'NETTRIALS', 'N-RESULT', 'LIPASE', 'LIPASE_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:17:06', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1069, '5035', 'Lymphs', 'NETTRIALS', 'P-RESULT', 'LYMPHS', 'LYMPHOCYTES_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:17:55', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1070, '5036', 'Na', 'NETTRIALS', 'N-RESULT', 'SODIUM', 'SODIUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:18:18', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1071, '5037', 'TAC PE', 'NETTRIALS', 'N-RESULT', 'TAC PE', 'CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:18:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1072, '5038', 'TAC PE', 'NETTRIALS', 'P-RESULT', 'TAC PE', 'CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:19:09', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1073, '5039', 'Albumin', 'NETTRIALS', 'N-RESULT', 'ALBUMIN', 'ALBUMIN_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:20:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1074, '5040', 'Amylase', 'NETTRIALS', 'N-RESULT', 'AMYLASE', 'AMYLASE_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:21:12', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1187, '5153', 'BiliTot', 'NETTRIALS', 'N-RESULT', 'BILIRUBIN,TOTAL', 'BILIRUBIN_TOTAL', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:53:03', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1100, '19', 'CREAT', 'GEORGETOWN', 'CREAT', 'CREATININE', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1101, '20', 'EOS #', 'GEORGETOWN', 'EOS #', 'EOSIN_ABS', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1102, '21', 'EOS %', 'GEORGETOWN', 'EOS %', 'EOSIN', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1103, '22', 'GAP', 'GEORGETOWN', 'GAP', 'ANION_GAP_SER', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 15:41:15', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1104, '23', 'GLOBULIN', 'GEORGETOWN', 'GLOBULIN', 'GLOBULIN', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1105, '24', 'GLU', 'GEORGETOWN', 'GLU', 'GLUC_FASTING', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1106, '25', 'GLU', 'GEORGETOWN', 'GLU', 'GLUCOSE', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1107, '26', 'GRAN #', 'GEORGETOWN', 'GRAN #', 'NEUT_ABS', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 15:33:28', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1108, '27', 'GRAN %', 'GEORGETOWN', 'GRAN %', 'NEUT', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 15:33:28', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1109, '28', 'HEMATOCRIT', 'GEORGETOWN', 'HEMATOCRIT', 'HEMATOCRIT', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1110, '29', 'HEMOGLOBIN', 'GEORGETOWN', 'HEMOGLOBIN', 'HEMOGLOBIN', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1111, '30', 'IGA', 'GEORGETOWN', 'IGA', 'IG_A_SERUM', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1112, '31', 'IGG', 'GEORGETOWN', 'IGG', 'IG_G_SERUM', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1113, '32', 'IGM', 'GEORGETOWN', 'IGM', 'IG_M_SERUM', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1114, '33', 'INR', 'GEORGETOWN', 'INR', 'INR_PT', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1115, '34', 'K', 'GEORGETOWN', 'K', 'POTASSIUM', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1116, '35', 'KETONE', 'GEORGETOWN', 'KETONE', 'KETONES', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1117, '36', 'LDH', 'GEORGETOWN', 'LDH', 'LDH', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1118, '37', 'LEUK ESTER', 'GEORGETOWN', 'LEUK ESTER', 'LEUKOCYTE_ESTERASE', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1119, '38', 'LYMPH #', 'GEORGETOWN', 'LYMPH #', 'LYMPHOCYTES_ABS', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1120, '39', 'LYMPH %', 'GEORGETOWN', 'LYMPH %', 'LYMPHOCYTES_SERUM', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1121, '40', 'MCH', 'GEORGETOWN', 'MCH', 'MCH', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1122, '41', 'MCHC', 'GEORGETOWN', 'MCHC', 'MCHC', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1123, '42', 'MCV', 'GEORGETOWN', 'MCV', 'MCV', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1124, '43', 'MONO #', 'GEORGETOWN', 'MONO #', 'MONOCYTES_ABS', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1125, '44', 'MONO %', 'GEORGETOWN', 'MONO %', 'MONOCYTES_SERUM', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1126, '45', 'MPV', 'GEORGETOWN', 'MPV', 'MCP_BLD', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1127, '46', 'NA', 'GEORGETOWN', 'NA', 'SODIUM', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1128, '47', 'NITRATE', 'GEORGETOWN', 'NITRATE', 'NITRITE', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1129, '48', 'PH', 'GEORGETOWN', 'PH', 'PH_URINE', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1130, '49', 'PLT', 'GEORGETOWN', 'PLT', 'PLT', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1131, '50', 'PROT', 'GEORGETOWN', 'PROT', 'PROT_URN', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1132, '51', 'PT (PATIENT)', 'GEORGETOWN', 'PT (PATIENT)', 'PT', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1133, '52', 'PTT', 'GEORGETOWN', 'PTT', 'PTT', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1134, '53', 'RBC', 'GEORGETOWN', 'RBC', 'RBC_SERUM', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1135, '54', 'RBC', 'GEORGETOWN', 'RBC', 'RBC_URINE', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1136, '55', 'RDW', 'GEORGETOWN', 'RDW', 'RDW_SER', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1137, '56', 'RET CNT CALC', 'GEORGETOWN', 'RET CNT CALC', 'RETIC', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('12/02/2004 12:36:12', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1138, '57', 'SG', 'GEORGETOWN', 'SG', 'SPECIFIC_GRAVITY', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1139, '58', 'SGOT/AST', 'GEORGETOWN', 'SGOT/AST', 'SGOT_AST', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1140, '59', 'SGPT/ALT', 'GEORGETOWN', 'SGPT/ALT', 'SGPT_ALT', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1141, '60', 'SQUAM CELLS', 'GEORGETOWN', 'SQUAM CELLS', 'SQUAM_EPITH_URINE', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1142, '61', 'TOT PROT', 'GEORGETOWN', 'TOT PROT', 'TOT_PROT', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1143, '62', 'URIC', 'GEORGETOWN', 'URIC', 'URIC_ACID', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1144, '63', 'UROBIL', 'GEORGETOWN', 'UROBIL', 'UROBILINOGEN', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1145, '64', 'WBC', 'GEORGETOWN', 'WBC', 'WBC_URINE', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1146, '65', 'WBC', 'GEORGETOWN', 'WBC', 'WBC_SERUM', TO_DATE('10/12/2004 14:23:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1161, '503325', 'A1SE', 'CDW', 'Alpha 1 Globulin', 'ALPHA_1_GLOB_ABS_SER', TO_DATE('10/12/2004 17:49:11', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1162, '503326', 'A2SE', 'CDW', 'Alpha 2 Globulin', 'ALPHA_2_GLOB_ABS_SER', TO_DATE('10/12/2004 17:50:51', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1163, '503327', 'BTASE', 'CDW', 'Beta Globulin', 'BETA_GLOB_ABS_SER', TO_DATE('10/12/2004 18:01:38', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1164, '503328', 'GAMSE', 'CDW', 'Gamma Globulin', 'GAMMA_GLOB_ABS_SER', TO_DATE('10/12/2004 18:03:53', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1145, '5111', 'DTHResp', 'NETTRIALS', 'A-RESULT', 'DTH RESPONSE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1146, '5112', 'HIV Antibo', 'NETTRIALS', 'A-RESULT', 'HIV ANTIBODY', 'ANTI_HIV_1_2_SERUM', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:20:14', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1147, '5113', 'pHArter', 'NETTRIALS', 'N-RESULT', 'PH, Arterial', 'PH_BLOOD', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:21:26', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1148, '5114', 'TAC+GAM', 'NETTRIALS', 'N-RESULT', 'TAC+GAM FITC', 'TACPGAMFITC_AB_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:23:48', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1149, '5115', 'TAC+GAM', 'NETTRIALS', 'P-RESULT', 'TAC+GAM FITC', 'TACPGAMFITC_PC_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1150, '5116', 'URVOL', 'NETTRIALS', 'N-RESULT', 'URINE VOLUME', 'VOLUME_URINE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:24:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1151, '5117', 'CD3/4-/CD8', 'NETTRIALS', 'N-RESULT', 'CD3/CD4-/CD8-', 'CD3CD4NCD8N_ABS_BLD', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:22:08', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1152, '5118', 'CD3/4-/CD8', 'NETTRIALS', 'P-RESULT', 'CD3/CD4-/CD8-', 'CD3CD4NCD8N_PCT_BLD', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:22:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1153, '5119', 'UR NA/24', 'NETTRIALS', 'N-RESULT', 'SODIUM, URINE', 'SODIUM_URINE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:27:53', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1154, '5120', 'TT', 'NETTRIALS', 'N-RESULT', 'THROMBIN TIME', 'THROMBIN_TIME', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:32:17', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1156, '5122', 'Cytokine Ass', 'NETTRIALS', 'WT IFN', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1157, '5123', 'Cytokine Ass', 'NETTRIALS', 'WT IL5', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1158, '5124', 'Cytokine Ass', 'NETTRIALS', 'PHA IFN', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1159, '5125', 'Cytokine Ass', 'NETTRIALS', 'PHA IL5', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1160, '5126', 'Cytokine Ass', 'NETTRIALS', 'WT IFN SI', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1161, '5127', 'Cytokine Ass', 'NETTRIALS', 'WT IL5 SI', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1162, '5128', 'Cytokine Ass', 'NETTRIALS', 'PHA IFN SI', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1163, '5129', 'Cytokine Ass', 'NETTRIALS', 'PHA IL5 SI', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1164, '5130', 'Cytokine Ass', 'NETTRIALS', 'PR6V10 IFN', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1165, '5131', 'Cytokine Ass', 'NETTRIALS', 'PR6V10 IL5', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1166, '5132', 'Cytokine Ass', 'NETTRIALS', 'Harvest Date', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1167, '5133', 'Cytokine Ass', 'NETTRIALS', 'PR6V10 IFN SI', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1168, '5134', 'Cytokine Ass', 'NETTRIALS', 'PR6V10 IL5 SI', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1169, '5135', 'Cytokine Ass', 'NETTRIALS', 'Flu Matrix IFN', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1170, '5136', 'Cytokine Ass', 'NETTRIALS', 'Flu Matrix IL5', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1171, '5137', 'Cytokine Ass', 'NETTRIALS', 'Flu Matrix IFN SI', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1172, '5138', 'Cytokine Ass', 'NETTRIALS', 'Flu Matrix IL5 SI', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1173, '5139', 'Cytokine Ass', 'NETTRIALS', 'Media Control IFN', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1174, '5140', 'Cytokine Ass', 'NETTRIALS', 'Media Control IL5', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1175, '5141', 'Cytokine Ass', 'NETTRIALS', 'Induction Culture Setup Date', 'CYTOKINE ASSAY', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:45:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1176, '5142', 'GlucUr', 'NETTRIALS', 'A-RESULT', 'GLUCOSE, URINE', 'GLUCOSE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:35:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1177, '5143', 'KetonesUr', 'NETTRIALS', 'A-RESULT', 'KETONES, URINE', 'KETONES', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:46:29', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1178, '5144', 'Plt', 'NETTRIALS', 'N-RESULT', 'PLATELET COUNT', 'PLT', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:47:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1179, '5145', 'PREG TST', 'NETTRIALS', 'A-RESULT', 'PREGNANCY TEST', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('11/01/2004 15:19:35', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1180, '5146', 'ProtTot', 'NETTRIALS', 'N-RESULT', 'PROTEIN, TOTAL', 'TOT_PROT', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:11:51', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1181, '5147', 'ProtUr', 'NETTRIALS', 'A-RESULT', 'PROTEIN, URINE', 'PROTEIN', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:15:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1182, '5148', 'Soltac IL2', 'NETTRIALS', 'A-RESULT', 'SOLTAC, IL2-Ra', 'SOLTAC_IL2RA_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:49:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1183, '5149', 'T4', 'NETTRIALS', 'N-RESULT', 'T4 (Thyroxine)', 'T4', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:49:37', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1184, '5150', 'T4Free', 'NETTRIALS', 'N-RESULT', 'T4, FREE (FT4)', 'T4_FREE', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:49:56', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1185, '5151', 'AbLymph', 'NETTRIALS', 'P-RESULT', 'ABNORMAL LYMPHS', 'LYMPH_ABN_PC_SER', TO_DATE('10/21/2004 12:50:55', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:51:17', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1075, '5041', 'Calcium', 'NETTRIALS', 'N-RESULT', 'CALCIUM', 'CALCIUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:21:36', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1076, '5042', 'CD25PE', 'NETTRIALS', 'N-RESULT', 'CD25 PE', 'CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:22:37', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1077, '5043', 'CD25PE', 'NETTRIALS', 'P-RESULT', 'CD25 PE', 'CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1079, '5045', 'CD3/7G7', 'NETTRIALS', 'P-RESULT', 'CD3/7G7', 'CD37G7_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1080, '5046', 'CD3/Tac', 'NETTRIALS', 'N-RESULT', 'CD3/Tac', 'CD3CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:24:25', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1081, '5047', 'CD3/Tac', 'NETTRIALS', 'P-RESULT', 'CD3/Tac', 'CD3CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:24:56', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1083, '5049', 'CD4/7G7', 'NETTRIALS', 'P-RESULT', 'CD4/7G7', 'CD47G7_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1084, '5050', 'CD4/3', 'NETTRIALS', 'N-RESULT', 'CD4/CD3', 'CD4_CD3_ABS', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:26:06', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1087, '5053', 'CD8/CD3', 'NETTRIALS', 'P-RESULT', 'CD8/CD3', 'CD8_CD3_PCT', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1088, '5054', 'CD8/Tac', 'NETTRIALS', 'N-RESULT', 'CD8/Tac', 'CD8CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:25:33', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1091, '5057', 'HLAA', 'NETTRIALS', 'A-RESULT', 'HLA - A', 'HLA_A_ANTIGEN', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:28:06', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1092, '5058', 'HLAB', 'NETTRIALS', 'A-RESULT', 'HLA - B', 'HLA_B_ANTIGEN', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:28:29', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1093, '5059', 'HLAC', 'NETTRIALS', 'A-RESULT', 'HLA - C', 'HLA_C_ANTIGEN_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:26:02', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1095, '5061', 'CD3/30', 'NETTRIALS', 'N-RESULT', 'CD3/CD30', 'CD3CD30_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:26:32', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1096, '5062', 'CD3/30', 'NETTRIALS', 'P-RESULT', 'CD3/CD30', 'CD3CD30_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:27:04', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1097, '5063', 'CD4/CD30', 'NETTRIALS', 'N-RESULT', 'CD4/CD30', 'CD4_CD30_ABS_BLD', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:27:40', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1099, '5065', 'CD7/CD25', 'NETTRIALS', 'N-RESULT', 'CD7/CD25', 'CD7CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:29:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1100, '5066', 'Chloride', 'NETTRIALS', 'N-RESULT', 'CHLORIDE', 'CHLORIDE', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:33:05', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1101, '5067', 'Cortisol', 'NETTRIALS', 'N-RESULT', 'CORTISOL', 'CORTISOL_BLD', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:33:28', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1103, '5069', 'GAHFITC', 'NETTRIALS', 'P-RESULT', 'GAH-FITC', 'GAH_FITC_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1104, '5070', 'PTAuto', 'NETTRIALS', 'N-RESULT', 'PT  AUTO', 'PT', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:20:34', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1105, '5071', 'RBCCSF', 'NETTRIALS', 'N-RESULT', 'RBC, CSF', 'RBC_CSF', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:35:48', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1106, '5072', 'SQAMHPF', 'NETTRIALS', 'A-RESULT', 'SQAM/HPF', 'SQUAM_EPITH_URINE', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:36:13', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1108, '5074', 'L-LACTATE', 'NETTRIALS', 'N-RESULT', 'L-LACTATE', 'LACT_L_BLD', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:30:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1109, '5075', 'Mag', 'NETTRIALS', 'N-RESULT', 'MAGNESIUM', 'MAGNESIUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:38:19', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1110, '5076', 'pHUrine', 'NETTRIALS', 'N-RESULT', 'PH, URINE', 'PH_URINE', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:38:19', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1111, '5077', 'K', 'NETTRIALS', 'N-RESULT', 'POTASSIUM', 'POTASSIUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:38:37', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1113, '5079', 'UricAcid', 'NETTRIALS', 'N-RESULT', 'URIC ACID', 'URIC_ACID', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:39:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1114, '5080', 'CD4/CD45ra', 'NETTRIALS', 'N-RESULT', 'CD4/CD45RA', 'CD4_CD45RA_ABS', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:31:07', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1115, '5081', 'CD4/CD45ra', 'NETTRIALS', 'P-RESULT', 'CD4/CD45RA', 'CD4_CD45RA_PCT', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:32:47', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1116, '5082', 'CD4/CD45ro', 'NETTRIALS', 'N-RESULT', 'CD4/CD45RO', 'CD4_CD45RO_ABS', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('02/03/2005 15:11:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1118, '5084', 'Creat', 'NETTRIALS', 'N-RESULT', 'CREATININE', 'CREATININE', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:40:34', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1119, '5085', 'pHVen', 'NETTRIALS', 'N-RESULT', 'PH, Venous', 'PH_VENOUS_BLD', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:33:38', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1120, '5086', 'Phos', 'NETTRIALS', 'N-RESULT', 'PHOSPHORUS', 'INORG_PHOS', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:07:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1123, '5089', 'CD3/25PE', 'NETTRIALS', 'N-RESULT', 'CD3/CD25 PE', 'CD3CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:51:41', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1125, '5091', 'CD4/25PE', 'NETTRIALS', 'N-RESULT', 'CD4/CD25 PE', 'CD4CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:51:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1126, '5092', 'CD4/25PE', 'NETTRIALS', 'P-RESULT', 'CD4/CD25 PE', 'CD4CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1128, '5094', 'CD7/25PE', 'NETTRIALS', 'P-RESULT', 'CD7/CD25 PE', 'CD7CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1129, '5095', 'CD8/25PE', 'NETTRIALS', 'N-RESULT', 'CD8/CD25 PE', 'CD8CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:56:04', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1131, '5097', 'Cholestano', 'NETTRIALS', 'N-RESULT', 'CHOLESTANOL', 'CHOLESTANOL_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:34:09', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1132, '5098', 'Cholest', 'NETTRIALS', 'N-RESULT', 'CHOLESTEROL', 'CHOLESTEROL_TOTAL', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:19:09', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1134, '5100', 'Neuts', 'NETTRIALS', 'P-RESULT', 'NEUTROPHILS', 'NEUT', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:01:55', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1135, '5101', 'T4/T8', 'NETTRIALS', 'N-RESULT', 'T4/T8 RATIO', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 19:56:14', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1137, '5103', '7G+GAM', 'NETTRIALS', 'N-RESULT', '7G7+GAM FITC', 'S7G7PGAMFITC_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:02:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1139, '5105', 'BloodUr', 'NETTRIALS', 'A-RESULT', 'BLOOD, URINE', 'BLOOD', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:03:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1140, '5106', 'CastsUr', 'NETTRIALS', 'A-RESULT', 'CASTS, URINE', 'CASTS', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:03:38', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1141, '5107', 'CD7-/25PE', 'NETTRIALS', 'N-RESULT', 'CD7-/CD25 PE', 'CD7NCD25PE_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('11/01/2004 15:19:13', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1143, '5109', 'CMVAb', 'NETTRIALS', 'A-RESULT', 'CMV ANTIBODY', 'CMV_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:10:51', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1144, '5110', 'ColorUr', 'NETTRIALS', 'A-RESULT', 'COLOR, URINE', 'COLOR', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:17:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1237, '5203', 'FibFibr', 'NETTRIALS', 'N-RESULT', 'FIBRINOGEN FIB   (Fibrometer)', 'FIBR_FIB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:18:13', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1238, '5204', 'LDH', 'NETTRIALS', 'N-RESULT', 'LDH    (Lactate Dehydrogenase)', 'LDH', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:18:33', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1239, '5205', 'AlkPhos', 'NETTRIALS', 'N-RESULT', 'ALK PHOS (Alkaline Phosphatase)', 'ALK_PHOS', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:18:53', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1240, '5206', 'CEA', 'NETTRIALS', 'N-RESULT', 'CEA (Carcino-Embryonic Antigen)', 'CEA', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:21:42', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1241, '5207', 'CreatClCo', 'NETTRIALS', 'N-RESULT', 'CREATININE CLEARANCE (Corrected)', 'CREATININE_CLEARANCE', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:21:42', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1242, '5208', 'HCVAb', 'NETTRIALS', 'A-RESULT', 'HCV (Hepatitis C Virus) ANTIBODY', 'HEP_C', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:22:06', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1243, '5209', 'HBSAg', 'NETTRIALS', 'A-RESULT', 'HBS (Hepatitis B Surface) ANTIGEN', 'ANTI_HBS_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:22:48', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1244, '5210', 'TSH', 'NETTRIALS', 'N-RESULT', 'THYROID STIMULATING HORMONE (TSH)', 'TSH', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:23:07', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1245, '5211', 'HBSAb', 'NETTRIALS', 'A-RESULT', 'HBS (Hepatitis B Surface) ANTIBODY', 'ANTI_HBS_SERUM', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('02/01/2005 16:11:59', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1246, '5212', 'SGPT', 'NETTRIALS', 'N-RESULT', 'SGPT,ALT,GPT (Alanine Amino-Transferase)', 'SGPT_ALT', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:08:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1247, '5213', 'SGOT', 'NETTRIALS', 'N-RESULT', 'SGOT,OT,GOT,AST/GOT (Aspartate Amino-Transferase)', 'SGOT_AST', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:31:32', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1248, '5214', 'HCG', 'NETTRIALS', 'N-RESULT', 'HCG (Human Chorionic Gonadotropin, for Pregnancy,', 'HCG', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:33:40', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1199, '5165', 'BiliUrine', 'NETTRIALS', 'A-RESULT', 'BILIRUBIN, URINE', 'BILE', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:17:06', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1202, '5168', 'CD56/CD3', 'NETTRIALS', 'P-RESULT', 'CD16 or CD56/CD3', 'CD16_CD56CD3_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1207, '5173', 'UPC10+GAM', 'NETTRIALS', 'N-RESULT', 'UPC10 + GAM FITC', 'UPC10PGAMFITC_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:05:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1211, '5177', 'CD56/CD3-', 'NETTRIALS', 'P-RESULT', 'CD16 or CD56/CD3-', 'CD16_CD56CD3N_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1217, '5183', 'Hgb', 'NETTRIALS', 'N-RESULT', 'HGB   (Hemoglobin)', 'HEMOGLOBIN', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:07:48', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1222, '5188', 'Eos', 'NETTRIALS', 'P-RESULT', 'EOSINOPHILS   (Eos)', 'EOSIN', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:10:07', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1227, '5193', 'SedRate', 'NETTRIALS', 'N-RESULT', 'SEDIMENTATION   RATE', 'SED_RATE_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:12:11', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1233, '5199', 'HAT+GAH', 'NETTRIALS', 'N-RESULT', 'HUMANIZED ANTI- TAC + GAH', 'HUMATPGAH_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:16:50', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1078, '5044', 'CD3/7G7', 'NETTRIALS', 'N-RESULT', 'CD3/7G7', 'CD37G7_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:23:19', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1082, '5048', 'CD4/7G7', 'NETTRIALS', 'N-RESULT', 'CD4/7G7', 'CD47G7_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:24:50', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1085, '5051', 'CD4/3', 'NETTRIALS', 'P-RESULT', 'CD4/CD3', 'CD4_CD3_PCT', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1089, '5055', 'CD8/Tac', 'NETTRIALS', 'P-RESULT', 'CD8/Tac', 'CD8CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:37:48', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1094, '5060', 'Aldolase', 'NETTRIALS', 'N-RESULT', 'ALDOLASE', 'ALDOLASE', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:38:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1098, '5064', 'CD4/CD30', 'NETTRIALS', 'P-RESULT', 'CD4/CD30', 'CD4_CD30_PCT_BLD', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:39:02', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1102, '5068', 'GAHFITC', 'NETTRIALS', 'N-RESULT', 'GAH-FITC', 'GAH_FITC_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:34:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1107, '5073', 'Basos', 'NETTRIALS', 'P-RESULT', 'BASOPHILS', 'BASO', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:09:20', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1112, '5078', 'PTTAuto', 'NETTRIALS', 'N-RESULT', 'PTT  AUTO', 'PTT', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 14:20:42', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1117, '5083', 'CD4/CD45ro', 'NETTRIALS', 'P-RESULT', 'CD4/CD45RO', 'CD4_CD45RO_PCT', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('02/03/2005 15:10:42', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1122, '5088', 'WBCUr', 'NETTRIALS', 'A-RESULT', 'WBC, URINE', 'WBC_URINE', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:51:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1124, '5090', 'CD3/25PE', 'NETTRIALS', 'P-RESULT', 'CD3/CD25 PE', 'CD3CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1127, '5093', 'CD7/25PE', 'NETTRIALS', 'N-RESULT', 'CD7/CD25 PE', 'CD7CD25PE_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:54:28', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1130, '5096', 'CD8/25PE', 'NETTRIALS', 'P-RESULT', 'CD8/CD25 PE', 'CD8CD25PE_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1136, '5102', 'T4/T8', 'NETTRIALS', 'P-RESULT', 'T4/T8 RATIO', 'T4_T8_RATIO', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1138, '5104', '7G+GAM', 'NETTRIALS', 'P-RESULT', '7G7+GAM FITC', 'S7G7PGAMFITC_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1142, '5108', 'CD7-/25PE', 'NETTRIALS', 'P-RESULT', 'CD7-/CD25 PE', 'CD7NCD25PE_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/19/2004 20:09:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1086, '5052', 'CD8/CD3', 'NETTRIALS', 'N-RESULT', 'CD8/CD3', 'CD8_CD3_ABS', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:26:23', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1090, '5056', 'Glucose', 'NETTRIALS', 'N-RESULT', 'GLUCOSE', 'GLUC_NONFASTING', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:27:36', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1121, '5087', 'RBCUr', 'NETTRIALS', 'A-RESULT', 'RBC, URINE', 'RBC_URINE', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 10:41:37', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1133, '5099', 'HAT + GAH', 'NETTRIALS', 'P-RESULT', 'HAT + GAH %', 'HUMATPGAH_PC_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:00:46', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1155, '5121', 'Triglyc', 'NETTRIALS', 'N-RESULT', 'TRIGLYCERIDES', 'TRIGLYCERIDES', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:33:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1186, '5152', 'AtypLym', 'NETTRIALS', 'P-RESULT', 'ATYPICAL LYMPHS', 'A_LYMPH_PCT_BLD', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 11:52:38', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1201, '5167', 'CD56/CD3', 'NETTRIALS', 'N-RESULT', 'CD16 or CD56/CD3', 'CD16_CD56CD3_AB_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('11/01/2004 15:17:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1219, '5185', 'UrineOsmol', 'NETTRIALS', 'N-RESULT', 'OSMOLALITY (URINE)', 'OSMOLALITY_URINE', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:08:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1230, '5196', 'HTLV1Int', 'NETTRIALS', 'A-RESULT', 'DNA: HTLV-1 INTEGRATION', 'DNA_HTLV1_INTEG_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('10/20/2004 12:15:35', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_PANEL, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1236, '5202', 'FibAuto', 'NETTRIALS', 'N-RESULT', 'FIBRINOGEN AUTO  (Fib Auto)', 'FIBR_AUTO_SER', TO_DATE('10/21/2004 12:50:56', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('01/27/2005 17:39:50', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1181, '507731', 'URIC1', 'CDW', 'Uric Acid, Urine', 'URIC_ACID_URINE', TO_DATE('11/03/2004 11:14:47', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1201, '67', 'BAND ABS', 'GEORGETOWN', 'BAND ABS', 'BANDS', TO_DATE('12/02/2004 12:30:20', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1202, '68', 'BAND', 'GEORGETOWN', 'BAND', 'BANDS_PCT_BLD', TO_DATE('12/02/2004 12:30:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1221, '504997', 'IGA', 'CDW', 'IG A, Serum', 'IG_A_SERUM', TO_DATE('12/09/2004 16:41:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1222, '504996', 'IGG', 'CDW', 'IG G, Serum', 'IG_G_SERUM', TO_DATE('12/09/2004 16:41:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1223, '504998', 'IGM', 'CDW', 'IG M, Serum', 'IG_M_SERUM', TO_DATE('12/09/2004 16:41:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1224, '503013', 'CRP', 'CDW', 'C-Reactive Protein', 'C_REACT_PROT_SERUM', TO_DATE('12/09/2004 16:45:09', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1225, '503048', 'FERR', 'CDW', 'Ferritin', 'FERRITIN', TO_DATE('12/09/2004 16:46:24', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1226, '503010', 'PAB', 'CDW', 'Prealbumin', 'PREALBUMIN_BLD', TO_DATE('12/09/2004 16:48:04', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1227, '503172', 'CKMB', 'CDW', 'CK-MB (Immunoassay)', 'CKMB_CK2_ISOE_SER', TO_DATE('12/09/2004 16:49:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1228, '503316', 'CHOL', 'CDW', 'Cholesterol', 'CHOLESTEROL_TOTAL', TO_DATE('12/09/2004 16:53:29', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1241, '503320', 'BHCGS', 'CDW', 'b-hCG, Serum', 'PREGNANCY', TO_DATE('01/27/2005 18:44:46', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1261, '509642', 'CA27', 'CDW', 'CA 27.29', 'CA27_29', TO_DATE('02/15/2005 06:47:33', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1281, '504141', 'DAT', 'CDW', 'Direct Antiglobulin Test', 'COOMBS_TEST', TO_DATE('02/25/2005 12:25:50', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('03/01/2005 14:37:07', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1301, '508012', 'UIF', 'CDW', 'Iodine, Free, Urine', 'IOD_FREE_24H_URN', TO_DATE('03/04/2005 14:22:33', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1302, '504206', 'UIC', 'CDW', 'Iodine, Consentration, Ur', 'IOD_CONC_24H_URN', TO_DATE('03/04/2005 14:24:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1321, '507496', 'AUSAB', 'CDW', 'anti-HBs (HepB surf Ab)', 'ANTI_HBS_SERUM', TO_DATE('03/14/2005 20:52:05', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1341, '509206', 'CH50', 'CDW', 'Complement Total,CH50', 'COMPLEMENT', TO_DATE('03/16/2005 17:59:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1361, '508374', '8ROP', 'CDW', 'CD8/CD45RO %', 'CD8_CD45RO_PC_BLD', TO_DATE('03/28/2005 09:57:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1362, '508376', '8RAP', 'CDW', 'CD8/CD45RA %', 'CD8_CD45RA_PC_BLD', TO_DATE('03/28/2005 09:58:41', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1363, '508378', '3DRP', 'CDW', 'CD3/HLA-DR %', 'CD3_HLADR_PC_BLD', TO_DATE('03/28/2005 10:22:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1364, '508384', '825P', 'CDW', 'CD8/CD25 %', 'CD8_CD25_PC_BLD', TO_DATE('03/28/2005 10:23:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1365, '508419', 'C857P', 'CDW', 'CD8/CD57 %', 'CD8_CD57_PC_BLD', TO_DATE('03/28/2005 10:23:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1366, '508421', '8DRP', 'CDW', 'CD8/HLA-DR %', 'CD8_HLADR_PC_BLD', TO_DATE('03/28/2005 10:23:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1367, '508433', '3857P', 'CDW', 'CD3/CD8/CD57 %', 'CD3_CD8_CD57_PC_BLD', TO_DATE('03/28/2005 10:23:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1368, '508511', '4DRP', 'CDW', 'CD4/HLA-DR %', 'CD4_HLADR_PC_BLD', TO_DATE('03/28/2005 10:23:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1369, '508540', '445P', 'CDW', 'CD4/CD45RA+CD45RO %', 'CD4CD45APC45O_PC_BLD', TO_DATE('03/28/2005 10:23:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1370, '508542', '462LP', 'CDW', 'CD4/CD62L %', 'CD4_CD62L_PC_BLD', TO_DATE('03/28/2005 10:23:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1371, '508544', '462PP', 'CDW', 'CD4/CD62L/CD45RA %', 'CD4CD62LCD45A_PC_BLD', TO_DATE('03/28/2005 10:23:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1372, '508546', '462NP', 'CDW', 'CD4/CD62L-/CD45RA %', 'CD4CD62LNC45A_PC_BLD', TO_DATE('03/28/2005 10:23:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1373, '508548', '845P', 'CDW', 'CD8/CD45RA+CD45RO %', 'CD8CD45ACD45O_PC_BLD', TO_DATE('03/28/2005 10:23:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1374, '508549', '845AB', 'CDW', 'CD8/CD45RA+CD45RO #', 'CD8CD45ACD45O_AB_BLD', TO_DATE('03/28/2005 10:23:26', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1375, '508550', '862LP', 'CDW', 'CD8/CD62L %', 'CD8_CD62L_PC_BLD', TO_DATE('03/28/2005 10:23:26', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1376, '508552', '862PP', 'CDW', 'CD8/CD62L/CD45RA %', 'CD8CD62LCD45A_PC_BLD', TO_DATE('03/28/2005 10:23:26', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1377, '508554', '862NP', 'CDW', 'CD8/CD62L-/CD45RA %', 'CD8CD62LNC45A_PC_BLD', TO_DATE('03/28/2005 10:23:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1378, '508556', '3828P', 'CDW', 'CD3/CD8/CD28 %', 'CD3_CD8_CD28_PC_BLD', TO_DATE('03/28/2005 10:23:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1379, '508613', '348P1', 'CDW', 'DNT Cells %', 'DNT_PC_SER', TO_DATE('03/28/2005 10:23:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1380, '509355', '348A1', 'CDW', 'DNT Cells #', 'DNT_AB_SER', TO_DATE('03/28/2005 10:23:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1381, '509358', '8ROAB', 'CDW', 'CD8/CD45RO #', 'CD8_CD45RO_AB_BLD', TO_DATE('03/28/2005 10:23:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1382, '509359', '8RAAB', 'CDW', 'CD8/CD45RA #', 'CD8_CD45RA_AB_BLD', TO_DATE('03/28/2005 10:23:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1383, '509360', '3DRAB', 'CDW', 'CD3/HLA-DR #', 'CD3_HLADR_AB_BLD', TO_DATE('03/28/2005 10:23:44', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1384, '509363', '825AB', 'CDW', 'CD8/CD25 #', 'CD8_CD25_AB_BLD', TO_DATE('03/28/2005 10:23:44', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1385, '509368', 'C857A', 'CDW', 'CD8/CD57 #', 'CD8_CD57_AB_BLD', TO_DATE('03/28/2005 10:23:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1386, '509369', '3857A', 'CDW', 'CD3/CD8/CD57 #', 'CD3_CD8_CD57_AB_BLD', TO_DATE('03/28/2005 10:23:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1387, '509396', '4DRAB', 'CDW', 'CD4/HLA-DR #', 'CD4_HLADR_AB_BLD', TO_DATE('03/28/2005 10:23:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1388, '509397', '8DRAB', 'CDW', 'CD8/HLA-DR #', 'CD8_HLADR_AB_BLD', TO_DATE('03/28/2005 10:23:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1389, '509411', '445AB', 'CDW', 'CD4/CD45RA+CD45RO #', 'CD4CD45APC45O_AB_BLD', TO_DATE('03/28/2005 10:23:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1390, '509412', '462LA', 'CDW', 'CD4/CD62L #', 'CD4_CD62L_AB_BLD', TO_DATE('03/28/2005 10:23:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1391, '509413', '462PA', 'CDW', 'CD4/CD62L/CD45RA #', 'CD4CD62LCD45A_AB_BLD', TO_DATE('03/28/2005 10:23:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1392, '509414', '462NA', 'CDW', 'CD4/CD62L-/CD45RA #', 'CD4CD62LNC45A_AB_BLD', TO_DATE('03/28/2005 10:23:45', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1393, '509415', '862LA', 'CDW', 'CD8/CD62L #', 'CD8_CD62L_AB_BLD', TO_DATE('03/28/2005 10:23:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1394, '509416', '862PA', 'CDW', 'CD8/CD62L/CD45RA #', 'CD8CD62LCD45A_AB_BLD', TO_DATE('03/28/2005 10:23:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1395, '509417', '862NA', 'CDW', 'CD8/CD62L-/CD45RA #', 'CD8CD62LNC45A_AB_BLD', TO_DATE('03/28/2005 10:23:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1396, '509418', '3828A', 'CDW', 'CD3/CD8/CD28 #', 'CD3_CD8_CD28_AB_BLD', TO_DATE('03/28/2005 10:23:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1401, '508863', 'HDLC1', 'CDW', 'HDL Cholesterol', 'HDL', TO_DATE('03/28/2005 12:36:14', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1402, '509866', 'TROP1', 'CDW', 'Troponin I', 'TROPONIN_I_BLD', TO_DATE('03/28/2005 14:21:11', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1421, '507446', 'HBC', 'CDW', 'anti-HBc (HepB core Ab)', 'ANTI_HBC_SERUM', TO_DATE('03/29/2005 10:53:53', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1441, '509318', 'C19A2', 'CDW', 'CD19 #', 'CD19_ABS_BLD', TO_DATE('04/11/2005 10:01:08', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1442, '509317', 'C19P2', 'CDW', 'CD19 %', 'CD19_PCT_BLD', TO_DATE('04/11/2005 10:01:08', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1461, '508417', 'ESTS1', 'CDW', 'Estradiol, Serum', 'ESTRADIOL_BLD', TO_DATE('04/21/2005 12:25:08', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1481, '508866', 'RPR', 'CDW', 'RPR Syphilis Sero', 'RPR_SERUM', TO_DATE('05/03/2005 18:05:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1501, '503544', '%FR', 'CDW', '% Free Testosterone', 'TESTOST_FREE_PC_SER', TO_DATE('05/20/2005 12:10:10', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1502, '503647', 'TFRE', 'CDW', 'Free Testosterone', 'TESTOST_FREE_SER', TO_DATE('05/20/2005 12:16:48', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, DATE_MODIFIED, CREATED_BY, MODIFIED_BY)
  3   Values
  4  	(1503, '509609', 'ESR', 'CDW', 'Sed Rate', 'ESR', TO_DATE('05/20/2005 12:22:31', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('05/24/2005 13:47:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1504, '503351', 'LH', 'CDW', 'Luteinizing Hormone(LH)', 'LH_BLD', TO_DATE('05/20/2005 12:39:17', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1505, '503351', 'LH', 'CDW', 'Luteinizing Hormone(LH)', 'LH_BLD', TO_DATE('05/20/2005 12:39:18', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1506, '503705', 'ACAG', 'CDW', 'Anti-Cardiolipin IGG', 'CARDIOLIPIN_IGG_BLD', TO_DATE('05/20/2005 12:46:35', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1507, '503706', 'ACAM', 'CDW', 'Anti-Cardiolipin IGM', 'CARDIOLIPIN_IGM_BLD', TO_DATE('05/20/2005 12:50:36', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1508, '508357', 'ENAS1', 'CDW', 'Anti-ENA Screen', 'ENA_SCREEN_BLD', TO_DATE('05/20/2005 12:57:14', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1509, '508359', 'SM1', 'CDW', 'Anti-Smith(SM) AB', 'ANTI_SM_AB_BLD', TO_DATE('05/20/2005 13:00:56', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1510, '508504', 'RNP1', 'CDW', 'Anti-SmRNP Aby', 'ANTI_RNP_AB_BLD', TO_DATE('05/20/2005 13:05:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1513, '508360', 'SSA1', 'CDW', 'Anti-Sjogren"s sy.A', 'ANTI_SSA_AB_BLD', TO_DATE('05/20/2005 13:09:24', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1514, '508361', 'SSB1', 'CDW', 'Anti-Sjogren"s sy.B', 'ANTI_SSB_AB_BLD', TO_DATE('05/20/2005 13:13:37', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1515, '503648', 'FT3B', 'CDW', 'Free T3', 'T3_FREE_BLD', TO_DATE('05/20/2005 13:17:11', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1516, '503469', 'CSFGL', 'CDW', 'Glucose, CSF', 'GLUCOSE_CSF', TO_DATE('05/20/2005 13:20:08', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1517, '503073', 'INSUL', 'CDW', 'Insulin', 'INSULIN', TO_DATE('05/20/2005 13:44:32', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1518, '503470', 'CSFPT', 'CDW', 'Protein, CSF', 'PROTEIN_CSF', TO_DATE('05/20/2005 13:48:09', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1519, '509467', 'SCLA4', 'CDW', 'STACLOT LA', 'LUP_ACOAG_STACLT_BLD', TO_DATE('05/20/2005 16:01:11', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1520, '507462', 'TXG', 'CDW', 'Toxopl. IgG, Dye Test', 'TOXO_IGG_BLD', TO_DATE('05/20/2005 16:05:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1521, '507463', 'TXM', 'CDW', 'Toxopl. IgM,ELISA', 'TOXO_IGM_BLD', TO_DATE('05/20/2005 16:08:47', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1522, '503102', 'ICA', 'CDW', 'Ionized Calcium', 'CALCIUM_IONIZD_SERUM', TO_DATE('05/20/2005 16:16:11', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1523, '508312', 'IRON1', 'CDW', 'Iron', 'IRON_SERUM', TO_DATE('05/20/2005 16:18:41', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1541, '504060', 'MBPC', 'CDW', 'Myelin Basic Prot. CSF', 'MBPC_CSF', TO_DATE('05/25/2005 14:38:02', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1542, '510007', 'WBCCS', 'CDW', 'WBC Count, CSF', 'WBC_CSF', TO_DATE('05/25/2005 14:38:06', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1561, '509470', 'CCP', 'CDW', 'Anti-CCP Ab', 'ANTI_CCP_BLD', TO_DATE('06/06/2005 10:18:14', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1562, '507982', 'AMA', 'CDW', 'Anti-Mitochondr.Abs', 'ANTI_MITOCHL_AB_BLD', TO_DATE('06/06/2005 10:32:39', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1563, '503354', 'SB2M', 'CDW', 'Beta-2-Microglob.,Serum', 'BETA2_MICROGLOB_BLD', TO_DATE('06/06/2005 10:35:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1564, '503155', 'ANCAC', 'CDW', 'C-ANCA', 'C_ANCA_BLD', TO_DATE('06/06/2005 10:42:51', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1565, '508407', 'CMA', 'CDW', 'Centromere Abs', 'ANTI_CENTRM_AB_BLD', TO_DATE('06/06/2005 10:45:16', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1566, '509233', 'LKM1', 'CDW', 'Liver Kidney Ab', 'ANTI_LK_MCRS_AB_BLD', TO_DATE('06/06/2005 10:49:20', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1567, '503545', 'MMAS', 'CDW', 'Methylmalonic Acid,Serum', 'METHL_ACID_QUANT_BLD', TO_DATE('06/06/2005 11:08:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1568, '507473', 'ANCAP', 'CDW', 'P-ANCA', 'P_ANCA_BLD', TO_DATE('06/06/2005 11:10:23', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1569, '508560', '25OHD', 'CDW', 'Vitamin D 25-OH', 'VITD_25HYDRX_BLD', TO_DATE('06/06/2005 11:13:18', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1570, '503598', 'DHVD', 'CDW', 'Vitamin D, 1,25-Dihydroxy', 'VITD_1_25DIHYDRX_BLD', TO_DATE('06/06/2005 11:15:49', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1571, '507491', 'PCAS', 'CDW', 'Antiparietal Ab,Serum', 'ANTI_PARIET_AB_BLD', TO_DATE('06/06/2005 11:18:21', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1581, '505338', 'PTHWM', 'CDW', 'PTH, Intact', 'PTH_INTACT_BLD', TO_DATE('06/13/2005 15:33:56', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1601, '505089', 'FK506', 'CDW', 'Tacrolimus(FK506)', 'TACROLIM_BLD', TO_DATE('06/29/2005 15:29:05', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1602, '509477', 'CYCL1', 'CDW', 'Cyclosporine', 'CYCLOSPOR_BLD', TO_DATE('06/29/2005 15:31:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1621, '509501', 'EONE1', 'CDW', 'Estrone, Serum', 'ESTRONE_SER', TO_DATE('07/11/2005 14:12:35', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1622, '509503', 'ESTS3', 'CDW', 'Estradiol, Enhanced', 'ESTRADIOL_ENHANC_BLD', TO_DATE('07/11/2005 14:14:43', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1623, '507791', 'SOMC1', 'CDW', 'IGF-1 (Somatomedin C)', 'IGF_SOMAT_C_BLD', TO_DATE('07/11/2005 14:16:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1641, '70', 'MAG', 'GEORGETOWN', 'MAG', 'MAGNESIUM', TO_DATE('07/18/2005 13:15:13', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1642, '72', 'AMYLASE', 'GEORGETOWN', 'AMYLASE', 'AMYLASE_SERUM', TO_DATE('07/18/2005 13:17:36', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1643, '69', 'LIPASE', 'GEORGETOWN', 'LIPASE', 'LIPASE_SERUM', TO_DATE('07/18/2005 13:20:01', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1644, '71', 'PHOS', 'GEORGETOWN', 'PHOS', 'PHOSPHORUS_SERUM', TO_DATE('07/18/2005 13:21:57', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1661, '509288', 'HIVV1', 'CDW', 'HIV Viral Load Blood', 'HIV_VIRAL_LD_BLD', TO_DATE('08/04/2005 13:44:46', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1681, '509814', 'TG1', 'CDW', 'Anti-Thyroglobulin', 'ANTITH_GLOB_IXV_BLD', TO_DATE('08/17/2005 11:28:55', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1682, '509815', 'TPO1', 'CDW', 'Thyroid PeroxidaseAB', 'ANTITH_PEROX_IXV_BLD', TO_DATE('08/17/2005 11:32:40', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1701, '509475', 'CRPHS', 'CDW', 'C-React Prot. High Sensitivity', 'C_REACT_PROT_HS_BLD', TO_DATE('08/25/2005 16:03:26', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1721, '503620', 'CMVM', 'CDW', 'Anti-Cytomegalov.IGM', 'ANTI_CMV_IGM_AB_SER', TO_DATE('12/08/2005 15:01:03', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1722, '510005', 'APPCS', 'CDW', 'Appearance, CSF', 'APPEARANCE_CSF', TO_DATE('12/08/2005 15:05:06', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1723, '510004', 'COLCS', 'CDW', 'Color, CSF', 'COLOR_CSF', TO_DATE('12/08/2005 15:08:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1724, '510006', 'RBCCS', 'CDW', 'RBC Count, CSF', 'RBC_CSF', TO_DATE('12/08/2005 15:13:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1725, '510054', 'TOTCS', 'CDW', 'Total Cell Count, CSF', 'TOT_CELL_CT_CSF', TO_DATE('12/08/2005 15:19:49', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1726, '507456', 'CVPCR', 'CDW', 'CMV PCR', 'CMV_DNA_PCR_CSF', TO_DATE('12/08/2005 15:22:11', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1727, '510008', 'LYMCS', 'CDW', 'Lymphocytes, CSF', 'LYMPH_PCT_CSF', TO_DATE('12/08/2005 15:24:08', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1728, '510010', 'OTHCS', 'CDW', 'Other Cells, CSF', 'OTH_CELL_CT_CSF', TO_DATE('12/08/2005 15:27:20', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1729, '503923', 'PYR2', 'CDW', 'Pyruvate, Blood', 'PYRUVATE_BLD', TO_DATE('12/08/2005 15:29:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1730, '503170', 'LACT', 'CDW', 'L-Lactate', 'LACTATE_PL', TO_DATE('12/08/2005 15:30:56', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_LAB_MAPPING
  2  	(ID, TEST_COMPONENT_ID, TEST_CODE, LABORATORY, LAB_TEST, OC_LAB_QUESTION, DATE_CREATED, CREATED_BY)
  3   Values
  4  	(1731, '506968', 'CSFLA', 'CDW', 'L-Lactate, CSF', 'LACTATE_CSF', TO_DATE('12/08/2005 15:33:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> COMMIT;

Commit complete.

SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_LAB_VALID_PATIENTS
Object NCI_LAB_VALID_PATIENTS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LAB_VALID_PATIENTS.sql
SQL> --
SQL> -- NCI_LAB_VALID_PATIENTS	(Table)
SQL> --
SQL> CREATE TABLE NCI_LAB_VALID_PATIENTS
  2  (
  3    PT_ID	    VARCHAR2(200 BYTE),
  4    PT	    VARCHAR2(10 BYTE),
  5    STUDY	    VARCHAR2(14 BYTE),
  6    NCI_INST_CD  VARCHAR2(200 BYTE),
  7    LABORATORY   VARCHAR2(10 BYTE)
  8  )
  9  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_LAB_VALID_PATIENTS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NLVP_IDX1  (Index)
SQL> --
SQL> CREATE INDEX NLVP_IDX1 ON NCI_LAB_VALID_PATIENTS
  2  (PT_ID, NCI_INST_CD)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NLVP_IDX1 ON NCI_LAB_VALID_PATIENTS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NLVP_IDX2  (Index)
SQL> --
SQL> CREATE INDEX NLVP_IDX2 ON NCI_LAB_VALID_PATIENTS
  2  (STUDY)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NLVP_IDX2 ON NCI_LAB_VALID_PATIENTS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NLVP_IDX3  (Index)
SQL> --
SQL> CREATE INDEX NLVP_IDX3 ON NCI_LAB_VALID_PATIENTS
  2  (PT_ID, LABORATORY)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;

Index created.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_STUDY_LABDCM_EVENTS_TB
Object NCI_STUDY_LABDCM_EVENTS_TB
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_STUDY_LABDCM_EVENTS_TB.sql
SQL> --
SQL> -- NCI_STUDY_LABDCM_EVENTS_TB  (Table)
SQL> --
SQL> CREATE TABLE NCI_STUDY_LABDCM_EVENTS_TB
  2  (
  3    OC_STUDY 	NUMBER(10),
  4    STUDY		VARCHAR2(15 BYTE),
  5    DCM_NAME 	VARCHAR2(16 BYTE),
  6    SUBSET_NAME	VARCHAR2(8 BYTE),
  7    QUESTION_NAME	VARCHAR2(20 BYTE),
  8    CPE_NAME 	VARCHAR2(16 BYTE),
  9    REPEAT_SN	NUMBER(4),
 10    OC_LAB_QUESTION	VARCHAR2(200 BYTE),
 11    DISPLAY_SN	NUMBER(4)
 12  )
 13  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_STUDY_LABDCM_EVENTS_TB
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NSLDET_IDX1  (Index)
SQL> --
SQL> CREATE INDEX NSLDET_IDX1 ON NCI_STUDY_LABDCM_EVENTS_TB
  2  (STUDY, DCM_NAME, SUBSET_NAME, QUESTION_NAME, REPEAT_SN,
  3  OC_LAB_QUESTION)
  4  LOGGING
  5  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NSLDET_IDX1 ON NCI_STUDY_LABDCM_EVENTS_TB
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> --
SQL> -- NSLDET_IDX2  (Index)
SQL> --
SQL> CREATE INDEX NSLDET_IDX2 ON NCI_STUDY_LABDCM_EVENTS_TB
  2  (STUDY, OC_LAB_QUESTION, DISPLAY_SN)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NSLDET_IDX2 ON NCI_STUDY_LABDCM_EVENTS_TB
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_UOM_MAPPING
Object NCI_UOM_MAPPING
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_UOM_MAPPING.SQL
SQL> 
SQL> --
SQL> -- NCI_UOM_MAPPING  (Table)
SQL> --
SQL> CREATE TABLE NCI_UOM_MAPPING
  2  (
  3    SOURCE	      VARCHAR2(30 BYTE),
  4    PREFERRED      VARCHAR2(30 BYTE),
  5    LABORATORY     VARCHAR2(10 BYTE),
  6    CREATED_DATE   DATE,
  7    CREATED_BY     VARCHAR2(30 BYTE),
  8    MODIFIED_DATE  DATE,
  9    MODIFIED_BY    VARCHAR2(30 BYTE)
 10  )
 11  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_UOM_MAPPING
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> --
SQL> -- NCI_UOM_MAPPING_INDX  (Index)
SQL> --
SQL> CREATE INDEX NCI_UOM_MAPPING_INDX ON NCI_UOM_MAPPING
  2  (LABORATORY, SOURCE, PREFERRED)
  3  LOGGING
  4  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NCI_UOM_MAPPING_INDX ON NCI_UOM_MAPPING
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> --
SQL> -- NUM_BRI_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER NUM_BRI_SEQ
  2  	BEFORE INSERT
  3  	ON NCI_UOM_MAPPING
  4  	FOR EACH ROW
  5  BEGIN
  6  
  7  	IF :new.CREATED_BY IS NULL THEN
  8  	   :new.CREATED_BY := substr(user,1,30);
  9  	END IF;
 10  
 11  	:new.CREATED_DATE := sysdate;
 12  END;
 13  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> --
SQL> -- NUM_BRU_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER NUM_BRU_SEQ
  2  	BEFORE UPDATE
  3  	ON NCI_UOM_MAPPING
  4  	FOR EACH ROW
  5  BEGIN
  6  
  7  	:new.MODIFIED_BY   := substr(user,1,30);
  8  	:new.MODIFIED_DATE := sysdate;
  9  
 10  END;
 11  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Data for NCI_UOM_MAPPING
Data for NCI_UOM_MAPPING
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_UOM_MAPPING_DATA.SQL
SQL> --
SQL> --
SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY)
  3   Values
  4  	('/mm3', 'mm3', 'CDW');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, MODIFIED_DATE, MODIFIED_BY)
  3   Values
  4  	('K/uL', 'Thousand/microL', 'CDW', TO_DATE('08/13/2004 07:10:20', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, MODIFIED_DATE, MODIFIED_BY)
  3   Values
  4  	('M/uL', 'Million/microL', 'CDW', TO_DATE('08/13/2004 07:10:36', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY)
  3   Values
  4  	('ug/dL', 'mcg/L', 'CDW');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY)
  3   Values
  4  	('uIU/mL', 'microIU/mL', 'CDW');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY)
  3   Values
  4  	('ug/L', 'mcg/L', 'CDW');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY)
  3   Values
  4  	('ug/mL', 'mcg/mL', 'CDW');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('1000/microL', 'Thousand/microL', 'CDW', TO_DATE('08/11/2004 19:19:53', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('M/microL', 'Million/microL', 'CDW', TO_DATE('08/12/2004 09:43:42', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('U/L', 'Unit/L', 'CDW', TO_DATE('08/12/2004 09:44:53', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('U/mL', 'Unit/mL', 'CDW', TO_DATE('08/12/2004 09:45:22', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('1000/MICRO-L', 'Thousand/microL', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('1000/MM3', 'Thousand/mm3', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('EU/ML', 'EU/mL', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('G/DL', 'g/dL', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('IU/ML', 'IUnit/mL', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('MG/DL', 'mg/dL', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('MICRO-IU/ML', 'microIU/mL', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('ML/MIN/1.73M2', 'mL/min/1.73/BSA', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('MM/HR', 'mm/hr', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('MM3', 'mm3', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('MMOL/L', 'mmol/L', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('NG/ML', 'ng/mL', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('SEC', 'sec', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('U/L', 'Unit/L', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('U/MM3', 'Unit/mm3', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY, MODIFIED_DATE, MODIFIED_BY)
  3   Values
  4  	('U/mL', 'Unit/mL', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', TO_DATE('09/15/2004 12:22:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('UL', 'Unit/L', 'NETTRIALS', TO_DATE('10/21/2004 12:43:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('IU/mL', 'IUnit/mL', 'CDW', TO_DATE('10/25/2004 15:11:51', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('UL', 'Unit/L', 'CDW', TO_DATE('11/18/2004 14:38:54', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('mg/24h', 'mg/24hr', 'CDW', TO_DATE('11/18/2004 14:39:41', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('g/24h', 'g/24hr', 'CDW', TO_DATE('11/18/2004 14:40:05', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('mmol/24h', 'mmol/24hr', 'CDW', TO_DATE('02/25/2005 09:01:26', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('IU/L', 'IUnit/L', 'CDW', TO_DATE('03/10/2005 05:45:30', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY, MODIFIED_DATE, MODIFIED_BY)
  3   Values
  4  	('ug/spec', 'mcg/spec', 'CDW', TO_DATE('03/11/2005 14:35:35', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', TO_DATE('03/15/2005 11:16:27', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY, MODIFIED_DATE, MODIFIED_BY)
  3   Values
  4  	('PG/ML', 'pg/mL', 'CDW', TO_DATE('03/22/2005 15:20:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', TO_DATE('03/22/2005 15:21:37', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('units', 'Unit', 'CDW', TO_DATE('04/05/2005 05:56:59', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('titer', 'Titer', 'CDW', TO_DATE('04/05/2005 05:57:15', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('CAE Units', 'CAE Unit', 'CDW', TO_DATE('04/05/2005 05:58:05', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY, MODIFIED_DATE, MODIFIED_BY)
  3   Values
  4  	('IU', 'Iunit', 'CDW', TO_DATE('04/05/2005 05:58:20', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', TO_DATE('06/01/2005 15:00:31', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('Iunits', 'Iunit', 'CDW', TO_DATE('04/29/2005 14:39:37', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('mcIU/mL', 'microIU/mL', 'CDW', TO_DATE('04/29/2005 14:40:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('uunit/mL', 'microU/mL', 'CDW', TO_DATE('05/31/2005 16:07:32', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('mm/h', 'mm/hr', 'CDW', TO_DATE('06/06/2005 14:52:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('U', 'Unit', 'CDW', TO_DATE('06/07/2005 17:18:08', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('umol/L', 'micromol/L', 'CDW', TO_DATE('06/10/2005 12:04:14', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY, MODIFIED_DATE, MODIFIED_BY)
  3   Values
  4  	('U/L', 'Unit/L', 'GEORGETOWN', TO_DATE('07/19/2005 10:14:03', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL', TO_DATE('07/19/2005 10:27:20', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('NG/ML', 'ng/mL', 'CDW', TO_DATE('08/18/2005 11:24:20', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('Index Value', 'Index value', 'CDW', TO_DATE('08/18/2005 14:11:00', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> Insert into NCI_UOM_MAPPING
  2  	(SOURCE, PREFERRED, LABORATORY, CREATED_DATE, CREATED_BY)
  3   Values
  4  	('/mcL', 'Cells/microL', 'CDW', TO_DATE('09/19/2005 15:41:58', 'MM/DD/YYYY HH24:MI:SS'), 'OPS$BDL');

1 row created.

SQL> COMMIT;

Commit complete.

SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_UPLOAD_SYBASE_LAB_RESULTS
Object NCI_UPLOAD_SYBASE_LAB_RESULTS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_UPLOAD_SYBASE_LAB_RESULTS.sql
SQL> --
SQL> -- NCI_UPLOAD_SYBASE_LAB_RESULTS  (Table)
SQL> --
SQL> CREATE TABLE NCI_UPLOAD_SYBASE_LAB_RESULTS
  2  (
  3    RESULT_ID	     VARCHAR2(20 BYTE),
  4    PATIENT_ID	     VARCHAR2(15 BYTE),
  5    RECORD_DATETIME	     VARCHAR2(30 BYTE),
  6    TEST_ID		     NUMBER(10),
  7    TEST_CODE	     VARCHAR2(10 BYTE),
  8    TEST_NAME	     VARCHAR2(30 BYTE),
  9    TEST_UNIT	     VARCHAR2(15 BYTE),
 10    ORDER_ID 	     VARCHAR2(20 BYTE),
 11    PARENT_TEST_ID	     NUMBER(10),
 12    ORDER_NUMBER	     NUMBER(7,2),
 13    ACCESSION	     CHAR(6 BYTE),
 14    TEXT_RESULT	     VARCHAR2(20 BYTE),
 15    NUMERIC_RESULT	     NUMBER(10,3),
 16    HI_LOW_FLAG	     CHAR(2 BYTE),
 17    UPDATED_FLAG	     NUMBER(5),
 18    LOW_RANGE	     NUMBER(9,4),
 19    HIGH_RANGE	     NUMBER(9,4),
 20    REPORTED_DATETIME     VARCHAR2(30 BYTE),
 21    RECEIVED_DATETIME     VARCHAR2(30 BYTE),
 22    COLLECTED_DATETIME    VARCHAR2(30 BYTE),
 23    MASKED		     CHAR(1 BYTE),
 24    RANGE		     VARCHAR2(80 BYTE),
 25    SPECIMEN_ID	     NUMBER(10),
 26    SPECIMEN_MODIFIER_ID  NUMBER(10),
 27    QUALITATIVE_DICT_ID   NUMBER(10),
 28    INSERTED_DATETIME     VARCHAR2(30 BYTE),
 29    UPDATE_DATETIME	     VARCHAR2(30 BYTE),
 30    UPLOAD_DATE	     DATE
 31  )
 32  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_UPLOAD_SYBASE_LAB_RESULTS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_LAB_LOAD_PATIENT_LOAD
Object NCI_LAB_LOAD_PATIENT_LOAD
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LAB_LOAD_PATIENT_LOAD.sql
SQL> 
SQL> --
SQL> -- NCI_LAB_LOAD_PATIENT_LOAD  (Table)
SQL> --
SQL> CREATE TABLE NCI_LAB_LOAD_PATIENT_LOAD
  2  (
  3    PT_ID	  VARCHAR2(15 BYTE),
  4    LOAD_FLAG  VARCHAR2(1 BYTE),
  5    LOAD_DATE  DATE
  6  )
  7  TABLESPACE  &&USERS_TABLESPACE;
CREATE TABLE NCI_LAB_LOAD_PATIENT_LOAD
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> --
SQL> -- NCI_LLPL_PATIENT_LOAD  (Index)
SQL> --
SQL> CREATE UNIQUE INDEX NCI_LLPL_PATIENT_LOAD ON NCI_LAB_LOAD_PATIENT_LOAD
  2  (PT_ID, LOAD_FLAG)
  3  LOGGING
  4  TABLESPACE  &&USERS_TABLESPACE;
CREATE UNIQUE INDEX NCI_LLPL_PATIENT_LOAD ON NCI_LAB_LOAD_PATIENT_LOAD
                    *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object BDL_RESPONSE_REPEATS
Object BDL_RESPONSE_REPEATS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @BDL_RESPONSE_REPEATS.sql
SQL> 
SQL> --
SQL> -- BDL_RESPONSE_REPEATS  (Table)
SQL> --
SQL> CREATE TABLE BDL_RESPONSE_REPEATS
  2  (
  3    REPEAT_SN      NUMBER(10),
  4    DATE_CREATED   DATE,
  5    DATE_MODIFIED  DATE,
  6    CREATED_BY     VARCHAR2(240 BYTE),
  7    MODIFIED_BY    VARCHAR2(240 BYTE)
  8  )
  9  TABLESPACE  &&USERS_TABLESPACE;
CREATE TABLE BDL_RESPONSE_REPEATS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> --
SQL> -- BRT_BRI_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER BRT_BRI_SEQ
  2   BEFORE INSERT
  3   ON BDL_RESPONSE_REPEATS
  4   FOR EACH ROW
  5  BEGIN
  6  
  7  	if :new.CREATED_BY IS NULL THEN
  8  	:new.CREATED_BY := user;
  9  	END IF;
 10  	:new.DATE_CREATED := sysdate;
 11  END;
 12  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> --
SQL> -- BRT_BRU_SEQ  (Trigger)
SQL> --
SQL> CREATE OR REPLACE TRIGGER BRT_BRU_SEQ
  2   BEFORE UPDATE
  3   ON BDL_RESPONSE_REPEATS
  4   FOR EACH ROW
  5  BEGIN
  6  
  7  	 :new.MODIFIED_BY  := user;
  8  	 :new.DATE_MODIFIED := sysdate;
  9  END;
 10  /

Trigger created.

SQL> SHOW ERRORS;
No errors.
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_STUDY_PATIENT_IDS
Object NCI_STUDY_PATIENT_IDS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_STUDY_PATIENT_IDS.sql
SQL> CREATE TABLE NCI_STUDY_PATIENT_IDS
  2  (
  3    OC_STUDY 	VARCHAR2(15 BYTE),
  4    OC_PATIENT_POS	VARCHAR2(12 BYTE),
  5    PT_ID_FUL	VARCHAR2(30 BYTE),
  6    NCI_INST_CD_FUL	VARCHAR2(30 BYTE),
  7    REPEAT_SN	NUMBER(3)
  8  )
  9  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_STUDY_PATIENT_IDS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Object NCI_STUDY_PATIENT_IDS_CTL
Object NCI_STUDY_PATIENT_IDS_CTL
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_STUDY_PATIENT_IDS_CTL.sql
SQL> CREATE TABLE NCI_STUDY_PATIENT_IDS_CTL
  2  (
  3    OC_STUDY 	       VARCHAR2(15 BYTE),
  4    PATIENT_ID_DCM_NAME     VARCHAR2(16 BYTE),
  5    PATIENT_ID_QUEST_NAME   VARCHAR2(20 BYTE),
  6    NCI_INST_CD_DCM_NAME    VARCHAR2(16 BYTE),
  7    NCI_INST_CD_QUEST_NAME  VARCHAR2(20 BYTE),
  8    NCI_INST_CD_CONST       VARCHAR2(30 BYTE),
  9    CREATE_DATE	       DATE		     DEFAULT SYSDATE,
 10    CREATE_USER	       VARCHAR2(30 BYTE)     DEFAULT USER,
 11    MODIFY_DATE	       DATE,
 12    MODIFY_USER	       VARCHAR2(30 BYTE)
 13  )
 14  TABLESPACE &&USERS_TABLESPACE;
CREATE TABLE NCI_STUDY_PATIENT_IDS_CTL
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> CREATE INDEX NSPI_IDX ON NCI_STUDY_PATIENT_IDS
  2  (OC_STUDY, OC_PATIENT_POS, REPEAT_SN)
  3  TABLESPACE &&USERS_TABLESPACE;
CREATE INDEX NSPI_IDX ON NCI_STUDY_PATIENT_IDS
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Data For NCI_STUDY_PATIENT_IDS_CTL
Data For NCI_STUDY_PATIENT_IDS_CTL
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_STUDY_PATIENT_IDS_CTL_DATA.sql
SQL> INSERT INTO NCI_STUDY_PATIENT_IDS_CTL
  2  	    ( OC_STUDY, PATIENT_ID_DCM_NAME, PATIENT_ID_QUEST_NAME,
  3  	      NCI_INST_CD_DCM_NAME, NCI_INST_CD_QUEST_NAME, NCI_INST_CD_CONST,
  4  	      CREATE_DATE, CREATE_USER, MODIFY_DATE, MODIFY_USER )
  5  VALUES ( 'ALL', 'PATIENT_ID', 'PT_ID',
  6  	      'PATIENT_ID', 'NCI_INST_CD', NULL,  SYSDATE, USER, NULL, NULL);

1 row created.

SQL> 
SQL> COMMIT;

Commit complete.

SQL> 
SQL> 
SQL> Prompt ...Installing Views...
...Installing Views...
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View C3D_ACCESSIBLE_STUDIES_VW
View C3D_ACCESSIBLE_STUDIES_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @C3D_ACCESSIBLE_STUDIES_VW.vw
SQL> /* Formatted on 2005/12/09 15:32 (Formatter Plus v4.8.0) */
SQL> CREATE OR REPLACE FORCE VIEW c3d_accessible_studies_vw (study, title)
  2  AS
  3  	SELECT a.study, a.title
  4  	  FROM ocl_studies a
  5  	 WHERE EXISTS ( 			      /* account is super-user	 */
  6  		  SELECT /*+ INDEX(OA ORACLE_ACCOUNT_PK_IDX) */
  7  			 NULL
  8  		    FROM oracle_accounts oa
  9  		   WHERE oa.oracle_account_name = USER
 10  		     AND oa.all_study_access_flag = 'Y')
 11  	    OR EXISTS (      /* account is in group with program/project access  */
 12  		  SELECT /*+ ORDERED
 13  		      INDEX(AGM ACCOUNT_GRP_MEMB_PK_IDX)
 14  		      INDEX(APA ACCOUNT_PROG_ACCESS_PK_IDX)
 15  		      INDEX(S OCL_STUDY_UK_IDX) */
 16  			 NULL
 17  		    FROM account_group_memberships agm,
 18  			 account_program_accesses apa,
 19  			 ocl_studies s
 20  		   WHERE agm.account_grp_memb_ora_oa_name = USER
 21  		     AND agm.account_grp_memb_grp_oa_name =
 22  						    apa.account_prog_access_oa_name
 23  		     AND s.program_code = apa.account_prog_access_prog_code
 24  		     AND s.project_code LIKE apa.account_prog_access_proj_code
 25  		     AND s.study = a.study /* prc */)
 26  	    OR EXISTS ( 	       /* account is in group with study access  */
 27  		  SELECT /*+ ORDERED
 28  		      INDEX(AGM ACCOUNT_GRP_MEMB_PK_IDX)
 29  		      INDEX(ASA ACCT_STUDY_ACC_PK_IDX) */
 30  			 NULL
 31  		    FROM account_group_memberships agm, account_study_accesses asa
 32  		   WHERE agm.account_grp_memb_ora_oa_name = USER
 33  		     AND agm.account_grp_memb_grp_oa_name =
 34  						   asa.account_study_access_oa_name
 35  		     AND asa.account_study_access_cs_id = a.task_id)
 36  	    OR EXISTS ( 	   /* account has direct program/project access  */
 37  		  SELECT /*+ ORDERED
 38  		      INDEX(APA ACCOUNT_PROG_ACCESS_PK_IDX)
 39  		      INDEX(S OCL_STUDY_UK_IDX) */
 40  			 NULL
 41  		    FROM account_program_accesses apa, ocl_studies s
 42  		   WHERE apa.account_prog_access_oa_name = USER
 43  		     AND s.program_code = apa.account_prog_access_prog_code
 44  		     AND s.project_code LIKE apa.account_prog_access_proj_code
 45  		     AND s.study = a.study /* prc */)
 46  	    OR EXISTS ( 		     /* account has direct study access  */
 47  		  SELECT /*+ INDEX(ASA ACCT_STUDY_ACC_PK_IDX) */
 48  			 NULL
 49  		    FROM account_study_accesses asa
 50  		   WHERE asa.account_study_access_cs_id = a.task_id	  /* prc */
 51  		     AND asa.account_study_access_oa_name = USER);

View created.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View LABTESTS
View LABTESTS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @LABTESTS.vw
SQL> /* Formatted on 2005/12/09 15:37 (Formatter Plus v4.8.0) */
SQL> CREATE OR REPLACE FORCE VIEW labtests (NAME,
  2  						intent,
  3  						domain,
  4  						question_status_code
  5  					       )
  6  AS
  7  	SELECT NAME, intent, domain, question_status_code
  8  	  FROM questions
  9  	 WHERE que_sub_type_code = 'LAB TEST'
 10  	   AND question_status_code <> 'R'
 11  	   AND NAME NOT LIKE 'LAB_%'
 12  	   AND NAME <> 'LPARM';

View created.

SQL> 
SQL> Grant select on labtest to public;
Grant select on labtest to public
                *
ERROR at line 1:
ORA-00942: table or view does not exist 


SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_CDW_LAB_MAP_CROSSREF
View NCI_CDW_LAB_MAP_CROSSREF
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_CDW_LAB_MAP_CROSSREF.vw
SQL> 
SQL> CREATE OR REPLACE FORCE VIEW NCI_CDW_LAB_MAP_CROSSREF
  2  (TEST_ID, EC_ID, OTH_TEST_ID, LABORATORY, OC_LAB_QUESTION,
  3   MAP_VERSION)
  4  AS
  5  SELECT TO_CHAR (a.test_id) test_id, a.ec_id ec_id, b.test_id oth_test_id,
  6  	    c.laboratory, c.oc_lab_question, c.map_version
  7    FROM mis_cdr_tests a,
  8  	    mis_cdr_tests b,
  9  		nci_lab_mapping c
 10   WHERE a.ec_id = b.ec_id
 11  	AND b.test_id = c.test_component_id;

View created.

SQL> 
SQL> 
SQL> CREATE PUBLIC SYNONYM NCI_CDW_LAB_MAP_CROSSREF FOR NCI_CDW_LAB_MAP_CROSSREF;
CREATE PUBLIC SYNONYM NCI_CDW_LAB_MAP_CROSSREF FOR NCI_CDW_LAB_MAP_CROSSREF
                      *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> GRANT SELECT ON  NCI_CDW_LAB_MAP_CROSSREF TO LABLOADER;

Grant succeeded.

SQL> 
SQL> GRANT SELECT ON  NCI_CDW_LAB_MAP_CROSSREF TO LABLOADER_ADMIN;

Grant succeeded.

SQL> 
SQL> GRANT SELECT ON  NCI_CDW_LAB_MAP_CROSSREF TO LABLOADER_REVIEW;

Grant succeeded.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_STUDY_ALL_DCMS_EVENTS_VW
View NCI_STUDY_ALL_DCMS_EVENTS_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_STUDY_ALL_DCMS_EVENTS_VW.vw
SQL> /* Formatted on 2005/12/09 15:34 (Formatter Plus v4.8.0) */
SQL> CREATE OR REPLACE FORCE VIEW nci_study_all_dcms_events_vw (oc_study,
  2  									dcm_name,
  3  									subset_name,
  4  									question_name,
  5  									cpe_name,
  6  									repeat_sn,
  7  									oc_lab_question,
  8  									display_sn
  9  								       )
 10  AS
 11  	SELECT DISTINCT dm.clinical_study_id oc_study, d.NAME dcm_name,
 12  			d.subset_name, dq.question_name, cpe.NAME cpe_name,
 13  			r.repeat_sn, r.default_value_text oc_lab_question,
 14  			dbp.display_sn
 15  		   FROM dcms d,
 16  			dcm_questions dq,
 17  			dcm_ques_repeat_defaults r,
 18  			dci_modules dm,
 19  			clinical_planned_events cpe,
 20  			dci_book_pages dbp,
 21  			dci_books db
 22  		  WHERE dq.dcm_question_id = r.dcm_question_id(+)
 23  		    AND dq.dcm_que_dcm_subset_sn = r.dcm_subset_sn(+)
 24  		    AND d.dcm_id = dq.dcm_id
 25  		    AND d.dcm_subset_sn = dq.dcm_que_dcm_subset_sn
 26  		    AND d.dcm_layout_sn = dq.dcm_que_dcm_layout_sn
 27  		    AND dm.dcm_id = d.dcm_id
 28  		    AND dm.dcm_subset_sn = d.dcm_subset_sn
 29  		    AND dm.dcm_layout_sn = d.dcm_layout_sn
 30  		    AND dbp.dci_id = dm.dci_id
 31  		    AND dbp.clin_plan_eve_id = cpe.clin_plan_eve_id
 32  		    AND db.dci_book_id = dbp.dci_book_id
 33  		    AND db.dci_book_status_code = 'A'
 34  		    AND db.default_flag = 'Y';

View created.

SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_STUDY_DCMS_VW
View NCI_STUDY_DCMS_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_STUDY_DCMS_VW.vw
SQL> /* Formatted on 2005/12/09 15:34 (Formatter Plus v4.8.0) */
SQL> CREATE OR REPLACE FORCE VIEW nci_study_dcms_vw (oc_study,
  2  							     dcm_name,
  3  							     subset_name,
  4  							     question_name,
  5  							     cpe_name,
  6  							     repeat_sn,
  7  							     oc_lab_question
  8  							    )
  9  AS
 10  	SELECT DISTINCT dm.clinical_study_id oc_study, d.NAME dcm_name,
 11  			d.subset_name, dq.question_name, cpe.NAME cpe_name,
 12  			r.repeat_sn, r.default_value_text oc_lab_question
 13  		   FROM dcms d,
 14  			dcm_questions dq,
 15  			dcm_ques_repeat_defaults r,
 16  			dci_modules dm,
 17  			clinical_planned_events cpe,
 18  			dci_book_pages dbp,
 19  			dci_books db
 20  		  WHERE dq.dcm_question_id = r.dcm_question_id
 21  		    AND dq.dcm_que_dcm_subset_sn = r.dcm_subset_sn
 22  		    AND dq.dcm_que_dcm_layout_sn = r.dcm_layout_sn
 23  		    AND d.dcm_id = dq.dcm_id
 24  		    AND d.dcm_subset_sn = dq.dcm_que_dcm_subset_sn
 25  		    AND d.dcm_layout_sn = dq.dcm_que_dcm_layout_sn
 26  		    AND dm.dcm_id = d.dcm_id
 27  		    AND dm.dcm_subset_sn = d.dcm_subset_sn
 28  		    AND dm.dcm_layout_sn = d.dcm_layout_sn
 29  		    AND dbp.dci_id = dm.dci_id
 30  		    AND dbp.clin_plan_eve_id = cpe.clin_plan_eve_id
 31  		    AND db.dci_book_id = dbp.dci_book_id
 32  		    AND db.dci_book_status_code = 'A';

View created.

SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_STUDY_LABDCM_EVENTS_VW
View NCI_STUDY_LABDCM_EVENTS_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_STUDY_LABDCM_EVENTS_VW.vw
SQL> /* Formatted on 2005/12/09 15:35 (Formatter Plus v4.8.0) */
SQL> CREATE OR REPLACE FORCE VIEW nci_study_labdcm_events_vw (oc_study,
  2  								      study,
  3  								      dcm_name,
  4  								      subset_name,
  5  								      question_name,
  6  								      cpe_name,
  7  								      repeat_sn,
  8  								      oc_lab_question,
  9  								      display_sn
 10  								     )
 11  AS
 12  	SELECT DISTINCT dm.clinical_study_id oc_study, cs.study, d.NAME dcm_name,
 13  			d.subset_name, dq.question_name, cpe.NAME cpe_name,
 14  			r.repeat_sn, r.default_value_text oc_lab_question,
 15  			dbp.display_sn
 16  		   FROM dcms d,
 17  			dcm_questions dq,
 18  			dcm_ques_repeat_defaults r,
 19  			dci_modules dm,
 20  			clinical_planned_events cpe,
 21  			dci_book_pages dbp,
 22  			dci_books db,
 23  			clinical_studies cs
 24  		  WHERE dq.dcm_question_id = r.dcm_question_id
 25  		    AND dq.dcm_que_dcm_subset_sn = r.dcm_subset_sn
 26  		    AND dq.dcm_que_dcm_layout_sn = r.dcm_layout_sn
 27  		    AND dq.question_name = 'LPARM'
 28  		    AND d.dcm_id = dq.dcm_id
 29  		    AND d.dcm_subset_sn = dq.dcm_que_dcm_subset_sn
 30  		    AND d.dcm_layout_sn = dq.dcm_que_dcm_layout_sn
 31  		    AND dm.dcm_id = d.dcm_id
 32  		    AND dm.dcm_subset_sn = d.dcm_subset_sn
 33  		    AND dm.dcm_layout_sn = d.dcm_layout_sn
 34  		    AND dbp.dci_id = dm.dci_id
 35  		    AND dbp.clin_plan_eve_id = cpe.clin_plan_eve_id
 36  		    AND db.dci_book_id = dbp.dci_book_id
 37  		    AND db.dci_book_status_code = 'A'
 38  		    AND dm.clinical_study_id = cs.clinical_study_id
 39  		    AND db.default_flag = 'Y';

View created.

SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_UOMS
View NCI_UOMS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_UOMS.vw
SQL> /* Formatted on 2005/12/09 15:31 (Formatter Plus v4.8.0) */
SQL> CREATE OR REPLACE FORCE VIEW nci_uoms (VALUE, meaning, type_labtest)
  2  AS
  3  	SELECT VALUE, meaning, type_labtest
  4  	  FROM nci_uom_main
  5  	 WHERE type_labtest = 'Lab Test';

View created.

SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View STUDY_REPEAT_DEFAULTS_VW
View STUDY_REPEAT_DEFAULTS_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @STUDY_REPEAT_DEFAULTS_VW.vw
SQL> /* Formatted on 2005/12/09 15:27 (Formatter Plus v4.8.0) */
SQL> CREATE OR REPLACE FORCE VIEW study_repeat_defaults_vw (study,
  2  								  book,
  3  								  book_status,
  4  								  dci,
  5  								  dcm,
  6  								  subset_name,
  7  								  question,
  8  								  repeat_sn,
  9  								  default_value_text,
 10  								  glib_lab
 11  								 )
 12  AS
 13  	SELECT DISTINCT s.study, db.NAME book, db.dci_book_status_code book_status,
 14  			i.NAME dci, d.NAME dcm, d.subset_name,
 15  			dq.question_name question, r.repeat_sn,
 16  			r.default_value_text,
 17  			DECODE (dq.question_name,
 18  				'LPARM', NVL (l.NAME, 'Not Mapped')
 19  			       ) glib_lab
 20  		   FROM dcms d,
 21  			dcm_questions dq,
 22  			dcm_ques_repeat_defaults r,
 23  			clinical_studies s,
 24  			dci_books db,
 25  			dci_book_pages dbp,
 26  			dci_modules dm,
 27  			dcis i,
 28  			labtests l
 29  		  WHERE r.dcm_question_id = dq.dcm_question_id
 30  		    AND r.dcm_subset_sn = dq.dcm_que_dcm_subset_sn
 31  		    AND dq.dcm_id = d.dcm_id
 32  		    AND dq.dcm_que_dcm_subset_sn = d.dcm_subset_sn
 33  		    AND d.dcm_id = dm.dcm_id
 34  		    AND d.dcm_subset_sn = dm.dcm_subset_sn
 35  		    AND dm.dci_id = dbp.dci_id
 36  		    AND dbp.dci_id = i.dci_id
 37  		    AND db.dci_book_id = dbp.dci_book_id
 38  		    AND db.dci_book_status_code <> 'R'
 39  		    AND db.clinical_study_id = s.clinical_study_id
 40  		    AND r.default_value_text = l.NAME(+)
 41  		    AND EXISTS (SELECT NULL
 42  				  FROM c3d_accessible_studies_vw k
 43  				 WHERE s.study = k.study)
 44  	       ORDER BY 1, 2, 4, 5, 6, 7;

View created.

SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View DUPLICATE_LAB_MAPPINGS
View DUPLICATE_LAB_MAPPINGS
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @DUPLICATE_LAB_MAPPINGS.vw
SQL> /* Formatted on 2005/12/09 15:31 (Formatter Plus v4.8.0) */
SQL> CREATE OR REPLACE FORCE VIEW duplicate_lab_mappings (study,
  2  								dci,
  3  								dcm,
  4  								subset_name,
  5  								repeat_sn,
  6  								default_value_text
  7  							       )
  8  AS
  9  	SELECT DISTINCT sr.study, sr.dci, sr.dcm, sr.subset_name, sr.repeat_sn,
 10  			sr.default_value_text
 11  		   FROM study_repeat_defaults_vw sr,
 12  			(SELECT   study, book, default_value_text, COUNT (*)
 13  			     FROM study_repeat_defaults_vw
 14  			    WHERE question = 'LPARM'
 15  			 GROUP BY study, book, default_value_text
 16  			   HAVING COUNT (*) > 1) dup
 17  		  WHERE dup.study = sr.study
 18  		    AND dup.default_value_text = sr.default_value_text
 19  		    AND EXISTS (SELECT NULL
 20  				  FROM c3d_accessible_studies_vw k
 21  				 WHERE sr.study = k.study)
 22  	       ORDER BY 1, 6, 2, 3, 4;

View created.

SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_LABS_LOAD_SPPDQ_VW
View NCI_LABS_LOAD_SPPDQ_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LABS_LOAD_SPPDQ_VW.vw
SQL> /* Formatted on 2005/12/13 16:33 (Formatter Plus v4.8.0) */
SQL> CREATE OR REPLACE FORCE VIEW nci_labs_load_sppdq_vw (oc_study,
  2  								  patient_id,
  3  								  oc_patient_pos,
  4  								  oc_lab_panel,
  5  								  oc_lab_event,
  6  								  oc_lab_subset,
  7  								  sample_datetime,
  8  								  oc_lab_question,
  9  								  dci_name
 10  								 )
 11  AS
 12  	SELECT		/*+ RULE  */
 13  	       DISTINCT oc_study, patient_id, oc_patient_pos, oc_lab_panel,
 14  			oc_lab_event, oc_lab_subset, sample_datetime,
 15  			oc_lab_question, dc.NAME dci_name
 16  		   FROM dci_modules dm, dcms d, dcis dc, nci_labs n
 17  		  WHERE d.dcm_id = dm.dcm_id
 18  		    AND d.dcm_subset_sn = dm.dcm_subset_sn
 19  		    AND d.dcm_layout_sn = dm.dcm_layout_sn
 20  		    AND dc.dci_id = dm.dci_id
 21  		    AND dc.dci_status_code = 'A'
 22  		    AND d.NAME = n.oc_lab_panel
 23  		    AND d.domain = n.oc_study
 24  		    AND d.subset_name = n.oc_lab_subset
 25  		    AND n.load_flag = 'L';

View created.

SQL> 
SQL> 
SQL> -- GRANT SELECT ON NCI_LABS_LOAD_SPPDQ_VW TO LABLOADER;
SQL> 
SQL> -- GRANT SELECT ON NCI_LABS_LOAD_SPPDQ_VW TO LABLOADER_REVIEW;
SQL> 
SQL> -- GRANT SELECT ON NCI_LABS_LOAD_SPPDQ_VW TO LABLOADER_ADMIN;
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_LABS_REV_SPPDQ_VW
View NCI_LABS_REV_SPPDQ_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LABS_REV_SPPDQ_VW.vw
SQL> /* Formatted on 2005/12/13 16:34 (Formatter Plus v4.8.0) */
SQL> CREATE OR REPLACE FORCE VIEW nci_labs_rev_sppdq_vw (oc_study,
  2  								 patient_id,
  3  								 oc_patient_pos,
  4  								 oc_lab_panel,
  5  								 oc_lab_event,
  6  								 oc_lab_subset,
  7  								 sample_datetime,
  8  								 dci_name,
  9  								 oc_lab_question
 10  								)
 11  AS
 12  	SELECT /*+ RULE */
 13  	       oc_study, patient_id, oc_patient_pos, oc_lab_panel, oc_lab_event,
 14  	       oc_lab_subset, sample_datetime, dc.NAME dci_name, oc_lab_question
 15  	  FROM dci_modules dm, dcms d, dcis dc, nci_labs n
 16  	 WHERE d.dcm_id = dm.dcm_id
 17  	   AND d.dcm_subset_sn = dm.dcm_subset_sn
 18  	   AND d.dcm_layout_sn = dm.dcm_layout_sn
 19  	   AND dc.dci_id = dm.dci_id
 20  	   AND dc.dci_status_code = 'A'
 21  	   AND d.NAME = n.oc_lab_panel
 22  	   AND d.domain = n.oc_study
 23  	   AND d.subset_name = n.oc_lab_subset
 24  	   AND load_flag = 'R';

View created.

SQL> 
SQL> 
SQL> -- GRANT SELECT ON NCI_LABS_REV_SPPDQ_VW TO LABLOADER;
SQL> 
SQL> -- GRANT SELECT ON NCI_LABS_REV_SPPDQ_VW TO LABLOADER_REVIEW;
SQL> 
SQL> -- GRANT SELECT ON NCI_LABS_REV_SPPDQ_VW TO LABLOADER_ADMIN;
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_LAB_VALID_PATIENTS_VW
View NCI_LAB_VALID_PATIENTS_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LAB_VALID_PATIENTS_VW.vw
SQL> 
SQL> CREATE OR REPLACE FORCE VIEW NCI_LAB_VALID_PATIENTS_VW
  2  (PT_ID, PT, STUDY, NCI_INST_CD)
  3  AS
  4  SELECT REPLACE (pt_id_ful, '-') pt_id, oc_patient_pos pt, oc_study,
  5  	       nci_inst_cd_ful nci_inst_cd
  6  	  FROM nci_study_patient_ids a
  7  	 WHERE pt_id_ful IS NOT NULL
  8  	   AND (   (nci_inst_cd_ful LIKE '%NCI%' ) --or nci_inst_cd_ful IN ('GTOWN') )
  9  		OR (nci_inst_cd_ful = 'NIHCC'
 10  		    AND oc_study IN ('97_C_0110', '99_C_0023', '00_C_0030')
 11  		   )
 12  	  OR exists (select 'x' from NCI_STUDY_PATIENT_IDS_CTL b
 13  		      where b.OC_STUDY = a.oc_study
 14  			and b.NCI_INST_CD_CONST is not null
 15  			and b.NCI_INST_CD_CONST = a.nci_inst_cd_ful)
 16  	       )
 17  	   AND DECODE
 18  		  (INSTR
 19  		      (TRANSLATE
 20  			  (pt_id_ful,
 21  			   './ abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',
 22  			   'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
 23  			  ),
 24  		       'X'
 25  		      ),
 26  		   0, 'number',
 27  		   'not_number'
 28  		  ) = 'number';

View created.

SQL> 
SQL> 
SQL> CREATE PUBLIC SYNONYM NCI_LAB_VALID_PATIENTS_VW FOR NCI_LAB_VALID_PATIENTS_VW;
CREATE PUBLIC SYNONYM NCI_LAB_VALID_PATIENTS_VW FOR NCI_LAB_VALID_PATIENTS_VW
                      *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> GRANT SELECT ON  NCI_LAB_VALID_PATIENTS_VW TO LABLOADER;

Grant succeeded.

SQL> 
SQL> GRANT SELECT ON  NCI_LAB_VALID_PATIENTS_VW TO LABLOADER_ADMIN;

Grant succeeded.

SQL> 
SQL> GRANT SELECT ON  NCI_LAB_VALID_PATIENTS_VW TO LABLOADER_REVIEW;

Grant succeeded.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_STUDY_DCMS_EVENTS_VW
View NCI_STUDY_DCMS_EVENTS_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_STUDY_DCMS_EVENTS_VW.vw
SQL> CREATE OR REPLACE FORCE VIEW NCI_STUDY_DCMS_EVENTS_VW
  2  (OC_STUDY, DCM_NAME, SUBSET_NAME, QUESTION_NAME, CPE_NAME,
  3   REPEAT_SN, OC_LAB_QUESTION, DISPLAY_SN)
  4  AS
  5  SELECT DISTINCT dm.clinical_study_id oc_study, d.NAME dcm_name,
  6  			d.subset_name, dq.question_name, cpe.NAME cpe_name,
  7  			r.repeat_sn, r.default_value_text oc_lab_question,
  8  			dbp.display_sn
  9  		   FROM dcms d,
 10  			dcm_questions dq,
 11  			dcm_ques_repeat_defaults r,
 12  			dci_modules dm,
 13  			clinical_planned_events cpe,
 14  			dci_book_pages dbp,
 15  			dci_books db
 16  		  WHERE dq.dcm_question_id = r.dcm_question_id
 17  		    AND dq.dcm_que_dcm_subset_sn = r.dcm_subset_sn
 18  		    AND dq.dcm_que_dcm_layout_sn = r.dcm_layout_sn
 19  		    AND d.dcm_id = dq.dcm_id
 20  		    AND d.dcm_subset_sn = dq.dcm_que_dcm_subset_sn
 21  		    AND d.dcm_layout_sn = dq.dcm_que_dcm_layout_sn
 22  		    AND dm.dcm_id = d.dcm_id
 23  		    AND dm.dcm_subset_sn = d.dcm_subset_sn
 24  		    AND dm.dcm_layout_sn = d.dcm_layout_sn
 25  		    AND dbp.dci_id = dm.dci_id
 26  		    AND dbp.clin_plan_eve_id = cpe.clin_plan_eve_id
 27  		    AND db.dci_book_id = dbp.dci_book_id
 28  		    AND db.dci_book_status_code = 'A';

View created.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_LAB_LOAD_STUDY_SEC_VW
View NCI_LAB_LOAD_STUDY_SEC_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LAB_LOAD_STUDY_SEC_VW.vw
SQL> CREATE OR REPLACE FORCE VIEW NCI_LAB_LOAD_STUDY_SEC_VW
  2  (STUDY)
  3  AS
  4  SELECT study
  5  	  FROM clinical_studies a
  6  	 WHERE EXISTS (SELECT 'X'
  7  			 FROM nci_labs
  8  			WHERE oc_study = study)
  9  	   AND (   EXISTS
 10  			  /* account is super-user   */
 11  		   (
 12  		      SELECT /*+ INDEX(OA ORACLE_ACCOUNT_PK_IDX) */
 13  			     NULL
 14  			FROM oracle_accounts oa
 15  		       WHERE oa.oracle_account_name = USER
 16  			 AND oa.all_study_access_flag = 'Y')
 17  		OR EXISTS
 18  			  /* account is in group with program/project access  */
 19  			  /* rdanka- bug 902780 changed use_index to index */
 20  		   (
 21  		      SELECT /*+ ORDERED
 22  			  INDEX(AGM ACCOUNT_GRP_MEMB_PK_IDX)
 23  			  INDEX(APA ACCOUNT_PROG_ACCESS_PK_IDX)
 24  			  INDEX(S OCL_STUDY_UK_IDX) */
 25  			     NULL
 26  			FROM account_group_memberships agm,
 27  			     account_program_accesses apa,
 28  			     ocl_studies s
 29  		       WHERE agm.account_grp_memb_ora_oa_name = USER
 30  			 AND agm.account_grp_memb_grp_oa_name =
 31  						    apa.account_prog_access_oa_name
 32  			 AND s.program_code = apa.account_prog_access_prog_code
 33  			 AND s.project_code LIKE apa.account_prog_access_proj_code
 34  			 AND s.study = a.study /* prc */)
 35  		OR EXISTS
 36  			  /* account is in group with study access  */
 37  			  /* rdanka- bug 902780 changed use_index to index */
 38  		   (
 39  		      SELECT /*+ ORDERED
 40  			  INDEX(AGM ACCOUNT_GRP_MEMB_PK_IDX)
 41  			  INDEX(ASA ACCT_STUDY_ACC_PK_IDX) */
 42  			     NULL
 43  			FROM account_group_memberships agm,
 44  			     account_study_accesses asa,
 45  			     ocl_studies s
 46  		       WHERE agm.account_grp_memb_ora_oa_name = USER
 47  			 AND agm.account_grp_memb_grp_oa_name =
 48  						   asa.account_study_access_oa_name
 49  			 AND asa.account_study_access_cs_id = s.task_id   /* prc */
 50  			 AND s.study = a.study /* prc */)
 51  		OR EXISTS
 52  			  /* account has direct program/project access	*/
 53  		   (
 54  		      SELECT /*+ ORDERED
 55  			  INDEX(APA ACCOUNT_PROG_ACCESS_PK_IDX)
 56  			  INDEX(S OCL_STUDY_UK_IDX) */
 57  			     NULL
 58  			FROM account_program_accesses apa, ocl_studies s
 59  		       WHERE apa.account_prog_access_oa_name = USER
 60  			 AND s.program_code = apa.account_prog_access_prog_code
 61  			 AND s.project_code LIKE apa.account_prog_access_proj_code
 62  			 AND s.study = a.study /* prc */)
 63  		OR EXISTS
 64  			  /* account has direct study access  */
 65  			  /* rdanka- bug 902780 changed use_index to index */
 66  		   (
 67  		      SELECT /*+ INDEX(ASA ACCT_STUDY_ACC_PK_IDX) */
 68  			     NULL
 69  			FROM account_study_accesses asa, ocl_studies s
 70  		       WHERE asa.account_study_access_cs_id = s.task_id   /* prc */
 71  			 AND s.study = a.study				  /* prc */
 72  			 AND asa.account_study_access_oa_name = USER)
 73  	       );

View created.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View NCI_LAB_VALID_PT_DATES_VW
View NCI_LAB_VALID_PT_DATES_VW
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @NCI_LAB_VALID_PT_DATES_VW.vw
SQL> CREATE OR REPLACE FORCE VIEW NCI_LAB_VALID_PT_DATES_VW
  2  (PT_ID, PT, STUDY, NCI_INST_CD, OFFSTDY_DT_DCM,
  3   OFFSTDY_DT_QST, OFFSTDY_DT_VALUE, PSTDY_DT_DCM, PSTDY_DT_QST, PSTDY_DT_VALUE,
  4   USE_ENROLL, ENROLL_DT_DCM, ENROLL_DT_QST, ENROLL_DT_VALUE)
  5  AS
  6  select a.*,
  7  		nvl(b.OFF_STUDY_DCM,c.OFF_STUDY_DCM) OFFSTDY_DT_DCM,
  8  		nvl(b.OFF_STUDY_QUEST,c.OFF_STUDY_QUEST) OFFSTDY_DT_QST,
  9  		get_response_value(a.study,a.pt, nvl(b.OFF_STUDY_DCM,c.OFF_STUDY_DCM),
 10  						       nvl(b.OFF_STUDY_QUEST,c.OFF_STUDY_QUEST)) OFFSTDY_DT_VALUE,
 11  		nvl(b.PRESTUDY_LAB_DATE_DCM,c.PRESTUDY_LAB_DATE_DCM) PSTDY_DT_DCM,
 12  		nvl(b.PRESTUDY_LAB_DATE_QUEST,c.PRESTUDY_LAB_DATE_QUEST) PSTDY_DT_QST,
 13  		get_response_value(a.study,a.pt, nvl(b.PRESTUDY_LAB_DATE_DCM,c.PRESTUDY_LAB_DATE_DCM),
 14  						       nvl(b.PRESTUDY_LAB_DATE_QUEST,c.PRESTUDY_LAB_DATE_QUEST))  PSTDY_DT_VALUE,
 15  		nvl(b.BLANK_PRESTUDY_USE_ENROLL, c.BLANK_PRESTUDY_USE_ENROLL) USE_ENROLL,
 16  	    nvl(b.ENROLLMENT_DATE_DCM,c.ENROLLMENT_DATE_DCM) ENROLL_DT_DCM,
 17  		nvl(b.ENROLLMENT_DATE_QUEST,c.ENROLLMENT_DATE_QUEST) ENROLL_DT_QST,
 18  		get_response_value(a.study,a.pt, nvl(b.ENROLLMENT_DATE_DCM,c.ENROLLMENT_DATE_DCM),
 19  			       nvl(b.ENROLLMENT_DATE_QUEST,c.ENROLLMENT_DATE_QUEST)) enroll_dt_value
 20  from NCI_LAB_VALID_PATIENTS_VW a,
 21  	  nci_lab_load_ctl b,
 22  	      nci_lab_load_ctl c
 23  where a.study = b.oc_study
 24    and c.oc_study = 'ALL'
 25  UNION
 26  select a.*,
 27  		c.OFF_STUDY_DCM OFFSTDY_DT_DCM,
 28  		c.OFF_STUDY_QUEST OFFSTDY_DT_QST,
 29  		get_response_value(a.study, a.pt, c.OFF_STUDY_DCM, c.OFF_STUDY_QUEST) OFFSTDY_DT_VALUE,
 30  		c.PRESTUDY_LAB_DATE_DCM PSTDY_DT_DCM,
 31  		c.PRESTUDY_LAB_DATE_QUEST PSTDY_DT_QST,
 32  		get_response_value(a.study, a.pt, c.PRESTUDY_LAB_DATE_DCM, c.PRESTUDY_LAB_DATE_QUEST) PSTDY_DT_VALUE,
 33  		c.BLANK_PRESTUDY_USE_ENROLL USE_ENROLL,
 34  	    c.ENROLLMENT_DATE_DCM ENROLL_DT_DCM,
 35  		c.ENROLLMENT_DATE_QUEST ENROLL_DT_QST,
 36  		get_response_value(a.study, a.pt, c.ENROLLMENT_DATE_DCM, c.ENROLLMENT_DATE_QUEST) enroll_dt_value
 37  from NCI_LAB_VALID_PATIENTS_VW a,
 38  	      nci_lab_load_ctl c
 39  where not exists (select 'X' from nci_lab_load_ctl
 40  		       where oc_study = a.study)
 41    and c.oc_study = 'ALL';

Warning: View created with compilation errors.

SQL> 
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt View patient_id_ptid_vw.vw
View patient_id_ptid_vw.vw
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @patient_id_ptid_vw.vw
SQL> CREATE OR REPLACE FORCE VIEW PATIENT_ID_PTID_VW
  2  (PT_ID, NCI_INST_CD)
  3  AS
  4  select pt_ID, NCI_INST_CD from NCI_LAB_VALID_PATIENTS;
select pt_ID, NCI_INST_CD from NCI_LAB_VALID_PATIENTS
                               *
ERROR at line 4:
ORA-00955: name is already used by an existing object 


SQL> 
SQL> 
SQL> 
SQL> -- Install Package
SQL> Prompt ...Installing Packages
...Installing Packages
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Package SubmitPsubLoad
Package SubmitPsubLoad
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @SubmitPsubLoad.plsql
SQL> create or replace PROCEDURE submit_psub_load
  2   (nOS_FILE_ID in number,
  3    vOUT_FILE_DIR in varchar2)
  4  
  5  IS
  6  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  7  /*     Author: Unknown								  */
  8  /*       Date: Unknown								  */
  9  /*Description: Submits psub Batch Job for Lab Loading				  */
 10  /* 	    (Original Description Missing)					  */
 11  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 12  /*  Modification History								  */
 13  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 14  /* Author: Patrick Conrad- Ekagra Software Technologies				  */
 15  /*   Date: 07/10/03								  */
 16  /*    Mod: Added function call to update labs that received responses to questions,  */
 17  /* 	even though the batch status is Failure.  Also upped the Looping time for */
 18  /* 	batch status watching to 30 minues.					  */
 19  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 20  /* Author: Patrick Conrad- Ekagra Software Technologies				  */
 21  /*   Date: 03/05/2004								  */
 22  /*    Mod: Altered call to cdw_data_transfer_v3 in the Failure Clause		  */
 23  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 24  /* Author: Patrick Conrad- Ekagra Software Technologies				  */
 25  /*   Date: 03/05/2004								  */
 26  /*    Mod: Added "cdw_data_transfer_v3.Update_After_Batch_Load" call for each case   */
 27  /* 	where the Batch Job is check for completeness.				  */
 28  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 29    batch_mode      varchar2(20);
 30    pipename        varchar2(60);
 31    send_status     number;
 32    logfile	       batch_jobs.log_file_name%TYPE;
 33    outfile	       batch_jobs.output_file_name%TYPE;
 34    cmd	       batch_jobs.cmd_buffer%TYPE;
 35    exe_status      varchar2(15);
 36    comp_ts	       date;
 37    fail_text       varchar2(200);
 38    o_errnum        number;
 39    o_errmsg        varchar2(200);
 40    start_time      date;
 41    batch_q	       batch_jobs.batch_queue%TYPE;
 42    l_batch_id   number;
 43    vStatus	    varchar2(80);
 44  
 45  -- vOUT_FILE_DIR must be set at the Implementation Site or USED as another input Parm;
 46  -- this is just an example:
 47  -- vOUT_FILE_DIR varchar2(60) := '/home/opapps/batch_load';
 48  
 49  cursor c_batch_q is
 50    select long_value
 51  	from reference_codelist_values
 52  	where ref_codelist_name = 'BATCH QUEUE NAME'
 53  	and ref_codelist_value_short_val = 'RXC_BATCH_QUEUE';
 54  
 55   BEGIN
 56  -- Figure out the Batch Queue
 57  
 58  	 open c_batch_q;
 59  	 fetch c_batch_q into batch_q;
 60  	 close c_batch_q;
 61  
 62  -- Generate the Batch Job Id
 63  
 64  	select psub_comfile_seq.nextval
 65  	  into l_batch_id
 66  	  from dual;
 67  
 68    dbms_output.put_line('Process Job Id = '||l_batch_id);
 69  
 70  -- Generate the Log File Name and Output Filename
 71  
 72  	 logfile  := rxcps_pkg.log_directory ('3GL')||'l' || to_char(l_batch_id) || '.log';
 73  	 outfile  := rxcps_pkg.log_directory ('3GL')||'o' || to_char(l_batch_id) || '.out';
 74  
 75    dbms_output.put_line('Log File = '||logfile);
 76    dbms_output.put_line('Out File = '||outfile);
 77  
 78  -- Generate the command line for all study definitions at each location
 79  --rxcbeblt "-1/home/guest1/log/o38.out" -2-1 -3-1 "-41" "-5/" "-65" "-71" "-820" "-9300" "-10N" "-11" "-12Y"
 80  
 81  -- example from njsun01
 82  -- /export/home/opapps/oc/40/dm/rxcbeblt "-1$RXC_USER/temp5.lst" -2-1 -3-1 "-45" "-5/" "-6382111" "-71" "-820" "-9300" "-10N" "-11" "-12Y"
 83  
 84  --rxcbeblt "-1/home/guest1/log/o50.out" -2-1 -3-1 "-45" "-5/" "-61607" "-71" "-820" "-9300" "-10N" "-11/home/opapps/batch_load" "-12Y" for "load/prepare/transfer"
 85  --rxcbeblt "-1/home/guest1/log/o56.out" -2-1 -3-1 "-41" "-5/" "-61807" "-71" "-820" "-9300" "-10N" "-11" "-12Y" for "load"
 86  --rxcbeblt "-1/home/guest1/log/o58.out" -2-1 -3-1 "-42" "-5/" "-61807" "-71" "-820" "-9300" "-10N" "-11/home/opapps/batch_load" "-12Y" for "prepare"
 87  
 88  -- Parameter 10N defines whether to "Prepare to Completion". It's set to Y below.
 89  
 90   dbms_output.put_line('OS File Id = '||nOS_FILE_ID);
 91   cmd := 'rxcbeblt '||'"-1'||outfile ||'" "-2-1" "-3-1" "-45" "-5/" "-6'||nOS_FILE_ID||'" "-73" "-820" "-9300" "-10Y" "-11'||vOUT_FILE_DIR||'" "-12Y"';
 92  
 93   dbms_output.put_line('CMD = '||cmd);
 94  
 95  -- Insert into BATCH_JOBS
 96  
 97  	   insert into batch_jobs
 98  	    (
 99  	     batch_job_id,
100  	     entered_ts,
101  	     execution_status,
102  	     module_name,
103  	     module_type,
104  	     keep_file,
105  	     mode_of_execution,
106  	     db_state,
107  	     db_state_flag,
108  	     log_file_name,
109  	     output_file_name,
110  	     output_type_code,
111  	     user_name,
112  	     batch_queue,
113  	     cmd_buffer,
114  	     print_queue,
115  	     default_rundate,
116  	     desformat,
117  	     schedule_server,
118  	     job_name,
119  	     output_width
120  	    )
121  	   values
122  	    (
123  	     l_batch_id,
124  	     sysdate,
125  	     'ENTERED',
126  	     'RXCBEBLT',
127  	     '3GL',
128  	     'Y',
129  	     'BATCH_IMMEDIATE',
130  	     'N',
131  	     'N',
132  	     logfile,
133  	     outfile,
134  	     'FILE',
135  	     USER,
136  	     batch_q,
137  	     cmd,
138  	     'NOT DEFINED',
139  	     sysdate,
140  	     'ASCII',
141  	     null,
142  	     null,
143  	     132
144  	    );
145  
146  	  commit;
147  
148  -- Submit the job
149  
150  	    rxcps_pkg.client_send
151  	    (l_batch_id,'ENTERED_IN_BATCH_JOBS',pipename,send_status);
152  
153  		o_errnum := send_status;
154  
155  -- Wait for the job to complete...
156  
157  		  start_time := sysdate;
158  
159  		  loop
160  
161  		     select execution_status
162  		     into exe_status
163  		     from batch_jobs
164  		     where batch_job_id = l_batch_id;
165  
166  		     if exe_status = 'SUCCESS' then
167  		       vStatus :='SUCCESS';
168  		       cdw_data_transfer_v3.Update_After_Batch_Load;
169  		       --UPDATE nci_labs set load_flag = 'C', load_date = sysdate WHERE LOAD_FLAG = 'N';
170  		       exit;
171  		     elsif exe_status = 'FAILURE' then
172  			 vStatus :='FAILURE';
173  		       dbms_output.put_line('Batch job -'||to_char(l_batch_id)||' failed.');
174  		       dbms_output.put_line('  Updating those labs that received responses.'); -- prc 07/10/03
175  		       cdw_data_transfer_v3.Update_After_Batch_Load; -- prc 07/10/03 -- prc 03/05/2004
176  		       exit;
177  		     elsif exe_status = 'SUBMITTED' and
178  		       (sysdate - start_time) * 1440 > 30 then -- prc 07/10/03: Upped to 30 Minutes.
179  		       vStatus :='FAILURE';
180  		       cdw_data_transfer_v3.Update_After_Batch_Load;
181  		       exit;
182  		     end if;
183  
184  		   end loop;
185  
186   EXCEPTION
187  
188  	 when others then
189  	   o_errnum := SQLCODE;
190  	   o_errmsg := SQLERRM;
191  	   vStatus :='FAILURE';
192  	  dbms_output.put_line('Other Error: '||o_errnum||' - '||o_errmsg);
193  
194  end submit_psub_load;
195  /

Warning: Procedure created with compilation errors.

SQL> 
SQL> Show errors
Errors for PROCEDURE SUBMIT_PSUB_LOAD:

LINE/COL ERROR                                                                  
-------- -----------------------------------------------------------------      
72/5     PL/SQL: Statement ignored                                              
72/17    PLS-00904: insufficient privilege to access object RXC.RXCPS_PKG       
73/5     PL/SQL: Statement ignored                                              
73/17    PLS-00904: insufficient privilege to access object RXC.RXCPS_PKG       
97/7     PL/SQL: SQL Statement ignored                                          
97/19    PL/SQL: ORA-01031: insufficient privileges                             
150/8    PLS-00904: insufficient privilege to access object RXC.RXCPS_PKG       
150/8    PL/SQL: Statement ignored                                              
168/19   PLS-00201: identifier                                                  
         'CDW_DATA_TRANSFER_V3.UPDATE_AFTER_BATCH_LOAD' must be declared        
                                                                                

LINE/COL ERROR                                                                  
-------- -----------------------------------------------------------------      
168/19   PL/SQL: Statement ignored                                              
175/19   PLS-00201: identifier                                                  
         'CDW_DATA_TRANSFER_V3.UPDATE_AFTER_BATCH_LOAD' must be declared        
                                                                                
175/19   PL/SQL: Statement ignored                                              
180/19   PLS-00201: identifier                                                  
         'CDW_DATA_TRANSFER_V3.UPDATE_AFTER_BATCH_LOAD' must be declared        
                                                                                
180/19   PL/SQL: Statement ignored                                              
SQL> 
SQL> Prompt ...Installing Packages
...Installing Packages
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Package automate_bdl_pkg
Package automate_bdl_pkg
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @automate_bdl_pkg.plsql
SQL> CREATE or REPLACE PACKAGE automate_bdl
  2  AS
  3  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  4  /*     Author: Original Unknown							  */
  5  /*       Date: Original Unknown							  */
  6  /*Description: Creates data file of labs for batch loading.			  */
  7  /* 	    (Original Description Missing)					  */
  8  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  9  /*  Modification History								  */
 10  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 11  /* Author: Patrick Conrad								  */
 12  /*   Date: 07/07/03								  */
 13  /*    Mod: Made formatting changes to make file more human readable.		  */
 14  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 15  /* Author: Patrick Conrad								  */
 16  /*   Date: 07/07/03								  */
 17  /*    Mod: Found that the output file from the batch load was complaining about the  */
 18  /* 	reloadable file name:							  */
 19  /* 	"Cannot open reloadable file -						  */
 20  /* 	     /export/home/opapps/bdlLOAD_DLM_LABS_02_C_0241_r_FILE_0.dat.	  */
 21  /* 				    ^						  */
 22  /* 	Found that the directory name passed to submit_psub_bdl from this routine */
 23  /* 	is misisng a '/'.  Was added.						  */
 24  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 25  /* Author: Patrick Conrad								  */
 26  /*   Date: 07/07/03								  */
 27  /*    Mod: Under Oracle 9.2, the UTL_FILE package changed in that there are now	  */
 28  /* 	DIRECTORY objects.  A new directory object was created LAB_DIR that is a  */
 29  /* 	definition for the '/tmp' directory on the unix host.  The object is then */
 30  /* 	used by the UTL_FILE.FOPEN procedure.					  */
 31  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 32  PROCEDURE create_dat_file;
 33  PROCEDURE run_bdl (ip_file IN char);
 34  PROCEDURE create_os_file (ip_datafile IN char);
 35  PROCEDURE submit_psub_bdl (ip_file_id IN number, ip_directory_path IN char);
 36  END automate_bdl;
 37  /

Package created.

SQL> 
SQL> CREATE or REPLACE PACKAGE BODY automate_bdl
  2  AS
  3  	PROCEDURE create_dat_file
  4  	IS
  5  	   vfile_type	  UTL_FILE.FILE_TYPE;
  6  	   ofile_name  varchar2(30);
  7  	   odatarec    varchar2(800);
  8  	   oip_file    varchar2(80);
  9  
 10  	   CURSOR c1 is
 11  	      select INVESTIGATOR ||'|'||
 12  		NULL ||'|'||  -- prc 10/21/04 Testing (NULL was SITE)
 13  		     PATIENT ||'|'||
 14  		DOCUMENT_NO ||'|'||
 15  		PLANNED_EVENT ||'|'||
 16  		SUBEVENT_NO ||'|'||
 17  		DCI_DATE ||'|'||
 18  		DCI_TIME ||'|'||
 19  		DCI_NAME ||'|'||
 20  		DCM_NAME ||'|'||
 21  		DCM_SUBSET ||'|'||
 22  		DCM_QUESGRP ||'|'||
 23  		DCM_QUES ||'|'||
 24  		DCM_OCCUR ||'|'||
 25  		REPEAT_SN ||'|'||
 26  		VALUETEXT ||'|'||
 27  		DATA_COMMENT ||'|'||
 28  		QUALIFYING_VALUE ||'|'||
 29  		STUDY		  data_record
 30  		from bdl_temp_files
 31  	       order by study, id, patient, subevent_no, dci_date, dci_time; -- prc 10/20/04 added subevent_no
 32  
 33  	   /*  -- prc 10/21/04 Testing (NULL was SITE) VV
 34  	   CURSOR c2 is
 35  	      select INVESTIGATOR ||'|'||
 36  		NULL ||'|'||  -- prc 10/21/04 Testing (NULL was SITE)
 37  		     PATIENT ||'|'||
 38  		DOCUMENT_NO ||'|'||
 39  		PLANNED_EVENT ||'|'||
 40  		SUBEVENT_NO ||'|'||
 41  		DCI_DATE ||'|'||
 42  		DCI_TIME ||'|'||
 43  		DCI_NAME ||'|'||
 44  		DCM_NAME ||'|'||
 45  		DCM_SUBSET ||'|'||
 46  		DCM_QUESGRP ||'|'||
 47  		DCM_QUES ||'|'||
 48  		DCM_OCCUR ||'|'||
 49  		REPEAT_SN ||'|'||
 50  		VALUETEXT ||'|'||
 51  		DATA_COMMENT ||'|'||
 52  		QUALIFYING_VALUE ||'|'||
 53  		STUDY		  data_record
 54  		from bdl_temp_files
 55  		where SITE = 'U'
 56  	       order by study, id, patient, subevent_no, dci_date, dci_time; -- prc 10/20/04 added subevent_no
 57  	    -- prc 10/21/04 Testing (NULL was SITE) ^^*/
 58  
 59  	   c1_rec c1%ROWTYPE;
 60  	   /*c2_rec c2%ROWTYPE;   -- prc 10/21/04 Testing (NULL was SITE)*/
 61  
 62  	begin
 63  
 64  	   select 'lab_'|| to_char(sysdate,'mmdd_hh24miss') ||'.dat'
 65  	     into ofile_name
 66  	     from dual;
 67  
 68  	   vfile_type := UTL_FILE.FOPEN ('LAB_DIR',ofile_name,'a'); -- prc 03/05/2004 9.2 needs it this way
 69  
 70  	   if UTL_FILE.IS_OPEN (vfile_type) then
 71  	      dbms_output.put_line('OS File is open.');
 72  	   else
 73  	      dbms_output.put_line('OS File is not open.');
 74  	   end if;
 75  
 76  	   OPEN c1;
 77  	   LOOP
 78  	      FETCH c1 INTO c1_rec;
 79  	      EXIT WHEN c1%NOTFOUND;
 80  
 81  	      utl_file.put_line(vfile_type,c1_rec.data_record);
 82  	   END LOOP;
 83  
 84  	   utl_file.fclose(vfile_type);
 85  	   oip_file := '/tmp/' || ofile_name;
 86  
 87  	   automate_bdl.run_bdl(oip_file);
 88  
 89  	   CLOSE c1;
 90  
 91  	   /*-- prc 10/21/04 Testing (NULL was SITE) VV
 92  	   select 'labu_'|| to_char(sysdate,'mmdd_hh24miss') ||'.dat'
 93  	     into ofile_name
 94  	     from dual;
 95  
 96  	   vfile_type := UTL_FILE.FOPEN ('LAB_DIR',ofile_name,'a'); -- prc 03/05/2004 9.2 needs it this way
 97  
 98  	   if UTL_FILE.IS_OPEN (vfile_type) then
 99  	      dbms_output.put_line('OS File is open.');
100  	   else
101  	      dbms_output.put_line('OS File is not open.');
102  	   end if;
103  
104  	   OPEN c2;
105  	   LOOP
106  	      FETCH c2 INTO c2_rec;
107  	      EXIT WHEN c2%NOTFOUND;
108  
109  	      utl_file.put_line(vfile_type,c2_rec.data_record);
110  	   END LOOP;
111  
112  	   utl_file.fclose(vfile_type);
113  	   oip_file := '/tmp/' || ofile_name;
114  
115  	   automate_bdl.run_bdl(oip_file);
116  
117  	   CLOSE c2;
118  	   -- prc 10/21/04 Testing (NULL was SITE) ^^ */
119  
120  	END create_dat_file;
121  
122  	PROCEDURE run_bdl (ip_file IN char)
123  	IS
124  
125  	   ip_id   number;
126  
127  	BEGIN
128  	   create_os_file (ip_file);
129  
130  	   BEGIN
131  
132  	      SELECT os_file_id
133  	      INTO  ip_id
134  	      FROM  os_files
135  	      WHERE status_code = 'RECEIVED'
136  	      AND   name = 'LOAD_DLM_LABS'
137  	      and FILE_NAME = ip_file;
138  
139  	   END;
140  
141  	   --submit_psub_bdl (ip_id, '/export/home/opapps/bdl');
142  	   --PRC 07/07/03: Reloadable file name is not right. Added '/'
143  	   --PRC 07/08/03: Reloadable file name is not right. Changed to '/export/home/bdl/log/'
144  	   submit_psub_bdl (ip_id, '/export/home/bdl/log/');
145  
146  	END run_bdl;
147  
148  	PROCEDURE create_os_file (ip_datafile IN char)
149  	IS
150  
151  	BEGIN
152  
153  	   INSERT INTO os_files (
154  	     OS_FILE_ID,
155  	     NAME,
156  	     FILE_NAME,
157  	     MASK_ID,
158  	     STATUS_CODE,
159  	     CREATED_BY,
160  	     CREATION_TS,
161  	     PRODUCTION_FLAG,
162  	     LAB_ID,
163  	     CHARACTER_SET)
164  	   VALUES
165  	     ( os_file_seq.nextval ,
166  	     'LOAD_DLM_LABS',
167  	     ip_datafile,
168  	     2001,
169  	     'RECEIVED',
170  	     user,
171  	     sysdate,
172  	     'Y',
173  	     101,
174  	     'SINGLE_BYTE');
175  
176  	   COMMIT;
177  
178  	END create_os_file;
179  
180  	PROCEDURE submit_psub_bdl (ip_file_id IN number, ip_directory_path IN char)
181  	IS
182  
183  	BEGIN
184  	   submit_psub_load (ip_file_id, ip_directory_path);
185  	   null;
186  	END submit_psub_bdl;
187  
188  END automate_bdl;
189  /

Warning: Package Body created with compilation errors.

SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Package CDW_load_lab_FTPData
Package CDW_load_lab_FTPData
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @CDW_load_lab_FTPData.plsql
SQL> CREATE OR REPLACE PACKAGE cdw_load_lab_FTPdata AS
  2  
  3  	-- Global Package Variables.
  4  
  5  	X_Loaded	 Number := 0;	  -- Count of records Loaded
  6  	X_Skipped	 Number := 0;	  -- Count of records Skipped
  7  
  8  	Function Get_One_Tab_Field(IN_String in out Varchar2) Return Varchar2;
  9  
 10  	Function Convert_Sydate_OCDate(IN_String in Varchar2) Return Varchar2;
 11  
 12  	Procedure Parse_Check_Insert_Rec(Txt_String in Varchar2);
 13  
 14  	Procedure Pre_Load_Setup;
 15  
 16  	Procedure Load_Flat_File;
 17  
 18  END cdw_load_lab_FTPdata;
 19  /

Package created.

SQL> 
SQL> Show Errors
No errors.
SQL> 
SQL> CREATE OR REPLACE PACKAGE BODY cdw_load_lab_FTPdata AS
  2    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  3    /*     Author: Patrick Conrad- Ekagra Software Technologies			    */
  4    /*	Date: 04/21/2004							    */
  5    /*Description: This package is used to load CDW Lab Data that exists in a flat file  */
  6    /*										    */
  7    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  8    /*  Modification History 							    */
  9    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 10    /*										    */
 11    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 12  Function Get_One_Tab_Field(IN_String in out Varchar2)
 13  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 14  /* This function is used to parse out the next tab delimited field.		  */
 15  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 16  Return Varchar2 is
 17  	x_Temp	  Varchar2(10000);
 18  Begin
 19  	If Instr(In_String,Chr(9)) = 0 Then
 20  	   x_temp := substr(In_String,1);
 21  	   In_String := Null;
 22  	Else
 23  	   x_temp := substr(In_String,1,Instr(In_String,Chr(9),1)-1);
 24  	   In_string := Substr(In_String,Instr(In_String,Chr(9),1)+1);
 25  	End If;
 26  	Return X_Temp;
 27  End;
 28  
 29  Function Convert_Sydate_OCDate(IN_String in Varchar2)
 30  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 31  /* Converts the text string passed to it having a format of "Mon DD YYYY HH:MI:SSAM" */
 32  /* to a specific text date witt the format "mmddyy hh24:mi:ss" and returns it.	   */
 33  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 34  Return Varchar2 is
 35  	x_Temp	  Varchar2(10000);
 36  Begin
 37  	x_temp := to_char(to_date(Substr(In_String,1,20)||Substr(In_String,25,2),
 38  				     'Mon FMDD YYYY HH:MI:SSAM'), 'mmddyy hh24:mi:ss');
 39  	Return X_Temp;
 40  	Exception
 41  	  When others Then
 42  	  Log_Util.LogMessage('Bad Date Convert'||SQLERRM);
 43  	  Log_Util.LogMessage('In_String = "'||In_String||'"');
 44  End;
 45  
 46  Procedure Parse_Check_Insert_Rec(Txt_String in Varchar2) is
 47  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 48  /* This function is used to Parse the record passed to it, Check its patient Id and  */
 49  /* dates to confirm loading, and insert it into the load table if needed. The Loaded */
 50  /* and skipped counters are incremented here.					  */
 51  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 52  
 53  	x_RESULT_ID	       nci_upload_sybase_lab_results.RESULT_ID%Type;
 54  	x_PATIENT_ID	       nci_upload_sybase_lab_results.PATIENT_ID%Type;
 55  	x_RECORD_DATETIME      nci_upload_sybase_lab_results.RECORD_DATETIME%Type;
 56  	x_TEST_ID	       nci_upload_sybase_lab_results.TEST_ID%Type;
 57  	x_TEST_CODE	       nci_upload_sybase_lab_results.TEST_CODE%Type;
 58  	x_TEST_NAME	       nci_upload_sybase_lab_results.TEST_NAME%Type;
 59  	x_TEST_UNIT	       nci_upload_sybase_lab_results.TEST_UNIT%Type;
 60  	x_ORDER_ID	       nci_upload_sybase_lab_results.ORDER_ID%Type;
 61  	x_PARENT_TEST_ID       nci_upload_sybase_lab_results.PARENT_TEST_ID%Type;
 62  	x_ORDER_NUMBER	       nci_upload_sybase_lab_results.ORDER_NUMBER%Type;
 63  	x_ACCESSION	       nci_upload_sybase_lab_results.ACCESSION%Type;
 64  	x_TEXT_RESULT	       nci_upload_sybase_lab_results.TEXT_RESULT%Type;
 65  	x_NUMERIC_RESULT       nci_upload_sybase_lab_results.NUMERIC_RESULT%Type;
 66  	x_HI_LOW_FLAG	       nci_upload_sybase_lab_results.HI_LOW_FLAG%Type;
 67  	x_UPDATED_FLAG	       nci_upload_sybase_lab_results.UPDATED_FLAG%Type;
 68  	x_LOW_RANGE	       nci_upload_sybase_lab_results.LOW_RANGE%Type;
 69  	x_HIGH_RANGE	       nci_upload_sybase_lab_results.HIGH_RANGE%Type;
 70  	x_REPORTED_DATETIME    nci_upload_sybase_lab_results.REPORTED_DATETIME%Type;
 71  	x_RECEIVED_DATETIME    nci_upload_sybase_lab_results.RECEIVED_DATETIME%Type;
 72  	x_COLLECTED_DATETIME   nci_upload_sybase_lab_results.COLLECTED_DATETIME%Type;
 73  	x_MASKED	       nci_upload_sybase_lab_results.MASKED%Type;
 74  	x_RANGE 	       nci_upload_sybase_lab_results.RANGE%Type;
 75  	x_SPECIMEN_ID	       nci_upload_sybase_lab_results.SPECIMEN_ID%Type;
 76  	x_SPECIMEN_MODIFIER_ID nci_upload_sybase_lab_results.SPECIMEN_MODIFIER_ID%Type;
 77  	x_QUALITATIVE_DICT_ID  nci_upload_sybase_lab_results.QUALITATIVE_DICT_ID%Type;
 78  	x_INSERTED_DATETIME    nci_upload_sybase_lab_results.INSERTED_DATETIME%Type;
 79  	x_UPDATE_DATETIME      nci_upload_sybase_lab_results.UPDATE_DATETIME%Type;
 80  
 81  	x_hold_string	       varchar2(10000);
 82  	x_temp		       varchar2(1);
 83  Begin
 84  	x_hold_string := Txt_String;
 85  
 86  	x_RESULT_ID		:= Get_One_Tab_Field(x_hold_string);
 87  	x_PATIENT_ID		:= Get_One_Tab_Field(x_hold_string);
 88  	x_RECORD_DATETIME	:= Convert_Sydate_OCDate(Get_One_Tab_Field(x_hold_string));
 89  	x_TEST_ID		:= Get_One_Tab_Field(x_hold_string);
 90  	x_TEST_CODE		:= Get_One_Tab_Field(x_hold_string);
 91  	x_TEST_NAME		:= Get_One_Tab_Field(x_hold_string);
 92  	x_TEST_UNIT		:= Get_One_Tab_Field(x_hold_string);
 93  	x_ORDER_ID		:= Get_One_Tab_Field(x_hold_string);
 94  	x_PARENT_TEST_ID	:= Get_One_Tab_Field(x_hold_string);
 95  	x_ORDER_NUMBER		:= Get_One_Tab_Field(x_hold_string);
 96  	x_ACCESSION		:= Get_One_Tab_Field(x_hold_string);
 97  	x_TEXT_RESULT		:= Get_One_Tab_Field(x_hold_string);
 98  	x_NUMERIC_RESULT	:= Get_One_Tab_Field(x_hold_string);
 99  	x_HI_LOW_FLAG		:= Get_One_Tab_Field(x_hold_string);
100  	x_UPDATED_FLAG		:= Get_One_Tab_Field(x_hold_string);
101  	x_LOW_RANGE		:= Get_One_Tab_Field(x_hold_string);
102  	x_HIGH_RANGE		:= Get_One_Tab_Field(x_hold_string);
103  	x_REPORTED_DATETIME	:= Convert_Sydate_OCDate(Get_One_Tab_Field(x_hold_string));
104  	x_RECEIVED_DATETIME	:= Convert_Sydate_OCDate(Get_One_Tab_Field(x_hold_string));
105  	x_COLLECTED_DATETIME	:= Convert_Sydate_OCDate(Get_One_Tab_Field(x_hold_string));
106  	x_MASKED		:= Get_One_Tab_Field(x_hold_string);
107  	x_RANGE 		:= Get_One_Tab_Field(x_hold_string);
108  	x_SPECIMEN_ID		:= Get_One_Tab_Field(x_hold_string);
109  	x_SPECIMEN_MODIFIER_ID	:= Get_One_Tab_Field(x_hold_string);
110  	x_QUALITATIVE_DICT_ID	:= Get_One_Tab_Field(x_hold_string);
111  	x_INSERTED_DATETIME	:= Convert_Sydate_OCDate(Get_One_Tab_Field(x_hold_string));
112  	x_UPDATE_DATETIME	:= Convert_Sydate_OCDate(Get_One_Tab_Field(x_hold_string));
113  
114  	Begin
115  
116  	   x_patient_id := lpad(x_patient_id, 7, '0'); -- prc 08/26/04	Prefix with zeros because they are dropped.
117  
118  	   Select 'X' Into x_temp from NCI_LAB_LOAD_PATIENT_LOAD
119  	   Where (PT_ID = x_Patient_id
120  		  and Load_flag = 'C'
121  		  and load_date < to_date(x_Inserted_Datetime, 'mmddyy hh24:mi:ss'))
122  	      OR (PT_ID = x_Patient_id
123  		  and Load_flag = 'X');
124  
125  	   Insert into NCI_UPLOAD_SYBASE_LAB_RESULTS
126  	   ( RESULT_ID		    ,PATIENT_ID 	   ,RECORD_DATETIME
127  	    ,TEST_ID		    ,TEST_CODE		   ,TEST_NAME
128  	    ,TEST_UNIT		    ,ORDER_ID		   ,PARENT_TEST_ID
129  	    ,ORDER_NUMBER	    ,ACCESSION		   ,TEXT_RESULT
130  	    ,NUMERIC_RESULT	    ,HI_LOW_FLAG	   ,UPDATED_FLAG
131  	    ,LOW_RANGE		    ,HIGH_RANGE 	   ,REPORTED_DATETIME
132  	    ,RECEIVED_DATETIME	    ,COLLECTED_DATETIME    ,MASKED
133  	    ,RANGE		    ,SPECIMEN_ID	   ,SPECIMEN_MODIFIER_ID
134  	    ,QUALITATIVE_DICT_ID    ,INSERTED_DATETIME	   ,UPDATE_DATETIME
135  	    ,UPLOAD_DATE)
136  	   VALUES
137  	   ( x_RESULT_ID	    ,x_PATIENT_ID	   ,x_RECORD_DATETIME
138  	    ,x_TEST_ID		    ,x_TEST_CODE	   ,x_TEST_NAME
139  	    ,x_TEST_UNIT	    ,x_ORDER_ID 	   ,x_PARENT_TEST_ID
140  	    ,x_ORDER_NUMBER	    ,x_ACCESSION	   ,x_TEXT_RESULT
141  	    ,x_NUMERIC_RESULT	    ,x_HI_LOW_FLAG	   ,x_UPDATED_FLAG
142  	    ,x_LOW_RANGE	    ,x_HIGH_RANGE	   ,x_REPORTED_DATETIME
143  	    ,x_RECEIVED_DATETIME    ,x_COLLECTED_DATETIME  ,x_MASKED
144  	    ,x_RANGE		    ,x_SPECIMEN_ID	   ,x_SPECIMEN_MODIFIER_ID
145  	    ,x_QUALITATIVE_DICT_ID  ,x_INSERTED_DATETIME   ,x_UPDATE_DATETIME
146  	    ,SYSDATE);
147  
148  	   x_Loaded := x_Loaded + 1;
149  
150  	Exception
151  	    When No_Data_Found Then
152  	      x_Skipped := x_Skipped + 1;
153  	      Null;
154  	End;
155  End;
156  
157  Procedure Pre_Load_Setup is
158  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
159  /* This procedure is used to set up Patient Load Data.  By placing this data into a  */
160  /* table, indexing can be used to perform faster queries.	The Patient Load Table	  */
161  /* contains information relating to available patients, and their last load date.	  */
162  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
163  
164  	x_load_date Date;
165  
166  Begin
167  	-- Clear out the Patient Load Table.
168  	Delete from NCI_LAB_LOAD_PATIENT_LOAD;
169  	Log_Util.LogMessage('PLS - '||to_char(SQL%RowCount)||' rows successfully removed from NCI_LAB_LOAD_PATIENT_LOAD');
170  
171  	Commit;
172  
173  	-- Fill the Patient Load Table using the Patient Position View and the Lab Results table
174  	-- A load flag of 'X' denotes a NEW patient (never had lab data loaded)
175  	insert into NCI_LAB_LOAD_PATIENT_LOAD (PT_ID, Load_Flag)
176  	select distinct to_char(Patient_id), 'X' from CDW_LAB_RESULTS
177  	Union
178  	(select distinct Replace(REPLACE(PT_ID, '-', ''),'.', ''), 'X'
179  	  from patient_id_ptid_vw
180  	 where NCI_INST_CD like '%NCI%'
181  	 minus
182  	select pt_id , 'X'
183  	  FROM patient_id_ptid_vw
184  	 where decode(instr(translate(pt_id,
185  			    '/ abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',
186  			    'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'),
187  		      'X'),0,'number','not_number') = 'not_number');
188  	Log_Util.LogMessage('PLS - '||to_char(SQL%RowCount)||' records successfully added to NCI_LAB_LOAD_PATIENT_LOAD');
189  
190  	Commit;
191  
192  	select inserted_date
193  	  into x_load_Date
194  	  from cdw_last_load;
195  
196  	Log_Util.LogMessage('PLS - Insert Date = '||to_char(x_load_date,'MM/DD/YYYY HH24:MI:SS'));
197  
198  	-- Update the Load date and flag for those patients that have had Labd previously loaded.
199  	-- Use each patients individual LOAD Date based upon raw data INSERTED DATETIME
200  	/*Update NCI_LAB_LOAD_PATIENT_LOAD a
201  	  set load_flag = 'C', load_date = x_load_date
202  	  where exists (select 'X' from CDW_LAB_RESULTS b
203  			 where b.patient_id = a.PT_ID);*/
204  
205  	  Update NCI_LAB_LOAD_PATIENT_LOAD a
206  	     set load_flag = 'C',
207  		 load_date = (select max(to_date(inserted_datetime,'MMDDRR HH24:MI:SS'))
208  				from cdw_lab_results b
209  			       where b.patient_id = a.PT_ID)
210  	   where exists (select 'X' from CDW_LAB_RESULTS b
211  			  where b.patient_id = a.PT_ID);
212  
213  	Log_Util.LogMessage('PLS - '||to_char(SQL%RowCount)||' records successfully updated in NCI_LAB_LOAD_PATIENT_LOAD');
214  
215  	Commit;
216  
217  End;
218  
219  
220  Procedure Load_Flat_File is
221  
222  	file_handle	 UTL_FILE.FILE_TYPE;   -- file handle of OS flat file
223  	retrieved_buffer VARCHAR2(32767);      -- Line BUFFER retrieved from flat file
224  	X		 Number := 0;	       -- Count of ALL records Read
225  
226  BEGIN
227  	-- Prepare for Message Logging
228  	If Log_Util.Log$LogName is null Then
229  	   Log_Util.LogSetName('LAB_DTAUPL_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
230  	End If;
231  
232  	Log_Util.LogMessage('LFF - Starting "Load Flat File"'); -- prc 07/16/03
233  
234  	-- Prepare Pateint Load Table
235  	Pre_LOAD_SETUP;
236  
237  	-- Open the file to read from
238  	file_handle := UTL_FILE.FOPEN('LAB_FTP','NCIC3D_cdr.vw_lab_results_current.txt','r',5000);
239  	if UTL_FILE.IS_OPEN (file_Handle) then
240  	   Log_Util.LogMessage('LDU File Open - '||to_char(sysdate,'HH24:MI:SS'));
241  
242  	   -- Clear all previously loaded flat file records
243  	   Delete from NCI_UPLOAD_SYBASE_LAB_RESULTS;
244  	   Log_Util.LogMessage('LDU - '||to_char(SQL%RowCount)||' records deleted from NCI_UPLOAD_SYBASE_LAB_RESULTS');
245  	   Commit;
246  
247  	   UTL_FILE.GET_LINE (file_handle, retrieved_buffer); -- read file (Skip line 1, it's just headers)
248  	   X := X + 1;
249  	   Loop
250  	     UTL_FILE.GET_LINE (file_handle, retrieved_buffer); -- read file
251  	     X := X + 1;
252  
253  	     -- Parse the Record into fields. Check its Date. Insert if needed.
254  	     Parse_Check_Insert_Rec(retrieved_buffer);
255  
256  	     -- Every 10000 records read, tell the log file.
257  	     If mod(X,10000) = 0 Then
258  		Log_Util.LogMessage('Read Point - Records='||to_char(X));
259  	     End If;
260  	     -- Every 10000 records loaded into the NCI_UPLOAD_SYBASE_LAB_RESULTS table, commit
261  	     If mod(X_Loaded+1,10000) = 0 Then
262  		Commit;
263  		Log_Util.LogMessage('Commit Point - Loaded Records='||to_char(X_Loaded));
264  	     End If;
265  	   End Loop;
266  
267  	Else
268  	   Log_Util.LogMessage('NOT OPEN');
269  	End If;
270  
271  	UTL_FILE.FCLOSE(file_handle);
272  	Commit;
273  	Log_Util.LogMessage('LFF - Ending "Load Flat File"');
274  
275  EXCEPTION
276  	WHEN NO_DATA_FOUND THEN
277  	   Log_Util.LogMessage('no_data_found - '||to_char(Sysdate,'HH24:MI:SS'));
278  	   Commit;
279  	   UTL_FILE.FCLOSE(file_handle);
280  	   Log_Util.LogMessage('Loaded = '||to_char(x_Loaded));
281  	   Log_Util.LogMessage('Skipped= '||to_char(x_Skipped));
282  	   Log_Util.LogMessage('Total Records= '||to_char(X));
283  	WHEN UTL_FILE.INVALID_PATH THEN
284  	   Log_Util.LogMessage('UTL_FILE.INVALID_PATH');
285  	   UTL_FILE.FCLOSE(file_handle);
286  	WHEN UTL_FILE.READ_ERROR THEN
287  	   Log_Util.LogMessage(' UTL_FILE.READ_ERROR');
288  	   UTL_FILE.FCLOSE(file_handle);
289  	WHEN UTL_FILE.WRITE_ERROR THEN
290  	   Log_Util.LogMessage('UTL_FILE.WRITE_ERROR');
291  	   UTL_FILE.FCLOSE(file_handle);
292  	WHEN UTL_FILE.INVALID_FILEHANDLE THEN
293  	   Log_Util.LogMessage('INVALID_FILEHANDLE');
294  	   UTL_FILE.FCLOSE(file_handle);
295  	WHEN OTHERS THEN
296  	   Log_Util.LogMessage('other stuff '||SQLERRM);
297  	   UTL_FILE.FCLOSE(file_handle);
298  END;
299  
300  END cdw_load_lab_FTPdata;
301  /

Package body created.

SQL> 
SQL> Show Errors
No errors.
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Package cr_insert_labdata_pkg_vLLI
Package cr_insert_labdata_pkg_vLLI
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @cr_insert_labdata_pkg_vLLI.plsql
SQL> create or replace PACKAGE insert_lab_data
  2  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  3  /*     Author: Original Unknown							  */
  4  /*       Date: Original Unknown							  */
  5  /*Description: Creates Batch Data Load records into a table.			  */
  6  /* 	    (Original Description Missing)					  */
  7  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  8  /*  Modification History								  */
  9  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 10  AS
 11  PROCEDURE insert_record (
 12    investigator IN char
 13  , site IN char
 14  , patient IN char
 15  , document_no IN char
 16  , planned_event IN char
 17  , subevent_no IN number
 18  , dci_date IN char
 19  , dci_time IN char
 20  , dci_name IN char
 21  , dcm_name IN char
 22  , dcm_subset IN char
 23  , dcm_quesgrp IN char
 24  , dcm_ques IN char
 25  , repeat_sn IN number
 26  , valuetext IN char
 27  , study IN char
 28  , tableid IN char);
 29  
 30  PROCEDURE save_repeat (
 31  repeat_sn IN number);
 32  
 33  PROCEDURE insert_missing_responses (
 34    investigator IN char
 35  , site IN char
 36  , patient IN char
 37  , document_no IN char
 38  , planned_event IN char
 39  , subevent_no IN number
 40  , dci_date IN char
 41  , dci_time IN char
 42  , dci_name IN char
 43  , ipdcm_name IN char
 44  , dcm_subset IN char
 45  , dcm_quesgrp IN char
 46  , dcm_ques IN char
 47  , repeat_sn IN number
 48  , valuetext IN char
 49  , ipstudy IN char
 50  , tableid IN char);
 51  
 52  PROCEDURE insert_missing_DCMS;
 53  
 54  PROCEDURE delete_repeats;
 55  
 56  END insert_lab_data;
 57  /

Package created.

SQL> 
SQL> show errors
No errors.
SQL> 
SQL> create or replace
  2  PACKAGE BODY insert_lab_data
  3  AS
  4  PROCEDURE insert_record (
  5   investigator IN char
  6  , site IN char
  7  , patient IN char
  8  , document_no IN char
  9  , planned_event IN char
 10  , subevent_no IN number
 11  , dci_date IN char
 12  , dci_time IN char
 13  , dci_name IN char
 14  , dcm_name IN char
 15  , dcm_subset IN char
 16  , dcm_quesgrp IN char
 17  , dcm_ques IN char
 18  , repeat_sn IN number
 19  , valuetext IN char
 20  , study IN char
 21  , tableid IN char)
 22  IS
 23  
 24  BEGIN
 25  	     INSERT INTO BDL_TEMP_FILES
 26  	     (ID,
 27  	     INVESTIGATOR,
 28  	     SITE,
 29  	     PATIENT,
 30  	     DOCUMENT_NO,
 31  	     PLANNED_EVENT,
 32  	     SUBEVENT_NO,
 33  	     DCI_DATE,
 34  	     DCI_TIME,
 35  	     DCI_NAME,
 36  	     DCM_NAME,
 37  	     DCM_SUBSET,
 38  	     DCM_QUESGRP,
 39  	     DCM_QUES,
 40  	     DCM_OCCUR,
 41  	     REPEAT_SN,
 42  	     VALUETEXT,
 43  	     DATA_COMMENT,
 44  	     QUALIFYING_VALUE,
 45  	     STUDY
 46  	     )
 47  	     VALUES (
 48  	     tableid,
 49  	     investigator,
 50  	     site,
 51  	     patient,
 52  	     document_no,
 53  	     planned_event,
 54  	     subevent_no,
 55  	     dci_date,
 56  	     dci_time,
 57  	     dci_name,
 58  	     dcm_name,
 59  	     dcm_subset,
 60  	     dcm_quesgrp,
 61  	     dcm_ques,
 62  	     '0',
 63  	     repeat_sn,
 64  	     valuetext,
 65  	     null,
 66  	     null,
 67  	     study);
 68  
 69  	     COMMIT;
 70  
 71  END insert_record;
 72  
 73  PROCEDURE save_repeat (
 74   repeat_sn IN number)
 75  IS
 76  
 77  BEGIN
 78  	     INSERT INTO BDL_RESPONSE_REPEATS (REPEAT_SN)
 79  	     VALUES (repeat_sn);
 80  
 81  	     COMMIT;
 82  
 83  END save_repeat;
 84  
 85  PROCEDURE insert_missing_responses (
 86   investigator IN char
 87  , site IN char
 88  , patient IN char
 89  , document_no IN char
 90  , planned_event IN char
 91  , subevent_no IN number
 92  , dci_date IN char
 93  , dci_time IN char
 94  , dci_name IN char
 95  , ipdcm_name IN char
 96  , dcm_subset IN char
 97  , dcm_quesgrp IN char
 98  , dcm_ques IN char
 99  , repeat_sn IN number
100  , valuetext IN char
101  , ipstudy IN char
102  , tableid IN char)
103  IS
104  
105  BEGIN
106  DECLARE
107  
108  CURSOR c1 is
109  	     SELECT v.repeat_sn repeat_seq
110  ,	     substr(v.oc_lab_question,1,20) value_text
111  	     FROM CLINICAL_STUDIES S,
112  		     NCI_STUDY_DCMS_VW V
113  	     WHERE S.study = ipstudy
114  	     AND V.oc_study = S.clinical_study_id
115  	     AND V.dcm_name = ipdcm_name
116  	     AND V.subset_name = dcm_subset
117  	     and v.cpe_name = planned_event  -- prc 04/29/2004: Need to limit it to the event.
118  	     AND V.QUESTION_NAME = 'LPARM'
119  	     AND V.REPEAT_SN NOT IN (SELECT repeat_sn FROM BDL_RESPONSE_REPEATS)
120  	     ORDER BY v.repeat_sn;
121  
122  
123  c1_record c1%ROWTYPE;
124  
125    BEGIN
126  
127    Log_Util.LogMessage('IMR - dci_name="'||dci_name||'"; dci_date='||dci_date||'; dci_time='||dci_time);
128    Log_Util.LogMessage('IMR - ipdcm_name="'||ipdcm_name||'"; dcm_subset="'||dcm_subset||'"');
129    Log_Util.LogMessage('IMR - DCM_quesgrp="'||DCM_quesgrp||'"; DCM_ques="'||DCM_ques||'"');
130    Log_Util.LogMessage('IMR - repeat_sn='||to_char(repeat_sn));
131    Log_Util.LogMessage('IMR - ipstudy="'||ipstudy||'"; patient='||patient);
132    Log_Util.LogMessage('IMR - valuetext='||valuetext);
133  
134    OPEN c1;
135    LOOP
136    FETCH c1 INTO c1_record;
137  
138    EXIT WHEN c1%NOTFOUND;
139    Log_Util.LogMessage('IMR - c1_record.repeat_seq='||lpad(c1_record.repeat_seq,4)||
140  				 '; c1_record.value_text='||c1_record.value_text);
141  
142  	     INSERT INTO BDL_TEMP_FILES
143  	     (ID,
144  	     INVESTIGATOR,
145  	     SITE,
146  	     PATIENT,
147  	     DOCUMENT_NO,
148  	     PLANNED_EVENT,
149  	     SUBEVENT_NO,
150  	     DCI_DATE,
151  	     DCI_TIME,
152  	     DCI_NAME,
153  	     DCM_NAME,
154  	     DCM_SUBSET,
155  	     DCM_QUESGRP,
156  	     DCM_QUES,
157  	     DCM_OCCUR,
158  	     REPEAT_SN,
159  	     VALUETEXT,
160  	     DATA_COMMENT,
161  	     QUALIFYING_VALUE,
162  	     STUDY
163  	     )
164  	     VALUES (
165  	     tableid,
166  	     investigator,
167  	     site,
168  	     patient,
169  	     document_no,
170  	     planned_event,
171  	     subevent_no,
172  	     dci_date,
173  	     dci_time,
174  	     dci_name,
175  	     ipdcm_name,
176  	     dcm_subset,
177  	     dcm_quesgrp,
178  	     'LPARM',
179  	     '0',
180  	     c1_record.repeat_seq,
181  	     c1_record.value_text,
182  	     null,
183  	     null,
184  	     ipstudy);
185  
186  	     COMMIT;
187  
188    END LOOP;
189  
190    CLOSE c1;
191  
192    END;
193  
194  END insert_missing_responses;
195  
196  PROCEDURE insert_missing_DCMs
197  IS
198  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
199  /*     Author: Patrick Conrad - Ekagra						  */
200  /*       Date: 01/04/2006								  */
201  /*Description: This procedure is used to create a question for each DCM that belongs */
202  /* 	    to a DCI for a Lab Test Records that is to be loaded  This is an	  */
203  /* 	    enhancement due to OC 4.5.1 upgrade that causes an error in RDC	  */
204  /* 	    (Remote Data Capture) when a DCI has missing DCMs.	This usually	  */
205  /* 	    when DCIs are loaded through Batch Data Loading.			  */
206  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
207  /*  Modification History								  */
208  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
209  
210  	CURSOR c1 (X_Study Varchar2, X_DCI_Name Varchar2, X_DCM_Name Varchar2,
211  		   X_DCI_Date Varchar2, X_DCI_Time Varchar2, x_Patient Varchar2) is
212  	select ri.CLIN_PLAN_EVE_NAME PLANNED_EVENT,
213  	       ri.SUBEVENT_NUMBER SUBEVENT_NO,
214  	       dq.question_name quest_name,
215  	       dm.QUAL_QUESTION_VALUE_TEXT QUAL_VALUE,
216  	       dqg.name DCM_QUESGRP,
217  	       NULL Value_Text,
218  	       d.name DCM_NAME,
219  	       d.subset_name DCMSUBST,
220  	       decode(dm.EVENT_DATE_IS_DCI_DATE_FLAG,'Y',ri.DCI_DATE, NULL) DCI_DATE,
221  	       decode(dm.COLLECT_EVENT_TIME_FLAG, 'Y', ri.DCI_TIME, NULL) DCI_TIME
222  	  from received_dcis ri,
223  	       dci_modules dm,
224  	       dcms d,
225  	       dcis i,
226  	       dcm_question_groups dqg,
227  	       dcm_questions dq
228  	 where ri.received_dci_status_code='BATCH LOADED'
229  	   and d.dcm_id=dm.DCM_ID
230  	   and d.DCM_LAYOUT_SN=dm.DCM_LAYOUT_SN
231  	   and d.DCM_SUBSET_SN=dm.DCM_SUBSET_SN
232  	   and dqg.DCM_ID=d.DCM_ID
233  	   and dqg.DCM_QUE_GRP_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
234  	   and dqg.DCM_QUE_GRP_DCM_SUBSET_SN=d.DCM_SUBSET_SN
235  	   and dqg.DISPLAY_SN=1
236  	   and dq.DCM_QUESTION_GROUP_ID=dqg.DCM_QUESTION_GRP_ID
237  	   and dq.DISPLAY_SN=1
238  	   and dq.derived_flag = 'N'
239  	   and ri.DCI_ID=i.DCI_ID
240  	   and i.DCI_ID=dm.DCI_ID
241  	   and i.dci_id in (select dci_id from dci_modules group by dci_id having count(*)>1)
242  	   and i.domain = x_Study
243  	   and i.name = x_DCI_Name
244  	   and d.name <> x_DCM_Name
245  	   and ri.DCI_DATE = x_DCI_DATE
246  	   and ri.DCI_TIME = x_DCI_TIME
247  	   and ri.patient  = x_Patient
248  	   and d.dcm_id not in (select dcm_id from received_dcms a
249  				where a.RECEIVED_DCI_ID = ri.RECEIVED_DCI_ID);
250  
251  	c1_rec c1%ROWTYPE;
252  
253  
254  BEGIN
255  	If Log_Util.Log$LogName is null Then
256  	   Log_Util.LogSetName('MISSDCMS_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
257  	Else
258  	  Log_Util.LogMessage('IMDCMs: Starting Insert Missing DCMS');
259  	End If;
260  
261  	Log_Util.LogMessage('IMDCMs: Deleting existing "EXTRA_DCMS" records from BDL_TEMP_FILES.');
262  	Delete from bdl_temp_files where id = 'EXTRA_DCMS';
263  	Log_Util.LogMessage('IMDCMs: '||to_char(SQL%RowCount)||
264  			    ' "EXTRA_DCMS" records successfully deleted from BDL_TEMP_FILES');
265  
266  	Log_Util.LogMessage('IMDCMs: Querying for BDL_TEMP_FILES records needing extra DCMs.');
267  
268  	For X_REc in (select distinct study, patient, DCI_NAME, DCM_NAME, DCI_DATE, DCI_TIME from bdl_temp_files) Loop
269  
270  	   Log_Util.LogMessage('IMDCMs: Query Found - study="'||X_Rec.study||'"; Patient="'||X_Rec.Patient||'"; '||
271  				       'dci_name="'||X_Rec.dci_name||'"; dcm_name="'||X_Rec.dcm_name||'"; '||
272  				       'dci_date="'||X_Rec.dci_date||'"; dci_time="'||X_Rec.dci_time||'"');
273  
274  	   OPEN c1 (X_Rec.Study, X_Rec.DCI_Name, X_Rec.DCM_Name,
275  		    X_Rec.DCI_Date, X_Rec.DCI_Time, X_Rec.Patient);
276  	   LOOP
277  	      FETCH c1 INTO c1_rec;
278  
279  	      EXIT WHEN c1%NOTFOUND;
280  	      Log_Util.LogMessage('IMDCMs: Found Missing - DCM="'||c1_rec.DCM_NAME||'";  Question="'||c1_rec.quest_name||'"');
281  	      Log_Util.LogMessage('IMDCMs:		   SubEvent_No="'||c1_rec.SubEvent_no||'"; '||
282  						  'Planned_Event="'||c1_rec.PLANNED_EVENT||'"');
283  
284  	      INSERT INTO BDL_TEMP_FILES (
285  		ID,		       INVESTIGATOR,	    SITE,		PATIENT,	   DOCUMENT_NO,
286  		PLANNED_EVENT,	       SUBEVENT_NO,	    DCI_DATE,		DCI_TIME,	   DCI_NAME,
287  		DCM_NAME,	       DCM_SUBSET,	    DCM_QUESGRP,	DCM_QUES,	   DCM_OCCUR,
288  		REPEAT_SN,	       VALUETEXT,	    DATA_COMMENT,	QUALIFYING_VALUE,  STUDY	)
289  	      VALUES (
290  		'EXTRA_DCMS',	       NULL,		    NULL,		X_Rec.Patient,	   NULL,
291  		C1_Rec.Planned_Event,  C1_Rec.subevent_no,  C1_Rec.DCI_DATE,	C1_Rec.DCI_TIME,   X_Rec.dci_name,
292  		C1_Rec.dcm_name,       C1_Rec.dcmsubst,     C1_Rec.dcm_quesgrp, C1_Rec.quest_name, '0',
293  		1,		       C1_Rec.value_text,   NULL,		c1_Rec.QUAL_VALUE, X_Rec.study);
294  
295  	      COMMIT;
296  
297  	   END LOOP;
298  
299  	   CLOSE c1;
300  
301  	End Loop;
302  	Log_Util.LogMessage('IMDCMs: Finished querying for BDL_TEMP_FILES records needing extra DCMs.');
303  
304  	Log_Util.LogMessage('IMDCMs: Deleting NON-"EXTRA_DCMS" records from BDL_TEMP_FILES.');
305  	Delete from bdl_temp_files where id <> 'EXTRA_DCMS';
306  	Log_Util.LogMessage('IMDCMs: '||to_char(SQL%RowCount)||
307  			    ' NON-"EXTRA_DCMS" records successfully deleted from BDL_TEMP_FILES');
308  
309  	COMMIT;
310  
311  	Log_Util.LogMessage('IMDCMs: Finished Insert Missing DCMS');
312  
313  END insert_missing_DCMs;
314  
315  
316  PROCEDURE delete_repeats
317  IS
318  
319  BEGIN
320  	     DELETE from BDL_RESPONSE_REPEATS;
321  
322  	     COMMIT;
323  
324  END delete_repeats;
325  
326  END insert_lab_data;
327  /

Package body created.

SQL> 
SQL> sho errors
No errors.
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Package load_lab_results
Package load_lab_results
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @load_lab_results.plsql
SQL> CREATE OR REPLACE PROCEDURE load_lab_results (v_Type in Varchar2) AS
  2    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  3    /*     Author: Unknown								    */
  4    /*	Date: Unknown								    */
  5    /*Description: (Original Description Missing)					    */
  6    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  7    /*  Modification History 							    */
  8    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
  9    /* Author: Patrick Conrad- Ekagra Software Technologies				    */
 10    /*   Date: 07/15/03								    */
 11    /*    Mod: 1) Found that date conversion was causing bad dates			    */
 12    /*	  ie to_date('99','YY') = '2099'.  Replaced all 'YY' with 'RR'		    */
 13    /*	  2) Cleaned Code for Readability					    */
 14    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 15    /* Author: Patrick Conrad- Ekagra Software Technologies				    */
 16    /*   Date: 10/22/03								    */
 17    /*    Mod: 1) Added active status to DCI/DCM lookup query.			    */
 18    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 19    /* Author: Patrick Conrad- Ekagra Software Technologies				    */
 20    /*   Date: 04/08/04								    */
 21    /*    Mod: 1) Removed section of code the marked Duplicates.  This is now done in the*/
 22    /*	  Flag_Dup_Lab_Results procedure.					    */
 23    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 24    /* Author: Patrick Conrad- Ekagra Software Technologies				    */
 25    /*   Date: 08/19/04								    */
 26    /*    Mod: 1) Added parameter to procedure so that NEW records can be run first, then*/
 27    /*	  DUPLICATES can be run after.						    */
 28    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 29  
 30    tableid	       varchar2(20);
 31    investigator    varchar2(10);
 32    site	       varchar2(10);
 33    planned_event   varchar2(40);
 34    S_dci_name      varchar2(50);
 35    S_dcm_id        number(10);
 36    S_dcm_name      varchar2(50);
 37    S_dcm_subset    varchar2(50);
 38    dcm_quesgrp     varchar2(50);
 39    dcm_ques        varchar2(50);
 40    study	       varchar2(50);
 41    c1patient       varchar2(50);
 42    c1dci_date      varchar2(50);
 43    c1valuetext     varchar2(200);
 44    dci_time        varchar2(6);
 45    oc_panel        varchar2(20);
 46    oc_panel_subset varchar2(12);
 47  
 48    edate date;
 49  
 50    currpnt	     varchar2(10);
 51    lastpnt	     varchar2(10);
 52    laststudy     varchar2(50);
 53    lastvdate     varchar2(10);
 54    lastvtime     varchar2(6);
 55    first_patient char(1);
 56    subevent      number(2);
 57    document_no   varchar2(20);
 58    repeat_sn     number(4);
 59    no_repeat     number(4);
 60    ltf_name      varchar2(200);
 61    lre_name      varchar2(200);
 62    labcat_name   varchar2(200);
 63    currdate      varchar2(8);
 64  
 65    v_repeat_add  number(4) := 0;
 66  
 67    xc1patient     varchar2(50);
 68    xc1study       varchar2(50);
 69    xdocument_no   varchar2(20);
 70    xsubevent      number(2);
 71    xplanned_event varchar2(40);
 72    xc1dci_date    varchar2(50);
 73    xdci_time      varchar2(6);
 74    xdci_name      varchar2(50);
 75    xdcm_name      varchar2(50);
 76    xdcm_subset    varchar2(50);
 77    xtableid       varchar2(20);
 78  
 79    last_oc_lab_panel    varchar2(20);
 80    last_oc_lab_subset   varchar2(12);
 81    last_oc_patient_pos  varchar2(12);
 82    last_sample_datetime varchar2(10);
 83    last_oc_lab_question varchar2(20);
 84  
 85    CURSOR c1 is
 86  	 SELECT record_id
 87  	       ,patient_id
 88  	       ,patient_name
 89  	       ,sample_datetime
 90  	       ,TO_CHAR(to_date(substr(lpad(sample_datetime, 10, 0), 1, 6)
 91  			       ,'MMDDRR') -- PRC 07/25/03
 92  		       ,'YYYYMMDD') vdate
 93  	       ,substr(lpad(sample_datetime, 10, 0), 7, 4) || '00' vtime
 94  	       ,laboratory
 95  	       ,labtest_name
 96  	       ,result
 97  	       ,unit
 98  	       ,normal_value
 99  	       ,panel_name
100  	       ,lab_grade
101  	       ,oc_lab_panel
102  	       ,oc_lab_subset
103  	       ,oc_lab_question
104  	       ,oc_lab_event
105  	       ,decode(comments
106  		      ,null
107  		      ,'N/A'
108  		      ,SUBSTR(TRANSLATE(comments, ',', ' '), 1, 20)) comm
109  	       ,oc_patient_pos
110  	       ,test_component_id
111  	       ,oc_study
112  	       ,s.clinical_study_id study_id
113  	   FROM nci_labs n, clinical_studies s
114  	  WHERE OC_LAB_PANEL is not null AND LOAD_FLAG = v_type AND
115  		n.oc_study = s.study
116  	  ORDER BY n.oc_study
117  		  ,oc_lab_panel
118  		  ,oc_lab_subset
119  		  ,oc_patient_pos
120  		  ,vdate
121  		  ,vtime
122  		  ,oc_lab_question
123  		  ,unit;
124  
125    c1_record c1%ROWTYPE;
126  
127  BEGIN
128  
129    If Log_Util.Log$LogName is null Then
130  	  Log_Util.LogSetName('MISREPEAT_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
131    End If;
132  
133    Log_Util.LogMessage('LLR - Lab Load Results Starting (Type = '||v_type||')');
134  
135    lastpnt	     := 0;
136    laststudy     := '~';
137    subevent      := null;
138    no_repeat     := 1;
139    lastvdate     := '000000';
140    first_patient := 'Y';
141    repeat_sn     := 0;
142    document_no   := null;
143    investigator  := null;
144    site	     := null;
145  
146    OPEN c1;
147    LOOP
148  	 FETCH c1 INTO c1_record;
149  
150  	 EXIT WHEN c1%NOTFOUND;
151  
152  	 planned_event	 := c1_record.oc_lab_event;
153  	 c1patient	 := c1_record.oc_patient_pos;
154  	 c1dci_date	 := c1_record.vdate;
155  	 currpnt	 := c1_record.patient_id;
156  	 dci_time	 := c1_record.vtime;
157  	 oc_panel	 := c1_record.oc_lab_panel;
158  	 oc_panel_subset := c1_record.oc_lab_subset;
159  	 study		 := c1_record.oc_study;
160  
161  	 if (c1patient = last_oc_patient_pos and study = laststudy) then
162  	   if (c1dci_date = lastvdate) AND (dci_time = lastvtime) AND
163  	      (oc_panel = last_oc_lab_panel) AND
164  	      (oc_panel_subset = last_oc_lab_subset) then
165  	     NULL;
166  	   else
167  	     --    subevent := subevent + 1;
168  
169  	     dcm_ques	 := null;
170  	     c1valuetext := null;
171  
172  	     insert_lab_data.insert_missing_responses(investigator
173  						     ,site
174  						     ,xc1patient
175  						     ,xdocument_no
176  						     ,xplanned_event
177  						     ,xsubevent
178  						     ,xc1dci_date
179  						     ,xdci_time
180  						     ,xdci_name
181  						     ,xdcm_name
182  						     ,xdcm_subset
183  						     ,dcm_quesgrp
184  						     ,dcm_ques
185  						     ,no_repeat
186  						     ,c1valuetext
187  						     ,xc1study
188  						     ,xtableid);
189  
190  	     insert_lab_data.delete_repeats;
191  	     subevent := null;
192  	   end if;
193  	 else
194  	   --  subevent := 0;
195  
196  	   if first_patient = 'Y' then
197  	     null;
198  
199  	   else
200  	     -- since this is a new patient, reset the repeat_sn to the beginning
201  	     repeat_sn := 1;
202  
203  	     dcm_ques	 := null;
204  	     c1valuetext := null;
205  
206  	     insert_lab_data.insert_missing_responses(investigator
207  						     ,site
208  						     ,xc1patient
209  						     ,xdocument_no
210  						     ,xplanned_event
211  						     ,xsubevent
212  						     ,xc1dci_date
213  						     ,xdci_time
214  						     ,xdci_name
215  						     ,xdcm_name
216  						     ,xdcm_subset
217  						     ,dcm_quesgrp
218  						     ,dcm_ques
219  						     ,no_repeat
220  						     ,c1valuetext
221  						     ,xc1study
222  						     ,xtableid);
223  
224  	     insert_lab_data.delete_repeats;
225  	     subevent := null;
226  	   end if;
227  
228  	 end if;
229  
230  	 BEGIN
231  	   Log_Util.LogMessage('LLR - Trying to find: ');
232  	   Log_Util.LogMessage('      '||c1_Record.OC_STUDY||' / '||c1_Record.OC_LAB_PANEL||
233  				      ' / '||c1_Record.OC_LAB_SUBSET||' / '||c1_Record.oc_patient_pos||
234  				      ' / '||c1_Record.vdate||' / '||c1_Record.vtime||'.'||
235  				      'Question ['||c1_Record.OC_LAB_QUESTION||']');
236  
237  	   -- Get the DCI/DCM/Subset for this lab_panel
238  	   SELECT distinct d.name, d.dcm_id, d.subset_name, dc.name
239  	     into S_dcm_name, S_dcm_id, S_dcm_subset, S_dci_name
240  	     FROM DCMS d, DCI_MODULES dm, DCIS dc,
241  		  dci_book_pages bp, dci_books b -- prc 04/01/2004:  Only look at 'Active' DCI Books
242  	    WHERE d.name = c1_record.oc_lab_panel and
243  		  d.subset_name = c1_record.oc_lab_subset and
244  		  d.clinical_study_id = c1_record.study_id and
245  		  d.dcm_subset_sn = dm.dcm_subset_sn and d.dcm_id = dm.dcm_id and
246  		  dm.dci_id = dc.dci_id
247  	      AND dc.dci_id = bp.dci_id
248  	      AND b.dci_book_id = bp.dci_book_id
249  	      AND dc.dci_status_code = 'A'  -- PRC 10/22/03: Added Active Status.
250  	      and b.DCI_BOOK_STATUS_CODE = 'A'; -- prc 04/01/2004:  Only look at 'Active' DCI Books
251  	 END;
252  
253  	 BEGIN
254  	   -- Get the Repeat_Sn for the Question using results from above
255  	   SELECT rd.repeat_sn
256  	     INTO repeat_sn
257  	     FROM dcm_ques_repeat_defaults rd, dcm_questions dq, dcms d
258  	    WHERE d.dcm_id = S_dcm_id
259  	      and d.subset_name = S_dcm_subset
260  	      and d.dcm_id = dq.dcm_id
261  	      and rd.dcm_subset_sn = dq.dcm_que_dcm_subset_sn  -- Added to ensure proper subset to repeat default
262  	      and d.dcm_subset_sn = dq.dcm_que_dcm_subset_sn
263  	      and dq.dcm_question_id = rd.dcm_question_id
264  	      and dq.QUESTION_NAME = 'LPARM'
265  	      and rd.default_value_text = c1_record.oc_lab_question;
266  
267  	   Log_Util.LogMessage('      Found GLIB Repeat Sn Question ['||c1_Record.OC_LAB_QUESTION||
268  			       '] "'||repeat_sn||'"@('||c1_record.oc_lab_event||')');
269  
270  
271  	 EXCEPTION
272  	   WHEN NO_DATA_FOUND THEN -- Means, that question is on a non default_repeat dcm
273  	      Begin
274  		 -- prc 10/18/04 : Added subevent lookup
275  		 -- prc 09/22/04 : See if this labtest has loaded already
276  		 Log_Util.LogMessage('LLR - DEFAULT QUESTION REPEAT_SN NOT FOUND, Checking Responses...');
277  		 Log_Util.LogMessage('LLR - DEFAULT QUESTION REPEAT_SN NOT FOUND, Checking for '||c1_Record.OC_LAB_QUESTION);
278  		 SELECT max(rp.repeat_sn)
279  		   INTO repeat_sn
280  		   FROM dcms	      d,
281  			received_dcms rd,
282  			dcm_questions dp,
283  			responses     rp
284  		  WHERE d.DOMAIN = c1_Record.OC_STUDY
285  		    AND d.NAME	 = c1_Record.OC_LAB_PANEL
286  		    AND d.SUBSET_NAME = c1_Record.OC_LAB_SUBSET
287  		    and d.CLINICAL_STUDY_ID =rd.CLINICAL_STUDY_ID
288  		    AND d.dcm_id=rd.dcm_id
289  		    AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
290  		    AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
291  		    and rd.patient = c1_Record.oc_patient_pos
292  		    AND rd.DCM_DATE= TO_CHAR(TO_DATE(c1_Record.SAMPLE_DATETIME,'mmddrrhh24mi'),'yyyymmdd')
293  		    AND rd.DCM_TIME= SUBSTR(c1_Record.SAMPLE_DATETIME,7)||'00'
294  		    AND dp.DCM_ID=d.dcm_id
295  		    AND dp.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
296  		    AND dp.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
297  		    AND dp.QUESTION_NAME='LPARM'
298  		    and rp.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
299  		    AND rp.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
300  		    AND rp.DCM_QUESTION_ID=dp.DCM_QUESTION_ID
301  		    AND rp.VALUE_TEXT = c1_Record.OC_LAB_QUESTION
302  		    and Rp.END_TS = to_date(3000000, 'J');
303  
304  		 If repeat_sn is null Then
305  		 -- PRC 09/22/04 : Find the Greatest repeat seq for LabTest / Panel / Date
306  		    Log_Util.LogMessage('LLR - RESPONSE REPEAT_SN NOT FOUND, Getting MAX Repeat_SN for: ');
307  		    Log_Util.LogMessage('      '||c1_Record.OC_STUDY||' / '||c1_Record.OC_LAB_PANEL||
308  					' / '||c1_Record.OC_LAB_SUBSET||' / '||c1_Record.oc_patient_pos||
309  					' / '||c1_Record.vdate||' / '||c1_Record.vtime||'.');
310  		    SELECT max(rp.repeat_sn)
311  		      INTO repeat_sn
312  		      FROM dcms 	 d,
313  			   received_dcms rd,
314  			   dcm_questions dp,
315  			   responses	 rp
316  		     WHERE d.DOMAIN = c1_Record.OC_STUDY
317  		       AND d.NAME   = c1_Record.OC_LAB_PANEL
318  		       AND d.SUBSET_NAME = c1_Record.OC_LAB_SUBSET
319  		       and d.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
320  		       AND d.dcm_id=rd.dcm_id
321  		       AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
322  		       AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
323  		       and rd.patient = c1_Record.oc_patient_pos
324  		       AND rd.DCM_DATE= TO_CHAR(TO_DATE(c1_Record.SAMPLE_DATETIME,'mmddrrhh24mi'),'yyyymmdd')
325  		       AND rd.DCM_TIME= SUBSTR(c1_Record.SAMPLE_DATETIME,7)||'00'
326  		       AND dp.DCM_ID=d.dcm_id
327  		       AND dp.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
328  		       AND dp.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
329  		       AND dp.QUESTION_NAME='LPARM'
330  		       and rp.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
331  		       AND rp.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
332  		       AND rp.DCM_QUESTION_ID=dp.DCM_QUESTION_ID
333  		       and Rp.END_TS = to_date(3000000, 'J');
334  
335  		    If (last_oc_lab_panel  = c1_record.oc_lab_panel and
336  			last_oc_lab_subset  = c1_record.oc_lab_subset and
337  			last_oc_patient_pos = c1_record.oc_patient_pos and
338  			last_sample_datetime= c1_record.sample_datetime and
339  			laststudy	    = c1_record.oc_study) Then
340  
341  		       v_repeat_add := v_repeat_add + 1;
342  		       Log_Util.LogMessage('LLR - Adding one to v_repeat_add');
343  
344  		    Else
345  		       v_repeat_add :=	1;
346  		       Log_Util.LogMessage('LLR - Setting v_repeat_add = 1');
347  		    End If;
348  
349  		    Log_Util.LogMessage('LLR - Adding v_repeat_add to repeat_sn');
350  		    repeat_sn := nvl(repeat_sn,0) + v_repeat_add;
351  
352  		 End If;
353  
354  	      End;
355  
356  	 END;
357  
358  	 If v_type = 'S' Then
359  	    -- Get the Subevent Number for the soft-deleted panel.
360  	    SELECT distinct clin_plan_eve_name, subevent_number
361  	      INTO planned_event, subevent
362  	      FROM dcms 	 d,
363  		   received_dcms rd
364  	     WHERE d.DOMAIN = C1_Record.OC_STUDY
365  	       AND d.NAME   = C1_Record.OC_LAB_PANEL
366  	       AND d.SUBSET_NAME = C1_Record.OC_LAB_SUBSET
367  	       and d.CLINICAL_STUDY_ID =rd.CLINICAL_STUDY_ID
368  	       AND d.dcm_id=rd.dcm_id
369  	       AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
370  	       AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
371  	       and rd.patient = C1_Record.oc_patient_pos
372  	       AND rd.DCM_DATE= C1_Record.vdate
373  	       AND rd.DCM_TIME= C1_Record.vtime
374  	       and rd.received_dci_id = (
375  			      SELECT max(rd2.received_dci_id)
376  				FROM dcms	   d2,
377  				     received_dcms rd2
378  			       WHERE d2.DOMAIN = d.domain
379  				 AND d2.NAME   = d.NAME
380  				 AND d2.SUBSET_NAME = d.SUBSET_NAME
381  				 and d2.CLINICAL_STUDY_ID =rd2.CLINICAL_STUDY_ID
382  				 AND d2.dcm_id = rd2.dcm_id
383  				 AND d2.DCM_SUBSET_SN = rd2.DCM_SUBSET_SN
384  				 AND d2.dcm_layout_sn = rd2.DCM_LAYOUT_SN
385  				 and rd2.patient = rd.patient
386  				 and rd2.clin_plan_eve_name = rd.clin_plan_eve_name
387  				 and rd2.subevent_number    = rd.subevent_number);
388  
389  	    -- prc 06/06/06 :changed message.
390  	    Log_Util.LogMessage('LLRU -       Found Event = ['||planned_event||']; '||' SubEvent = ['||subevent||']');
391  
392  	    -- Update the Event in NCI_LABS
393  	    Update nci_labs
394  	       set oc_lab_event = planned_event
395  	     where record_id = c1_Record.record_id;
396  
397  	 Else
398  	    -- This is a NEW record, subevent number not needed.
399  	    SubEvent := Null;
400  	 End If;
401  
402  	 dcm_quesgrp := 'LAB';
403  	 dcm_ques    := 'LPARM';
404  	 c1valuetext := c1_record.oc_lab_question;
405  	 tableid     := c1_record.oc_lab_panel;
406  
407  	 insert_lab_data.insert_record(investigator
408  				      ,site
409  				      ,c1patient
410  				      ,document_no
411  				      ,planned_event
412  				      ,subevent
413  				      ,c1dci_date
414  				      ,dci_time
415  				      ,S_dci_name
416  				      ,S_dcm_name
417  				      ,S_dcm_subset
418  				      ,dcm_quesgrp
419  				      ,dcm_ques
420  				      ,repeat_sn
421  				      ,c1valuetext
422  				      ,study
423  				      ,tableid);
424  
425  	 dcm_ques    := 'LVALUE';
426  	 c1valuetext := c1_record.result;
427  
428  	 insert_lab_data.insert_record(investigator
429  				      ,site
430  				      ,c1patient
431  				      ,document_no
432  				      ,planned_event
433  				      ,subevent
434  				      ,c1dci_date
435  				      ,dci_time
436  				      ,S_dci_name
437  				      ,S_dcm_name
438  				      ,S_dcm_subset
439  				      ,dcm_quesgrp
440  				      ,dcm_ques
441  				      ,repeat_sn
442  				      ,c1valuetext
443  				      ,study
444  				      ,tableid);
445  
446  	 dcm_ques    := 'LAB_UOM';
447  	 c1valuetext := c1_record.unit;
448  
449  	 insert_lab_data.insert_record(investigator
450  				      ,site
451  				      ,c1patient
452  				      ,document_no
453  				      ,planned_event
454  				      ,subevent
455  				      ,c1dci_date
456  				      ,dci_time
457  				      ,S_dci_name
458  				      ,S_dcm_name
459  				      ,S_dcm_subset
460  				      ,dcm_quesgrp
461  				      ,dcm_ques
462  				      ,repeat_sn
463  				      ,c1valuetext
464  				      ,study
465  				      ,tableid);
466  
467  	 dcm_ques    := 'LAB_DATA_CODE';
468  	 c1valuetext := c1_record.test_component_id;
469  
470  	 insert_lab_data.insert_record(investigator
471  				      ,site
472  				      ,c1patient
473  				      ,document_no
474  				      ,planned_event
475  				      ,subevent
476  				      ,c1dci_date
477  				      ,dci_time
478  				      ,S_dci_name
479  				      ,S_dcm_name
480  				      ,S_dcm_subset
481  				      ,dcm_quesgrp
482  				      ,dcm_ques
483  				      ,repeat_sn
484  				      ,c1valuetext
485  				      ,study
486  				      ,tableid);
487  
488  	 dcm_ques    := 'LAB_DATA_SOURCE';
489  	 c1valuetext := c1_record.laboratory;
490  
491  	 insert_lab_data.insert_record(investigator
492  				      ,site
493  				      ,c1patient
494  				      ,document_no
495  				      ,planned_event
496  				      ,subevent
497  				      ,c1dci_date
498  				      ,dci_time
499  				      ,S_dci_name
500  				      ,S_dcm_name
501  				      ,S_dcm_subset
502  				      ,dcm_quesgrp
503  				      ,dcm_ques
504  				      ,repeat_sn
505  				      ,c1valuetext
506  				      ,study
507  				      ,tableid);
508  
509  	 dcm_ques    := 'NORMAL_VALUES';
510  	 c1valuetext := c1_record.normal_value;
511  
512  	 insert_lab_data.insert_record(investigator
513  				      ,site
514  				      ,c1patient
515  				      ,document_no
516  				      ,planned_event
517  				      ,subevent
518  				      ,c1dci_date
519  				      ,dci_time
520  				      ,S_dci_name
521  				      ,S_dcm_name
522  				      ,S_dcm_subset
523  				      ,dcm_quesgrp
524  				      ,dcm_ques
525  				      ,repeat_sn
526  				      ,c1valuetext
527  				      ,study
528  				      ,tableid);
529  
530  	 dcm_ques    := 'LAB_PANEL';
531  	 c1valuetext := c1_record.panel_name;
532  
533  	 insert_lab_data.insert_record(investigator
534  				      ,site
535  				      ,c1patient
536  				      ,document_no
537  				      ,planned_event
538  				      ,subevent
539  				      ,c1dci_date
540  				      ,dci_time
541  				      ,S_dci_name
542  				      ,S_dcm_name
543  				      ,S_dcm_subset
544  				      ,dcm_quesgrp
545  				      ,dcm_ques
546  				      ,repeat_sn
547  				      ,c1valuetext
548  				      ,study
549  				      ,tableid);
550  
551  
552  	 -- store repeat_sn for the LPARM record
553  	 --Log_Util.LogMessage('IRS - repeat_sn = '||to_char(repeat_sn));
554  
555  	 insert_lab_data.save_repeat(repeat_sn);
556  
557  	 -- store current values for use with missing responses
558  	 xc1patient	:= c1patient;
559  	 xc1study	:= study;
560  	 xdocument_no	:= document_no;
561  	 xsubevent	:= subevent;
562  	 xc1dci_date	:= c1dci_date;
563  	 xdci_time	:= dci_time;
564  	 xdci_name	:= S_dci_name;
565  	 xdcm_name	:= S_dcm_name;
566  	 xdcm_subset	:= S_dcm_subset;
567  	 xtableid	:= tableid;
568  	 xplanned_event := planned_event;
569  
570  	 -- store current values for use in matching additional lab results
571  	 last_oc_lab_panel    := c1_record.oc_lab_panel;
572  	 last_oc_lab_subset   := c1_record.oc_lab_subset;
573  	 last_oc_patient_pos  := c1_record.oc_patient_pos;
574  	 last_sample_datetime := c1_record.sample_datetime;
575  	 last_oc_lab_question := c1_record.oc_lab_question;
576  
577  	 -- update flags indicating patient processing
578  	 lastpnt       := c1_record.patient_id;
579  	 laststudy     := c1_record.oc_study;
580  	 lastvdate     := c1_record.vdate;
581  	 lastvtime     := c1_record.vtime;
582  	 first_patient := 'N';
583  
584  	 <<endrecord>>
585  	 NULL;
586  
587    END LOOP;
588  
589    --process end of file with one more check of missing responses
590  
591    dcm_ques    := null;
592    c1valuetext := null;
593  
594    Log_Util.LogMessage('IRS - Firing IMR');
595  
596    insert_lab_data.insert_missing_responses(investigator
597  					       ,site
598  					       ,c1patient
599  					       ,document_no
600  					       ,planned_event
601  					       ,subevent
602  					       ,c1dci_date
603  					       ,dci_time
604  					       ,S_dci_name
605  					       ,S_dcm_name
606  					       ,S_dcm_subset
607  					       ,dcm_quesgrp
608  					       ,dcm_ques
609  					       ,no_repeat
610  					       ,c1valuetext
611  					       ,study
612  					       ,tableid);
613  
614    insert_lab_data.delete_repeats;
615  
616    CLOSE c1;
617  
618  END; -- load_lab_results
619  /

Procedure created.

SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Package load_lab_results_upd
Package load_lab_results_upd
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @load_lab_results_upd.plsql
SQL> CREATE OR REPLACE PROCEDURE load_lab_results_upd (v_Type in Varchar2) AS
  2    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  3    /*     Author: Patrick COnrad							    */
  4    /*	Date: 08/09/2005							    */
  5    /*Description: Lab Load Results for UPDATE Lab Test Records			    */
  6    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  7    /*  Modification History 							    */
  8    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
  9    /* PRC 06/06/2006: Altered code so that SubEvent_Number is retrieved and used as part*/
 10    /*		  of the BDL file.  By doing this, BDL does not have to look up the */
 11    /*		  subevent number, and	is able to bypass the DCI Date/Time matching*/
 12    /*		  DCM Date/Time error.	This also allows for the removal of the     */
 13    /*		  same error in the Lab Loader. 				    */
 14    /* ALSO: Made modifications to the Log Messages created during the subevent number   */
 15    /*	retrieval for cosmetic as well as destriptive reasons.			    */
 16    /* NOTE: This code could use a bit of clean-up for readability.			    */
 17    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 18  
 19    tableid	       varchar2(20);
 20    investigator    varchar2(10);
 21    site	       varchar2(10);
 22  
 23    S_dci_name      varchar2(50);
 24    S_dcm_id        number(10);
 25    S_dcm_name      varchar2(50);
 26    S_dcm_subset    varchar2(50);
 27    dcm_quesgrp     varchar2(50);
 28    dcm_ques        varchar2(50);
 29    planned_event   varchar2(40);
 30    c1valuetext     varchar2(200);
 31  
 32    subevent        number(2);
 33    document_no     varchar2(20);
 34    xrepeat_sn      number(4);
 35    qname	       varchar2(200);
 36    LoadFlag        Boolean := TRUE;  -- prc 08/23/06: Need flag to designate unloadable record
 37  
 38    CURSOR c1 is
 39  	 SELECT record_id
 40  	       ,patient_id
 41  	       ,patient_name
 42  	       ,sample_datetime
 43  	       ,TO_CHAR(to_date(substr(lpad(sample_datetime, 10, 0), 1, 6)
 44  			       ,'MMDDRR') -- PRC 07/25/03
 45  		       ,'YYYYMMDD') vdate
 46  	       ,substr(lpad(sample_datetime, 10, 0), 7, 4) || '00' vtime
 47  	       ,laboratory
 48  	       ,labtest_name
 49  	       ,result
 50  	       ,unit
 51  	       ,normal_value
 52  	       ,panel_name
 53  	       ,lab_grade
 54  	       ,oc_lab_panel
 55  	       ,oc_lab_subset
 56  	       ,oc_lab_question
 57  	       ,oc_lab_event
 58  	       ,decode(comments
 59  		      ,null
 60  		      ,'N/A'
 61  		      ,SUBSTR(TRANSLATE(comments, ',', ' '), 1, 20)) comm
 62  	       ,oc_patient_pos
 63  	       ,test_component_id
 64  	       ,oc_study
 65  	       ,s.clinical_study_id study_id
 66  	   FROM nci_labs n, clinical_studies s
 67  	  WHERE OC_LAB_PANEL is not null AND LOAD_FLAG = v_type AND
 68  		n.oc_study = s.study
 69  	  ORDER BY n.oc_study
 70  		  ,oc_lab_panel
 71  		  ,oc_lab_subset
 72  		  ,oc_patient_pos
 73  		  ,vdate
 74  		  ,vtime
 75  		  ,oc_lab_question
 76  		  ,unit;
 77  
 78    c1_record c1%ROWTYPE;
 79  
 80    Procedure Insert_Record is
 81  
 82    Begin
 83  	  -- Set Constants
 84  	   dcm_quesgrp := 'LAB';
 85  	   investigator:= Null;
 86  	   site        := Null;
 87  	   document_no := Null;
 88  	   --subevent	 := Null;
 89  	   tableid     := c1_record.oc_lab_panel;
 90  
 91  	   -- Set Response Specific Value
 92  	   dcm_ques    := 'LPARM';
 93  	   c1valuetext := c1_record.oc_lab_question;
 94  
 95  	   -- Insert Response
 96  	   insert_lab_data.insert_record(investigator
 97  					 ,site
 98  					 ,c1_record.oc_patient_pos
 99  					 ,document_no
100  					 ,planned_event
101  					 ,subevent
102  					 ,c1_record.vdate
103  					 ,c1_record.vtime
104  					 ,S_dci_name
105  					 ,S_dcm_name
106  					 ,S_dcm_subset
107  					 ,dcm_quesgrp
108  					 ,dcm_ques
109  					 ,xrepeat_sn
110  					 ,c1valuetext
111  					 ,c1_record.oc_study
112  					 ,tableid);
113  
114  	  dcm_ques    := 'LVALUE';
115  	   c1valuetext := c1_record.result;
116  
117  	   insert_lab_data.insert_record(investigator
118  					 ,site
119  					 ,c1_record.oc_patient_pos
120  					 ,document_no
121  					 ,planned_event
122  					,subevent
123  					,c1_record.vdate
124  					,c1_record.vtime
125  					,S_dci_name
126  					,S_dcm_name
127  					,S_dcm_subset
128  					,dcm_quesgrp
129  					,dcm_ques
130  					,xrepeat_sn
131  					,c1valuetext
132  					,c1_record.oc_study
133  					,tableid);
134  
135  	   dcm_ques    := 'LAB_UOM';
136  	   c1valuetext := c1_record.unit;
137  
138  	   insert_lab_data.insert_record(investigator
139  					 ,site
140  					 ,c1_record.oc_patient_pos
141  					 ,document_no
142  					 ,planned_event
143  					 ,subevent
144  					 ,c1_record.vdate
145  					 ,c1_record.vtime
146  					 ,S_dci_name
147  					 ,S_dcm_name
148  					 ,S_dcm_subset
149  					 ,dcm_quesgrp
150  					 ,dcm_ques
151  					 ,xrepeat_sn
152  					 ,c1valuetext
153  					 ,c1_record.oc_study
154  					 ,tableid);
155  
156  	   dcm_ques    := 'LAB_DATA_CODE';
157  	   c1valuetext := c1_record.test_component_id;
158  
159  	   insert_lab_data.insert_record(investigator
160  					 ,site
161  					 ,c1_record.oc_patient_pos
162  					 ,document_no
163  					,planned_event
164  					 ,subevent
165  					 ,c1_record.vdate
166  					 ,c1_record.vtime
167  					 ,S_dci_name
168  					 ,S_dcm_name
169  					 ,S_dcm_subset
170  					 ,dcm_quesgrp
171  					 ,dcm_ques
172  					 ,xrepeat_sn
173  					 ,c1valuetext
174  					 ,c1_record.oc_study
175  					 ,tableid);
176  
177  	   dcm_ques    := 'LAB_DATA_SOURCE';
178  	   c1valuetext := c1_record.laboratory;
179  
180  	   insert_lab_data.insert_record(investigator
181  					  ,site
182  					  ,c1_record.oc_patient_pos
183  					  ,document_no
184  					  ,planned_event
185  					 ,subevent
186  					 ,c1_record.vdate
187  					 ,c1_record.vtime
188  					 ,S_dci_name
189  					 ,S_dcm_name
190  					 ,S_dcm_subset
191  					 ,dcm_quesgrp
192  					 ,dcm_ques
193  					 ,xrepeat_sn
194  					 ,c1valuetext
195  					 ,c1_record.oc_study
196  					 ,tableid);
197  
198  	   dcm_ques    := 'NORMAL_VALUES';
199  	    c1valuetext := c1_record.normal_value;
200  
201  	    insert_lab_data.insert_record(investigator
202  					  ,site
203  					  ,c1_record.oc_patient_pos
204  					  ,document_no
205  					 ,planned_event
206  					 ,subevent
207  					 ,c1_record.vdate
208  					 ,c1_record.vtime
209  					 ,S_dci_name
210  					 ,S_dcm_name
211  					 ,S_dcm_subset
212  					 ,dcm_quesgrp
213  					 ,dcm_ques
214  					 ,xrepeat_sn
215  					 ,c1valuetext
216  					 ,c1_record.oc_study
217  					 ,tableid);
218  
219  	   dcm_ques    := 'LAB_PANEL';
220  	   c1valuetext := c1_record.panel_name;
221  
222  	   insert_lab_data.insert_record(investigator
223  					 ,site
224  					 ,c1_record.oc_patient_pos
225  					 ,document_no
226  					 ,planned_event
227  					 ,subevent
228  					 ,c1_record.vdate
229  					 ,c1_record.vtime
230  					 ,S_dci_name
231  					 ,S_dcm_name
232  					 ,S_dcm_subset
233  					 ,dcm_quesgrp
234  					 ,dcm_ques
235  					 ,xrepeat_sn
236  					 ,c1valuetext
237  					 ,c1_record.oc_study
238  					 ,tableid);
239    ENd; -- insert record
240  
241  BEGIN
242  
243  	If Log_Util.Log$LogName is null Then
244  	   Log_Util.LogSetName('FINDREPEAT_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
245  	Else
246  	   Log_Util.LogMessage('Lab Load Results Upd ("'||v_type||'") Starting');
247  	End If;
248  
249  	OPEN c1;
250  	LOOP
251  	   FETCH c1 INTO c1_record;
252  
253  	   EXIT WHEN c1%NOTFOUND;
254  
255  	   -- Get the DCI/DCM/Subset for this lab_panel
256  	   Log_Util.LogMessage('LLRU - Looking up - '||
257  			       c1_Record.OC_STUDY||' / '||c1_Record.oc_patient_pos||' / '||
258  				c1_Record.OC_LAB_PANEL||' / '||c1_Record.OC_LAB_SUBSET||' / '||
259  				c1_Record.oc_lab_question||' / '||c1_Record.vdate||' / '||
260  				c1_Record.vtime||'.');
261  
262  	   LoadFlag := TRUE;
263  
264  	   Log_Util.LogMessage('LLRU -	     Find DCI, DCM, DCM Subset');
265  
266  	   SELECT distinct d.name, d.dcm_id, d.subset_name, dc.name
267  	     into S_dcm_name, S_dcm_id, S_dcm_subset, S_dci_name
268  	     FROM DCMS d,
269  		  DCI_MODULES dm,
270  		  DCIS dc,
271  		  dci_book_pages bp,
272  		  dci_books b
273  	    WHERE d.name		 = c1_record.oc_lab_panel
274  	      and d.subset_name 	 = c1_record.oc_lab_subset
275  	      and d.clinical_study_id	 = c1_record.study_id
276  	      and d.dcm_subset_sn	 = dm.dcm_subset_sn
277  	      and d.dcm_id		 = dm.dcm_id
278  	      and dm.dci_id		 = dc.dci_id
279  	      and dc.dci_id		 = bp.dci_id
280  	      and b.dci_book_id 	 = bp.dci_book_id
281  	      and dc.dci_status_code	 = 'A'
282  	      and b.DCI_BOOK_STATUS_CODE = 'A';
283  
284  	   Log_Util.LogMessage('LLRU -	     Found. DCI = ['||S_Dci_Name||']; '||
285  						   'DCM = ['||S_Dcm_Name||']; '||
286  						   'DCM_Subset = ['||S_Dcm_Subset||'] ');
287  
288  	   Log_Util.LogMessage('LLRU -	     Find Repeat_sn for question on Panel.');
289  	   Begin
290  	      SELECT distinct rp.repeat_sn
291  		INTO xrepeat_sn
292  		FROM dcms	   d,
293  		     received_dcms rd,
294  		     dcm_questions dp,
295  		     responses	   rp
296  	       WHERE d.DOMAIN		 = c1_Record.OC_STUDY
297  		 AND d.NAME		 = c1_Record.OC_LAB_PANEL
298  		 AND d.SUBSET_NAME	 = c1_Record.OC_LAB_SUBSET
299  		 and d.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
300  		 AND d.dcm_id		 = rd.dcm_id
301  		 AND d.DCM_SUBSET_SN	 = rd.DCM_SUBSET_SN
302  		 AND d.dcm_layout_sn	 = rd.DCM_LAYOUT_SN
303  		 and rd.patient 	 = c1_Record.oc_patient_pos
304  		 AND rd.DCM_DATE	 = C1_Record.vdate
305  		 AND rd.DCM_TIME	 = c1_Record.Vtime
306  		 AND dp.DCM_ID		 = d.dcm_id
307  		 AND dp.DCM_QUE_DCM_SUBSET_SN = d.DCM_SUBSET_SN
308  		 AND dp.DCM_QUE_DCM_LAYOUT_SN = d.DCM_LAYOUT_SN
309  		 AND dp.QUESTION_NAME	      = 'LPARM'
310  		 and rp.CLINICAL_STUDY_ID     = rd.CLINICAL_STUDY_ID
311  		 AND rp.RECEIVED_DCM_ID       = rd.RECEIVED_DCM_ID
312  		 AND rp.DCM_QUESTION_ID       = dp.DCM_QUESTION_ID
313  		 AND rp.VALUE_TEXT	      = c1_Record.OC_LAB_QUESTION
314  		 and rp.END_TS		      = to_date(3000000, 'J')
315  		 and rd.END_TS		      = to_date(3000000, 'J');
316  
317  	      Log_Util.LogMessage('LLRU -	Found.	Repeat_Sn = ['||to_char(xrepeat_sn)||']');
318  
319  	   Exception
320  	      When No_Data_Found Then
321  	      Begin
322  		 Log_Util.LogMessage('LLRU -	   Not Found, Checking Study Design.');
323  
324  		 SELECT distinct rd.repeat_sn
325  		    INTO xrepeat_sn
326  		    FROM dcm_ques_repeat_defaults rd, dcm_questions dq, dcms d
327  		   WHERE d.dcm_id = S_dcm_id
328  		     and d.subset_name = S_dcm_subset
329  		     and d.dcm_id = dq.dcm_id
330  		     and rd.dcm_subset_sn = dq.dcm_que_dcm_subset_sn  -- Added to ensure proper subset to repeat default
331  		     and d.dcm_subset_sn = dq.dcm_que_dcm_subset_sn
332  		     and dq.dcm_question_id = rd.dcm_question_id
333  		     and dq.QUESTION_NAME = 'LPARM'
334  		     and rd.default_value_text = c1_record.oc_lab_question;
335  
336  		 Log_Util.LogMessage('LLRU -	   Found in Study Design. Repeat_Sn = ['||to_char(xrepeat_sn)||']');
337  
338  		 -- Found it in Design, but does it match current Repeat SN Question --
339  
340  		 Log_Util.LogMessage('LLRU -	   Checking QUESTION Value.');
341  
342  		 Begin
343  		    SELECT rp.VALUE_TEXT
344  		      INTO qname
345  		      FROM dcms 	 d,
346  			   received_dcms rd,
347  			   dcm_questions dp,
348  			   responses	 rp
349  		     WHERE d.DOMAIN	       = c1_Record.OC_STUDY
350  		       AND d.NAME	       = c1_Record.OC_LAB_PANEL
351  		       AND d.SUBSET_NAME       = c1_Record.OC_LAB_SUBSET
352  		       and d.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
353  		       AND d.dcm_id	       = rd.dcm_id
354  		       AND d.DCM_SUBSET_SN     = rd.DCM_SUBSET_SN
355  		       AND d.dcm_layout_sn     = rd.DCM_LAYOUT_SN
356  		       and rd.patient	       = c1_Record.oc_patient_pos
357  		       AND rd.DCM_DATE	       = C1_Record.vdate
358  		       AND rd.DCM_TIME	       = c1_Record.Vtime
359  		       AND dp.DCM_ID	       = d.dcm_id
360  		       AND dp.DCM_QUE_DCM_SUBSET_SN = d.DCM_SUBSET_SN
361  		       AND dp.DCM_QUE_DCM_LAYOUT_SN = d.DCM_LAYOUT_SN
362  		       AND dp.QUESTION_NAME	    = 'LPARM'
363  		       and rp.CLINICAL_STUDY_ID     = rd.CLINICAL_STUDY_ID
364  		       AND rp.RECEIVED_DCM_ID	    = rd.RECEIVED_DCM_ID
365  		       AND rp.DCM_QUESTION_ID	    = dp.DCM_QUESTION_ID
366  		       AND rp.repeat_sn 	    = xrepeat_sn
367  		       and rp.END_TS		    = to_date(3000000, 'J')
368  		       and rd.END_TS		    = to_date(3000000, 'J');
369  
370  		    -- If the Question to load does not match the existing question, through and error.
371  		    Update nci_labs
372  		       set load_flag = 'E',
373  			   Error_reason = 'Error - Wrong QUESTION (Repeat_SN '||to_char(xrepeat_sn)||' has Quesiton value of "'||
374  					  qname||'" when expecting "'||C1_Record.OC_LAB_QUESTION||'".'
375  		     where record_id = c1_Record.record_id
376  		       and qname <> C1_Record.OC_LAB_QUESTION;
377  
378  		    If qname <> C1_Record.OC_LAB_QUESTION then
379  		       LoadFlag := False;
380  		       Log_Util.LogMessage('LLRU -	 Questions to load does not matcdh Question Loaded.');
381  		    End If;
382  
383  
384  		 Exception
385  		    When No_Data_Found Then
386  		       Null;  -- Good, We can put the Update Record at this position
387  		 End;
388  
389  	      Exception
390  		 When No_Data_Found Then
391  		 Begin
392  
393  		    Log_Util.LogMessage('LLRU -       Repeat_SN not found. Must be a non-repeat group.');
394  
395  		    SELECT max(rp.repeat_sn)
396  		      INTO xrepeat_sn
397  		      FROM dcms 	 d,
398  			   received_dcms rd,
399  			   dcm_questions dp,
400  			   responses	 rp
401  		     WHERE d.DOMAIN = c1_Record.OC_STUDY
402  		       AND d.NAME   = c1_Record.OC_LAB_PANEL
403  		       AND d.SUBSET_NAME = c1_Record.OC_LAB_SUBSET
404  		       and d.CLINICAL_STUDY_ID =rd.CLINICAL_STUDY_ID
405  		       AND d.dcm_id=rd.dcm_id
406  		       AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
407  		       AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
408  		       and rd.patient = c1_Record.oc_patient_pos
409  		       AND rd.DCM_DATE= TO_CHAR(TO_DATE(c1_Record.SAMPLE_DATETIME,'mmddrrhh24mi'),'yyyymmdd')
410  		       AND rd.DCM_TIME= SUBSTR(c1_Record.SAMPLE_DATETIME,7)||'00'
411  		       AND dp.DCM_ID=d.dcm_id
412  		       AND dp.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
413  		       AND dp.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
414  		       AND dp.QUESTION_NAME='LPARM'
415  		       and rp.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
416  		       AND rp.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
417  		       AND rp.DCM_QUESTION_ID=dp.DCM_QUESTION_ID
418  		       AND rp.VALUE_TEXT = c1_Record.OC_LAB_QUESTION
419  		       and Rp.END_TS = to_date(3000000, 'J')
420  		       and rd.END_TS = to_date(3000000, 'J');
421  
422  		    If xrepeat_sn is null then
423  
424  	       SELECT max(rp.repeat_sn)+1
425  		 INTO xrepeat_sn
426  		 FROM dcms	    d,
427  		 received_dcms rd,
428  		 dcm_questions dp,
429  		 responses     rp
430  		WHERE d.DOMAIN = c1_Record.OC_STUDY
431  		  AND d.NAME   = c1_Record.OC_LAB_PANEL
432  		  AND d.SUBSET_NAME = c1_Record.OC_LAB_SUBSET
433  		  and d.CLINICAL_STUDY_ID =rd.CLINICAL_STUDY_ID
434  		  AND d.dcm_id=rd.dcm_id
435  		  AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
436  		  AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
437  		  and rd.patient = c1_Record.oc_patient_pos
438  		  AND rd.DCM_DATE= TO_CHAR(TO_DATE(c1_Record.SAMPLE_DATETIME,'mmddrrhh24mi'),'yyyymmdd')
439  		  AND rd.DCM_TIME= SUBSTR(c1_Record.SAMPLE_DATETIME,7)||'00'
440  		  AND dp.DCM_ID=d.dcm_id
441  		  AND dp.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
442  		  AND dp.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
443  		  AND dp.QUESTION_NAME='LPARM'
444  		  and rp.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
445  		  AND rp.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
446  		  AND rp.DCM_QUESTION_ID=dp.DCM_QUESTION_ID
447  		  --AND rp.VALUE_TEXT = c1_Record.OC_LAB_QUESTION
448  		  and Rp.END_TS = to_date(3000000, 'J')
449  		  and rd.END_TS = to_date(3000000, 'J');
450  
451  		       Log_Util.LogMessage('LLRU -	 Repeat_SN found  = ['||to_char(xrepeat_sn)||']');
452  		    End If;
453  
454  		 Exception
455  		    When Others Then
456  		       Update nci_labs
457  			  set load_flag = 'E',
458  			      Error_reason = 'Max Repeat SN could not be found!'
459  			where record_id = c1_Record.record_id;
460  
461  		    LoadFlag := False;
462  
463  		    Log_Util.LogMessage('LLRU -       Max Repeat_SN not Found for Non-Repeat Group.');
464  		    Log_Util.LogMessage('LLRU -       Error Encountered: ' || SQLCODE);
465  		    Log_Util.LogMessage('LLRU -       Error Message: ' || SQLERRM);
466  		 End;
467  
468  		 When Others Then
469  		    Update nci_labs
470  		       set load_flag = 'E',
471  			   Error_reason = 'Unexpected Error during Study Design REPEAT_SN find.'
472  		     where record_id = c1_Record.record_id;
473  
474  		    LoadFlag := False;
475  
476  		    Log_Util.LogMessage('LLRU -       Repeat_SN not Found in  Study Design.');
477  		    Log_Util.LogMessage('LLRU -       Error Encountered: ' || SQLCODE);
478  		    Log_Util.LogMessage('LLRU -       Error Message: ' || SQLERRM);
479  
480  	      End;
481  	      When Others Then
482  		 Update nci_labs
483  		    set load_flag = 'E',
484  			Error_reason = 'Unexpected Error during REPEAT_SN find.'
485  		  where record_id = c1_Record.record_id;
486  
487  		 LoadFlag := False;
488  
489  		 Log_Util.LogMessage('LLRU -	   Repeat_SN not Found in Loaded Data.');
490  		 Log_Util.LogMessage('LLRU -	   Error Encountered: ' || SQLCODE);
491  		 Log_Util.LogMessage('LLRU -	   Error Message: ' || SQLERRM);
492  
493  
494  	   End;
495  
496  	   If LoadFlag Then
497  	      Log_Util.LogMessage('LLRU -	Find Event,SubEvent');
498  	      Begin
499  		 -- prc 06/06/06: added subevent_number retrieval
500  		 SELECT distinct rd.subevent_number, CLIN_PLAN_EVE_NAME
501  		   INTO subevent, planned_event
502  		   FROM dcms	      d,
503  			received_dcms rd,
504  			dcm_questions dp,
505  			responses     rp
506  		  WHERE d.DOMAIN	    = c1_Record.OC_STUDY
507  		    AND d.NAME		    = c1_Record.OC_LAB_PANEL
508  		    AND d.SUBSET_NAME	    = c1_Record.OC_LAB_SUBSET
509  		    and d.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
510  		    AND d.dcm_id	    = rd.dcm_id
511  		    AND d.DCM_SUBSET_SN     = rd.DCM_SUBSET_SN
512  		    AND d.dcm_layout_sn     = rd.DCM_LAYOUT_SN
513  		    and rd.patient	    = c1_Record.oc_patient_pos
514  		    AND rd.DCM_DATE	    = C1_Record.vdate
515  		    AND rd.DCM_TIME	    = c1_Record.Vtime
516  		    AND dp.DCM_ID	    = d.dcm_id
517  		    AND dp.DCM_QUE_DCM_SUBSET_SN = d.DCM_SUBSET_SN
518  		    AND dp.DCM_QUE_DCM_LAYOUT_SN = d.DCM_LAYOUT_SN
519  		    AND dp.QUESTION_NAME	 = 'LPARM'
520  		    and rp.CLINICAL_STUDY_ID	 = rd.CLINICAL_STUDY_ID
521  		    AND rp.RECEIVED_DCM_ID	 = rd.RECEIVED_DCM_ID
522  		    AND rp.DCM_QUESTION_ID	 = dp.DCM_QUESTION_ID
523  		    --AND rp.VALUE_TEXT 	   = c1_Record.OC_LAB_QUESTION
524  		    and rp.END_TS		 = to_date(3000000, 'J')
525  		    and rd.END_TS		 = to_date(3000000, 'J');
526  
527  		 -- prc 06/06/06 :changed message.
528  		 Log_Util.LogMessage('LLRU -	   Found Event = ['||planned_event||']; '||' SubEvent = ['||subevent||']');
529  
530  		 -- Update the Event in NCI_LABS
531  		 Update nci_labs
532  		    set oc_lab_event = planned_event
533  		  where record_id = c1_Record.record_id;
534  
535  		 Insert_record;
536  
537  	      Exception
538  		 When No_Data_Found Then
539  
540  		    Log_Util.LogMessage('LLRU -       Event and SubEvent not found. Check for Soft-Delete.');
541  
542  		    Begin
543  		       SELECT distinct rd.subevent_number, CLIN_PLAN_EVE_NAME
544  			 INTO subevent, planned_event
545  			 FROM dcms	    d,
546  			      received_dcms rd
547  			WHERE d.DOMAIN		  = c1_Record.OC_STUDY
548  			  AND d.NAME		  = c1_Record.OC_LAB_PANEL
549  			  AND d.SUBSET_NAME	  = c1_Record.OC_LAB_SUBSET
550  			  and d.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
551  			  AND d.dcm_id		  = rd.dcm_id
552  			  AND d.DCM_SUBSET_SN	  = rd.DCM_SUBSET_SN
553  			  AND d.dcm_layout_sn	  = rd.DCM_LAYOUT_SN
554  			  and rd.patient	  = c1_Record.oc_patient_pos
555  			  AND rd.DCM_DATE	  = C1_Record.vdate
556  			  AND rd.DCM_TIME	  = c1_Record.Vtime
557  			  and rd.received_dci_id = (
558  						 SELECT max(rd2.received_dci_id)
559  						   FROM dcms	      d2,
560  							received_dcms rd2
561  						  WHERE d2.DOMAIN = d.domain
562  						    AND d2.NAME   = d.NAME
563  						    AND d2.SUBSET_NAME = d.SUBSET_NAME
564  						    and d2.CLINICAL_STUDY_ID =rd2.CLINICAL_STUDY_ID
565  						    AND d2.dcm_id = rd2.dcm_id
566  						    AND d2.DCM_SUBSET_SN = rd2.DCM_SUBSET_SN
567  						    AND d2.dcm_layout_sn = rd2.DCM_LAYOUT_SN
568  						    and rd2.patient = rd.patient
569  						    and rd2.clin_plan_eve_name = rd.clin_plan_eve_name
570  						    and rd2.subevent_number    = rd.subevent_number);
571  
572  
573  		       Log_Util.LogMessage('LLRU -	 Soft Delete Found, Event = ['||planned_event||']; '||
574  					   ' SubEvent = ['||subevent||']');
575  
576  		       -- Update the Event in NCI_LABS
577  		       Update nci_labs
578  			  set oc_lab_event = planned_event
579  			where record_id = c1_Record.record_id;
580  
581  		       Insert_record;
582  
583  
584  		    Exception
585  		       When No_Data_Found Then
586  
587  			  Update nci_labs
588  			     set load_flag = 'E',
589  				 Error_reason = 'Update Record missing its Event and Subevent'
590  			   where record_id = c1_Record.record_id;
591  
592  			  Log_Util.LogMessage('LLRU -	    Event and SubEvent not Found for Update Record.');
593  		       When Others Then
594  			  Update nci_labs
595  			     set load_flag = 'E',
596  				 Error_reason = 'Unexpected Error during Event / Subevent find.'
597  			   where record_id = c1_Record.record_id;
598  
599  			  Log_Util.LogMessage('LLRU -	    Error Encountered: ' || SQLCODE);
600  			  Log_Util.LogMessage('LLRU -	    Error Message: ' || SQLERRM);
601  
602  		    End;
603  
604  		 When Others Then
605  		    Update nci_labs
606  		       set load_flag = 'E',
607  			   Error_reason = 'Unexpected Error during Event / Subevent find.'
608  		     where record_id = c1_Record.record_id;
609  
610  		    Log_Util.LogMessage('LLRU -       Error Encountered: ' || SQLCODE);
611  		    Log_Util.LogMessage('LLRU -       Error Message: ' || SQLERRM);
612  
613  	      End;
614  	   Else
615  
616  	      Log_Util.LogMessage('LLRU -	Record Not Loaded due to error.' || SQLERRM);
617  
618  	   End If; --[LoadFlag = TRUE]
619    END LOOP;
620  
621    CLOSE c1;
622  
623  
624  
625  END; -- load_lab_results
626  /

Procedure created.

SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Package cdw_data_transfer_pkg_V3
Package cdw_data_transfer_pkg_V3
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @cdw_data_transfer_pkg_v4_as_V3.plsql
SQL> CREATE OR REPLACE PACKAGE cdw_data_transfer_v3 AS
  2  
  3    -- Global Package Variables.
  4  
  5    Labs_Count      Number;
  6  
  7    Function Find_Lab_Question(i_Test_ID in Varchar2, i_Lab_Code in Varchar2) Return Varchar2;
  8    Function Cnt_Lab_Test_Maps(i_Test_ID in Varchar2, i_Lab_Code in Varchar2) Return Number;
  9  
 10    Procedure MessageLogPurge(LogName in Varchar2, LogDate in Date);
 11  
 12    Procedure Check_SubEvent_NUmbers;
 13  
 14    Procedure Get_Process_Load_Labs(Process_Type in Varchar2 default 'FULL');
 15    Function  pull_latest_labs Return Number;
 16    Function pull_missed_labs Return Number;
 17    Function pull_Historical_labs_4(PatID in Varchar2) Return Number;
 18  
 19    PROCEDURE identify_duplicate_records; -- Marked Duplicate Records
 20  
 21    PROCEDURE Flag_UPD_Lab_Results(P_Type in Varchar2);
 22    Procedure LLI_Processing;
 23    PROCEDURE prepare_cdw_labs;
 24    Procedure Identify_Additional_Labs;
 25    PROCEDURE process_lab_data;
 26    Procedure Process_Batch_Load;
 27  
 28    Procedure Reload_Error_Labs(P_Method in Varchar2 Default 'MARK',
 29  				   E_Study  in Varchar2 Default '%',
 30  				   E_Reason in Varchar2 Default '%',
 31  		    E_Patientid in Varchar2 Default '%');
 32  
 33    Procedure Process_Error_Labs(P_Method in Varchar2 Default 'MARK');
 34  
 35  
 36    Procedure Recheck_Unmapped_Labs(P_Method in Varchar2 Default 'HELP'); -- prc 01/21/2004
 37    Procedure Update_After_Batch_Load; -- Renamed from Failure to Load
 38  
 39    Procedure Pre_Load_Patients ; -- Loads Patient IDS into a table for FASTER processing
 40    Procedure Populate_Study_Patient; -- Loads all PatientIDs/NCI Instit. Codes to a table. (Union View Replacment)
 41    Procedure Get_Response(v_Study in Varchar2,
 42  			      v_patient in Varchar2,
 43  			      v_Dcm in Varchar2,
 44  			      v_quest in Varchar2,
 45  			      v_result out varchar2,
 46  			      v_found  out boolean); -- Queries RESPONSES table with these parameters.
 47    Function Text2Date(v_text in varchar2) return date;
 48  
 49  END cdw_data_transfer_v3;
 50  /

Package created.

SQL> 
SQL> sho  error
No errors.
SQL> 
SQL> 
SQL> CREATE OR REPLACE PACKAGE BODY cdw_data_transfer_v3 AS
  2    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  3    /*     Author: Patrick Conrad- Ekagra Software Technologies			    */
  4    /*	Date: 10/21/03								    */
  5    /*Description: Copied from original CDW_DATA_TRANSFER				    */
  6    /*	      (Original Description Missing)					    */
  7    /*	      This process will get lab data from the external MIS (Sybase) system  */
  8    /*	      and process the data prior to loading the lab data into Oracle	    */
  9    /*	      Clinical.  This process also prepares and execute the Batch Lab Load  */
 10    /*	      process provided by Oracle Clinical.				    */
 11    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 12    /*  Modification History 							    */
 13    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 14    /*  PRC 01/21/2004 : Added Procedure Recheck_Unmapped_Labs.			    */
 15    /*  PRC 03/03/2004: 1) Changed primary select.  Sybase Link no longer exists.  Data  */
 16    /*		   is uploaded to NCI_UPLOAD_SYBASE_LAB_RESULTS, and the query now  */
 17    /*		   runs against it.						    */
 18    /*		   2) Removed old "commented out" code related to Message Logs	    */
 19    /*  PRC 08/04/2004: 1) Added PULL_HISTORICAL_LABS_4 function to pull lab data from the*/
 20    /*		   Historical Lab Results table, and channel it into CDW_LAB_RESULTS*/
 21    /*  PRC 06/16/2005: LLI Enhancements:						    */
 22    /*		   1) Removed all references to 'R' load type when checking for     */
 23    /*		      records to process.  'R' must have been hold over to legacy   */
 24    /*		      version as setting the LOAD_FLAG to 'R' could not be found in */
 25    /*		      any of the subsequent processes.				    */
 26    /*		   2) Moved procedure "identify_duplicate_records" from Package     */
 27    /*		      "insert_lab_data" to here.  More logically correct.	    */
 28    /*										    */
 29    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * - - - - */
 30  
 31    Function Text2Date(v_text in varchar2) return date is
 32  	  v_hold_date date := Null;
 33    Begin
 34  	  v_hold_date := to_date(SUBSTR(v_text, 1, 8), 'YYYYMMDD');
 35  
 36  	  return v_hold_date;
 37    Exception
 38  	  when others then
 39  	     Log_Util.LogMessage('TEXT2DATE ERROR: Unexpected ERROR Occurred in TEXT2DATE('||v_text||').');
 40  	     Log_Util.LogMessage('TEXT2DATE ERROR: Error Encountered: ' || SQLCODE);
 41  	     Log_Util.LogMessage('TEXT2DATE ERROR: Error Message: ' || SQLERRM);
 42  	     return NULL;
 43    End;
 44  
 45    Procedure Get_Response(v_Study in Varchar2, v_patient in Varchar2, v_Dcm in Varchar2,
 46  			      v_quest in Varchar2, v_result out varchar2, v_found  out Boolean) is
 47    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 48    /*     Author: Patrick Conrad - Ekagra Software Technologies			    */
 49    /*	Date: 02/09/2006							    */
 50    /*Description: This procedure is used to query the RESPONSES table for a single	    */
 51    /*	      result using Study,Patient, DCM Name and Question.  Output is	    */
 52    /*	      VALUE_TEXT from responses and Found (Boolean).			    */
 53    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
 54    /*  Modification History 							    */
 55    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 56  
 57    Begin
 58  	  SELECT R1.VALUE_TEXT
 59  	    into v_result
 60  	    FROM DCMS D, DCM_QUESTIONS Q, RECEIVED_DCMS RD, RESPONSES R1
 61  	   WHERE D.NAME = v_DCM
 62  	     AND D.DCM_STATUS_CODE = 'A'
 63  	     AND RD.CLINICAL_STUDY_ID = d.CLINICAL_STUDY_ID
 64  	     AND D.DOMAIN = v_Study
 65  	     AND D.DCM_ID = RD.DCM_ID
 66  	     AND d.dcm_subset_sn = rd.dcm_subset_sn
 67  	     AND d.dcm_layout_sn = rd.dcm_layout_sn
 68  	     AND D.DCM_ID = Q.DCM_ID
 69  	     AND q.dcm_que_dcm_subset_sn = d.dcm_subset_sn
 70  	     AND q.dcm_que_dcm_layout_sn = d.dcm_layout_sn
 71  	     AND R1.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
 72  	     AND R1.RECEIVED_DCM_ID = RD.RECEIVED_DCM_ID
 73  	     AND R1.DCM_QUESTION_ID = Q.DCM_QUESTION_ID
 74  	     AND R1.END_TS = RD.END_TS
 75  	     AND R1.END_TS = to_date(3000000, 'J')
 76  	     AND Q.QUESTION_NAME = v_quest
 77  	     AND rtrim(r1.value_text) is not null
 78  	     AND RD.PATIENT = v_patient;
 79  
 80  	  v_found := TRUE;
 81  
 82  	EXCEPTION
 83  	  WHEN NO_DATA_FOUND then
 84  	     v_found := FALSE;
 85  	  when others then
 86  	     Log_Util.LogMessage('GR - WARNING: Unexpected ERROR Occurred in "Get_Response".');
 87  	     Log_Util.LogMessage('     RPED - Error Encountered: ' || SQLCODE);
 88  	     Log_Util.LogMessage('     RPED - Error Message: ' || SQLERRM);
 89  	End Get_Response;
 90  
 91    Function Find_Lab_Question(i_Test_ID in Varchar2, i_Lab_Code in Varchar2) Return Varchar2
 92    is
 93    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 94    /*     Author: Patrick Conrad - Ekagra Software Technologies			    */
 95    /*	Date: 07/21/2004							    */
 96    /*Description: This procedure is used to identify the OC Lab Question Name, based    */
 97    /*	      upon Test id and Lab Code.  This function was created to handle	    */
 98    /*	      processing of new Laboratories.					    */
 99    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
100    /*  Modification History 							    */
101    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
102    /*  PRC 08/26/2004 : Added NETTRIALS Lab Check.					    */
103    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
104  
105  	  v_oc_Lab_Question  nci_lab_mapping.oc_lab_question%type;
106  	  err_num	     number;
107  	  err_msg	     varchar2(100);
108  
109    Begin
110  	  If i_Lab_COde = 'CDW' Then
111  	     Begin
112  		SELECT DISTINCT M.OC_LAB_QUESTION
113  		     into v_oc_lab_question
114  		     FROM nci_lab_mapping m
115  		    WHERE M.test_component_id = i_test_ID
116  		      AND M.laboratory	      = i_lab_code
117  		      and m.oc_lab_question is not null;
118  
119  		Exception
120  		   WHen No_Data_Found then
121  		      Begin
122  			 select distinct OC_LAB_QUESTION
123  			   into v_oc_lab_question
124  			   from NCI_CDW_LAB_MAP_CROSSREF
125  			  WHERE test_ID   =  i_test_ID
126  			      AND laboratory = i_lab_code
127  			      and oc_lab_question is not null;
128  
129  			Exception
130  			   When No_Data_Found Then
131  			      v_oc_lab_question := NULL;
132  			   When Others then
133  			      v_oc_lab_question := NULL;
134  			      Err_num := SQLCODE;
135  			      err_msg := substr(sqlerrm,1,100);
136  			      If Err_Num = -1422 Then
137  				 Log_Util.LogMessage('FNDLQST2 - ERROR: Test_ID = "'||i_test_id||'" / Laboratory= "'||i_lab_code||'" has duplicate OC_QUESTION Mapping.');
138  			  Else
139  			     Log_Util.LogMessage('FNDLQST3 - Error during FIND_LAB_QUESTION');
140  			     Log_Util.LogMessage('	   - Test_ID = "'||i_test_id||'"    Laboratory= "'||i_lab_code||'".');
141  			     Log_Util.LogMessage('	   - ERROR: '||to_char(err_num)||' - "'||Err_msg||'".');
142  			  End If;
143  		    End;
144  		 When Others Then
145  		    v_oc_lab_question := NULL;
146  		      Log_Util.LogMessage('FNDLQST1 - Error during FIND_LAB_QUESTION');
147  			  Log_Util.LogMessage(' 	- Test_ID = "'||i_test_id||'"	 Laboratory= "'||i_lab_code||'".');
148  			  Log_Util.LogMessage(' 	- ERROR: '||to_char(err_num)||' - "'||Err_msg||'".');
149  		 End;
150  	  ElsIf (upper(i_Lab_Code) = 'NETTRIALS' or
151  		 upper(i_Lab_Code) = 'GEORGETOWN' )  Then
152  	     Begin
153  		SELECT DISTINCT M.OC_LAB_QUESTION
154  		     into v_oc_lab_question
155  		     FROM nci_lab_mapping m
156  		    WHERE M.test_component_id = i_test_ID
157  		      AND M.laboratory	      = i_lab_code
158  		      and m.oc_lab_question is not null;
159  
160  	     Exception
161  		When No_Data_Found then
162  		   v_oc_lab_question := NULL;
163  		When Others Then
164  		   v_oc_lab_question := NULL;
165  		   Log_Util.LogMessage('FNDLQST4 - Error during FIND_LAB_QUESTION');
166  		   Log_Util.LogMessage('	 - Test_ID = "'||i_test_id||'"	  Laboratory= "'||i_lab_code||'".');
167  		   Log_Util.LogMessage('	 - ERROR: '||to_char(err_num)||' - "'||Err_msg||'".');
168  	     End;
169  	  Else
170  	     v_oc_lab_question := NULL;
171  	  End If;
172  	  Return v_oc_lab_question;
173    End;
174  
175    Function Cnt_Lab_Test_Maps(i_Test_ID in Varchar2, i_Lab_Code in Varchar2) Return Number
176    is
177  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
178  	  /*	 Author: Patrick Conrad - Ekagra Software Technologies			       */
179  	  /*	   Date: 07/21/2004							       */
180  	  /*Description: This procedure is used to identify if the Lab Test is mapped to more  */
181  	  /*		 than one OC Lab Question.  Each LABORATORY has it's own way checking  */
182  	  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
183  
184  	  v_count   Number;
185  	  err_num   Number;
186  	  err_msg   Varchar2(100);
187  
188    Begin
189  	  If i_Lab_COde = 'CDW' Then
190  	     Begin
191  		SELECT count(DISTINCT M.OC_LAB_QUESTION)
192  		     into v_count
193  		     FROM nci_lab_mapping m
194  		    WHERE M.test_component_id = i_test_ID
195  		      AND M.laboratory	      = i_lab_code
196  		      and m.oc_lab_question is not null;
197  
198  		    if v_count=0 Then
199  		       SELECT count(DISTINCT OC_LAB_QUESTION)
200  			   into v_count
201  			  from NCI_CDW_LAB_MAP_CROSSREF
202  			 WHERE test_ID	 =  i_test_ID
203  			   AND laboratory = i_lab_code
204  			  and oc_lab_question is not null;
205  		    End If;
206  
207  		Exception
208  		   WHen No_Data_Found then
209  		      Begin
210  			 SELECT count(DISTINCT OC_LAB_QUESTION)
211  			   into v_count
212  			   from NCI_CDW_LAB_MAP_CROSSREF
213  			  WHERE test_ID   =  i_test_ID
214  			      AND laboratory = i_lab_code
215  			      and oc_lab_question is not null;
216  
217  			Exception
218  			   When No_Data_Found Then
219  			      v_count := 0;
220  			   When Others then
221  			      v_count := 0;
222  			      Err_num := SQLCODE;
223  			      err_msg := substr(sqlerrm,1,100);
224  			      Log_Util.LogMessage('LtDblMp2 - Error in Function LAB_TEST_DBLE_MAPPED');
225  			  Log_Util.LogMessage(' 	 - Test_ID = "'||i_test_id||'"	  Laboratory= "'||i_lab_code||'".');
226  			  Log_Util.LogMessage(' 	 - ERROR: '||to_char(err_num)||' - "'||Err_msg||'".');
227  
228  		    End;
229  		 When Others Then
230  		    v_count := 0;
231  		      Log_Util.LogMessage('LtDblMp1 - Error in Function LAB_TEST_DBLE_MAPPED');
232  			  Log_Util.LogMessage(' 	- Test_ID = "'||i_test_id||'"	 Laboratory= "'||i_lab_code||'".');
233  			  Log_Util.LogMessage(' 	- ERROR: '||to_char(err_num)||' - "'||Err_msg||'".');
234  		 End;
235  	      Else
236  		 v_count := 0;
237  	      End If;
238  	   Return v_count;
239  	 End;
240  
241    Procedure Process_Lab_Other is
242  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
243  	 /*	Author: Patrick Conrad - Ekagra Software Technologies			      */
244  	 /*	  Date: 12/13/2004							      */
245  	 /*Description: This procedure is process the mapping of Lab Test to the "Lab Other"  */
246  	 /*		DCM.  In the past, all lab tests that are successfully mapped to an   */
247  	 /* OC lab Question, but that question is not on a Specific DCM as a repeat default,  */
248  	 /* were mapped to the "Other Labs" panel (LAB_ALL/LABA DCM/DCMSubset).  A change was */
249  	 /* requested that this should no longer be the case, and that ANY mapped lab test,   */
250  	 /* regardless of study, that has no panel should be marked with an error. To create  */
251  	 /* more flexability, the code was enhanced to use a study specific identifier to     */
252  	 /* determine which studies will load other labs, and which will not.  By using the   */
253  	 /* study control table NCI_LAB_LOAD_CTL, the column LOAD_OTHER_LABS controls this.   */
254  	 /* A value of 'Y' denotes that lab test should be loaded, while 'N' denotes no load. */
255  	 /* The study 'ALL' contains the default value for all studies not specifically noted */
256  	 /* with an 'N' or 'Y'								      */
257  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
258  
259    Begin
260  
261  	  For x_Rec in (select a.study,
262  			       nvl(b.load_other_labs, c.load_other_labs) load_other_labs
263  			  from clinical_studies a,
264  			       nci_lab_load_ctl b,
265  			       nci_lab_load_ctl c
266  			 where a.study in (select oc_study from nci_labs
267  					    where load_flag in ('N')
268  					      and oc_lab_panel is null
269  					      AND oc_lab_subset is null
270  					      AND oc_lab_question is not null
271  					      AND result is not null)
272  			   and a.study	= b.oc_study(+)
273  			   and nvl(b.oc_study,'!') <> 'ALL'
274  			   and c.oc_study = 'ALL'				 )  Loop
275  
276  	     If X_Rec.load_other_labs = 'Y' Then
277  
278  		UPDATE NCI_LABS
279  		   SET OC_LAB_PANEL  = 'LAB_ALL'
280  		      ,OC_LAB_EVENT  = 'OTHER LABS'
281  		      ,OC_LAB_SUBSET = 'LABA'
282  		 WHERE oc_study = X_Rec.study
283  		   AND load_flag in ('N')
284  		   and oc_lab_panel is null
285  		   AND oc_lab_subset is null
286  		   AND oc_lab_question is not null
287  		   AND result is not null;
288  
289  		Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows successfully updated "OC_LAB_PANEL", "OC_LAB_EVENT", "OC_LAB_SUBSET"'||
290  				   ' with LAB_ALL, OTHER LABS and LABA for Study '||X_REc.Study);
291  
292  	     Else
293  
294  		UPDATE NCI_LABS
295  		   SET LOAD_FLAG = 'E',
296  		       ERROR_REASON = 'Study '||X_Rec.Study||' does not load "Other Labs".'
297  		 WHERE oc_study = X_Rec.Study
298  		   and LOAD_FLAG IN ('N')
299  		   and oc_lab_panel is null
300  		   AND oc_lab_subset is null
301  		   AND oc_lab_question is not null
302  		   AND result is not null;
303  
304  		Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||
305  				    ' rows marked for error "Study does not load "Other Labs".');
306  
307  	     End If;
308  
309  	  End Loop;
310  
311    End;
312  
313    Procedure Populate_LABDCM_EVENTS_Table is
314  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
315  	 /*	Author: Patrick Conrad - Ekagra Software Technologies			      */
316  	 /*	  Date: 12/20/2004							      */
317  	 /*Description: This procedure is used to populate the Lab DCM Events table with      */
318  	 /*		values from the view NCI_STUDY_LABDCM_EVENTS_VW.  Table is used to    */
319  	 /*		significantly increase the speed of the CDM, EVENT, SUBSET assignment */
320  	 /*		code.  Testing revealed that 48000 records now takes less than 10 min.*/
321  	 /*		compared to hours.						      */
322  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
323    Begin
324  
325  	  Log_Util.LogMessage('PLDET - About to delete old records from NCI_STUDY_LABDCM_EVENTS_TB.');
326  
327  	  Delete from NCI_STUDY_LABDCM_EVENTS_TB;
328  
329  	  Log_Util.LogMessage('PLDET - '||to_char(SQL%RowCount)||' records removed from NCI_STUDY_LABDCM_EVENTS_TB.');
330  
331  	  Log_Util.LogMessage('PLDET - About to populate table NCI_STUDY_LABDCM_EVENTS_TB.');
332  
333  	  Insert into NCI_STUDY_LABDCM_EVENTS_TB
334  	  select * from NCI_STUDY_LABDCM_EVENTS_VW;
335  
336  	  Log_Util.LogMessage('PLDET - '||to_char(SQL%RowCount)||' records inserted into NCI_STUDY_LABDCM_EVENTS_TB.');
337  
338  	  Log_Util.LogMessage('PLDET - Finished Populate_LABDCM_EVENTS_Table.');
339  
340    End;
341  
342    Procedure MessageLogPurge(LogName in VarChar2, LogDate in Date) is
343  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
344  	 /*	Author: Patrick Conrad - Ekagra Software Technologies			      */
345  	 /*	  Date: 08/25/2003							      */
346  	 /*Description: This procedure is used to identify those logs needing purged.  If     */
347  	 /*		is null, '%' is used.  If LogDate is null, then SYSDATE-14 is used.   */
348  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
349  	 v_HoldLN Varchar2(30);
350  
351    Begin
352  	 v_HoldLN := LogName;
353  
354  	 For Cr1 in (select distinct LogName from Message_Logs
355  		      where LogName like Nvl(v_HoldLn,'%')
356  			and LogType = 'LABLOAD'
357  			and LogDate <= nvl(MessageLogPurge.LogDate,Sysdate-14)) Loop
358  
359  	    Log_Util.LogClearLog(cr1.logName, 'LABLOAD');
360  	 End Loop;
361    End;
362  
363  
364    Procedure Reload_Error_Labs(P_Method in Varchar2 Default 'MARK',
365  				   E_Study  in Varchar2 Default '%',
366  				   E_Reason in Varchar2 Default '%',
367  		    E_Patientid in Varchar2 Default '%') is
368  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
369  	 /*	Author: Patrick Conrad - Ekagra Software Technologies			      */
370  	 /*	  Date: 07/01/2003							      */
371  	 /*Description: This procedure is used to identify labs that were not loaded due to   */
372  	 /*		an error.  These labs are then reset back to 'NEW' (load_flag = 'N'), */
373  	 /*		and that the process_labs procedure is executed.		      */
374  	 /*		The procedure allows for specified errors to be examined viw the      */
375  	 /*		E_Reason parameter.  If the parameter is not set, then all reasons    */
376  	 /*		be targeted for reloading.					      */
377  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
378  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
379  	 /*   Date: 07/16/03								      */
380  	 /*    Mod: Added Error Message Logging to help locate error location		      */
381  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
382  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
383  	 /*   Date: 02/05/04								      */
384  	 /*    Mod: Corrected Procedure.  It was not identifying and processing records from  */
385  	 /*	    the staging table NCI_LABS into BDL_TEMP_FILES.  It is now. 	      */
386  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
387  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
388  	 /*   Date: 06/14/04								      */
389  	 /*    Mod: Added E_Study as an input parameter, to help identify study specific      */
390  	 /*	    Error_Reasons needed reprocessed.					      */
391  	 /*	    Added P_Method as an input parameter.  Works similar to the Recheck       */
392  	 /*	    Unmapped function.	Added messages for invalid method types, etc.	      */
393  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
394  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
395  	 /*   Date: 06/22/04								      */
396  	 /*    Mod: Removed duplicate code that was running the batch load twice and the      */
397  	 /*	    data dates twice.		    .					      */
398  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
399  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
400  	 /*   Date: 08/17/05								      */
401  	 /*    Mod: Enhanced Procedure.  Replaced section of code that performed processing   */
402  	 /*	    with call to "GET_PROCESS_LOAD_LAB" with the "WAITING" option. There have */
403  	 /*	    been alot of modifications to the called procedure.  There should NOT be  */
404  	 /*	    2 different locations in the code where loading actually occurrs.	      */
405  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
406  	 /* Author: Sirisha Yerredu -  AC Technologies					      */
407  	 /*   Date: 10/19/05								      */
408  	 /*    Mod: Enhanced Procedure. Request from Christo to handle Error Labs which       */
409  	 /*	    got rejected due to various Error Reasons .Added Additional Parameter     */
410  	 /*	    to the procedure.Added E_Patient_id as an Input parameter.Update	      */
411  	 /*	    Query now performs search based on Study, Error_Reason and Patient_Id     */
412  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
413  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
414  	 /*   Date: 11/10/05								      */
415  	 /*    Mod: Enhanced Procedure.  Added LogExist Check.	Only create new log name if   */
416  	 /*	    needed.  New Procedure Process_Error_Labs, calls this procedure during    */
417  	 /*	    normal processing, which caused log file to be reset.		      */
418  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
419  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
420  	 /*   Date: 12/08/05								      */
421  	 /*    Mod: Enhanced Procedure.  Added "COUNT" option so that a count of records to   */
422  	 /*	    be marked can be retreived. 					      */
423  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
424  
425  	  v_JobNumber	  Number;
426  
427    Begin
428  	 If Log_Util.Log$LogName is null Then --prc 11/10/05
429  	    Log_Util.LogSetName('ERRORLABRELOAD_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
430  	    MessageLogPurge('ERRORLABRELOAD%',SYSDATE - 14);  -- prc 12/08/05 : Moved to here...makes more sense
431  	 End If; --prc 11/10/05
432  	 Log_Util.LogMessage('ERRREL - Starting "RELOAD_ERROR_LABS".'); -- prc 07/16/03
433  	 Log_Util.LogMessage('ERRREL - Parameters Method ="'||P_Method||'"   Study="'||E_Study||'".'); -- prc 06/14/04
434  	 Log_Util.LogMessage('ERRREL - Parameters Error Reason ="'||E_Reason||'".'); -- prc 06/14/04
435  
436  	 -- If not a valid method, give this message in the log, and do not proceed.
437  	 If Upper(P_Method) not in ('MARK','PROCESS','COUNT') Then
438  	     Log_Util.LogMessage('ERRREL -  Parameter '||P_METHOD||' is not a valid Parameter.');
439  	     Log_Util.LogMessage('ERRREL -  ');
440  	     Log_Util.LogMessage('ERRREL -  Valid Methods for Reload_Error_Labs are ''MARK'' and ''PROCESS''');
441  	     Log_Util.LogMessage('ERRREL -  ');
442  	     Log_Util.LogMessage('ERRREL -  MARK    - Marks the records as "NEW" and resets the field ERROR_REASON.');
443  	     Log_Util.LogMessage('ERRREL -	      These records will then wait for the next batch of Lab Loading');
444  	     Log_Util.LogMessage('ERRREL -  COUNT   - Counts the records that would be MARKed.');
445  	     Log_Util.LogMessage('ERRREL -	      These records will then wait for the next batch of Lab Loading');
446  	     Log_Util.LogMessage('ERRREL -  PROCESS - Performs the MARK function, but will then process the records');
447  	     Log_Util.LogMessage('ERRREL -	      immediately.');
448  	     Log_Util.LogMessage('ERRREL - ');
449  	 Else
450  	    If Upper(P_Method) in ('COUNT') Then  -- prc 12/08/05
451  	       select count(*) into Labs_Count
452  		 from NCI_LABS
453  		where load_flag = 'E'
454  		  and nvl(oc_study,'~') like E_Study  -- prc 10/26/04 added "nvl" function
455  		  and error_Reason like E_Reason
456  		  and patient_id like E_Patientid; -- sy
457  
458  	       Log_Util.LogMessage('ERRREL - '||to_char(labs_count)||' record(s) found.  NOT MARKED');
459  
460  	    End If; -- prc 06/14/04
461  	    If Upper(P_Method) in ('MARK','PROCESS') Then  -- prc 06/14/04
462  	       Update NCI_LABS
463  		       Set Load_flag	= 'N'
464  			  ,Error_Reason = 'Reloaded due to: ' || Error_Reason
465  		     where load_flag = 'E'
466  		       and nvl(oc_study,'~') like E_Study  -- prc 10/26/04 added "nvl" function
467  		       and error_Reason like E_Reason
468  		       and patient_id like E_Patientid; -- sy
469  
470  	       labs_count := SQL%RowCount;
471  
472  	       Log_Util.LogMessage('ERRREL - '||to_char(labs_count)||' rows successfully set "Load_Flag=N" and "Error_Reason"');
473  
474  	       Commit;
475  
476  	    End If; -- prc 06/14/04
477  	 End If;
478  
479  	 If Upper(P_Method) in ('PROCESS') Then  -- prc 08/17/05
480  
481  	    Log_Util.LogMessage('ERRREL - Calling "GET_PROCESS_LOAD_LABS(WAITING)".'); -- prc 08/17/05
482  	    Get_Process_Load_Labs('WAITING');
483  
484  	 End If;
485  
486  	 Log_Util.LogMessage('ERRREL - Finished "RELOAD_ERROR_LABS"'); -- prc 07/16/03
487  
488    End; -- Reload_Error_Labs
489  
490  
491    Procedure Process_Error_Labs(P_Method in Varchar2 Default 'MARK') is   -- added 10/19/2005
492  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
493  	 /*	Author: Sirisha Yerredu - AC Technologies					*/
494  	 /*	  Date: 10/19/2005								*/
495  	 /*Description: This procedure is used to reset Lab Load records  which got		*/
496  	 /*		errored due to the Error Reason 'PreStudy Lab Date is NULL'	  .	*/
497  	 /*		This procedure also Resets the Labs which got errored			*/
498  	 /*		before due to Various Error Reasons depending upon the			*/
499  	 /*		parameters passed for the Error_Reason.Cycle is one of the		*/
500  	 /*		Attribute of the nci_labs_error_labs which takes 2 values.		*/
501  	 /*		R - Refers to Repetetive process which runs every day.			*/
502  	 /*		All Patients which got Error Reason of 'PreStudy Lab Date is NULL'	*/
503  	 /*		will have cycle value of 'R'.All other patients which have different	*/
504  	 /*		Error Reasons will have cycle value of 'O' which means one time process */
505  	 /*-------------------------------------------------------------------------------------*/
506  	 /* Modification History:								*/
507  	 /* PRC 11/10/2005: Cleaned up the code, added "PEL" to message logs. Added Messages.	*/
508  	 /*-------------------------------------------------------------------------------------*/
509  	 /* Modification History:								*/
510  	 /* PRC 12/08/2005: Added Parameter to Routine so as to Pass in "COUNT".  Added code so */
511  	 /*		    log file would start here if needed (when run single stand alone).	*/
512  	 /*		    Added code to alert of invalid processing methods. added code so	*/
513  	 /*		    that MARK processing does the delete.				*/
514  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
515  
516  	 Begin
517  	    If Log_Util.Log$LogName is null Then -- PRC 12/08/05
518  	       Log_Util.LogSetName('PROCERRLAB_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
519  	       MessageLogPurge('PROCERRLAB%',SYSDATE - 14);  -- PRC 12/08/05
520  	    End If; --prc 11/10/05
521  	    Log_Util.LogMessage('PEL - Starting "Process_Error_Labs"'); -- PRC 12/08/05
522  	    Log_Util.LogMessage('PEL - Parameters Method ="'||P_Method||'".'); -- PRC 12/08/05
523  
524  	    -- If not a valid method, give this message in the log, and do not proceed.
525  	    If Upper(P_Method) not in ('MARK','COUNT') Then
526  		Log_Util.LogMessage('PEL -  Parameter '||P_METHOD||' is not a valid Parameter.');
527  		Log_Util.LogMessage('PEL -  ');
528  		Log_Util.LogMessage('PEL -  Valid Methods for Process_Error_Labs are ''MARK'' and ''COUNT''');
529  		Log_Util.LogMessage('PEL -  ');
530  		Log_Util.LogMessage('PEL -  MARK    - Marks the records as "NEW" and resets the field ERROR_REASON.');
531  		Log_Util.LogMessage('PEL -	      These records will then wait for the next batch of Lab Loading');
532  		Log_Util.LogMessage('PEL -  COUNT   - Counts the records to be marked without marking them.');
533  		Log_Util.LogMessage('PEL - ');
534  	    Else
535  	       For x_Rec in (select oc_study, patient_id, error_reason, cycle
536  			       from nci_labs_error_labs) Loop
537  
538  		  Log_Util.LogMessage('PEL - Calling "Reload_Error_Labs", Cycle = "'||X_rec.Cycle||'".');--prc 11/10/05
539  		  Reload_error_labs(P_METHOD,x_Rec.oc_study,x_Rec.error_reason,x_rec.patient_id);
540  	       End loop;
541  	       If P_Method = 'MARK' Then
542  		  Log_Util.LogMessage('PEL - Completed Auto-Processing of Error Labs.');--prc 11/10/05
543  
544  		  Log_Util.LogMessage('PEL - Deleting Single Cycle Requests.');--prc 11/10/05
545  
546  		  Delete from nci_labs_error_labs where upper(cycle) = 'O';
547  		  commit;
548  
549  		  Log_Util.LogMessage('PEL - '||to_char(SQL%RowCount)||' Rows deleted records from nci_labs_error_labs');
550  	       End If;
551  	    End If;
552  	    Log_Util.LogMessage('PEL - Finished "Process_ERROR_LABS"');
553  
554  	EXCEPTION
555  	  WHEN OTHERS THEN
556  	      Log_Util.LogMessage('PEL - Error Encountered: ' || SQLCODE);
557  	      Log_Util.LogMessage('PEL - Error Message: ' || SQLERRM);
558   End;   -- Process_Error_Labs
559  
560  
561  
562    Procedure Recheck_Unmapped_Labs(P_Method in Varchar2 Default 'HELP') is
563  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
564  	 /*	Author: Patrick Conrad - Ekagra Software Technologies			      */
565  	 /*	  Date: 01/21/2004							      */
566  	 /*Description: This procedure is used to identify labs records that were  not loaded */
567  	 /*		due to the 'Lab Test is unmapped' error.  These labs are examined to  */
568  	 /*		determine if they are now mapped. There are 2 options for this	      */
569  	 /*		procedure.  MARK - Marks the records as 'NEW' and resets the field    */
570  	 /*		ERROR_REASON.  These records will then wait for the next batch of Lab */
571  	 /*		Loading to take place, and be included.  PROCESS - Performs the MARK  */
572  	 /*		function, but will process the records immediately.		      */
573  	 /*-----------------------------------------------------------------------------------*/
574  	 /* Modification History:							      */
575  	 /* PRC 01/21/2004: Christo Requested that the New Labs that were mapped be displayed.*/
576  	 /*	I ran with this and added another paramter that allows a user to CHECK if any */
577  	 /*	new labs can be mapped. 						      */
578  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
579  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
580  	 /*   Date: 02/05/04								      */
581  	 /*    Mod: Corrected Procedure.  It was not identifying and processing records from  */
582  	 /*	    the staging table NCI_LABS into BDL_TEMP_FILES.  It is now. 	      */
583  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
584  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
585  	 /*   Date: 08/17/05								      */
586  	 /*    Mod: Enhanced Procedure.  Replaced section of code that performed processing   */
587  	 /*	    with call to "GET_PROCESS_LOAD_LAB" with the "WAITING" option. There have */
588  	 /*	    been alot of modifications to the called procedure.  There should NOT be  */
589  	 /*	    2 different locations in the code where loading actually occurrs.	      */
590  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
591  
592  	 v_Jobnumber   Number;
593  	 v_oc_lab_question nci_labs.oc_lab_question%type;
594  
595    Begin
596  	 If Log_Util.Log$LogName is null Then
597  	    Log_Util.LogSetName('RECHCK_UNMAPPED_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
598  	 End If;
599  
600  	 Log_Util.LogMessage('RCKUMP - Recheck Unmapped Labs Starting');
601  	 Log_Util.LogMessage('RCKUMP - P_METHOD = '||P_METHOD);
602  
603  	 If Upper(P_Method) not in ('MARK','PROCESS','CHECK') Then
604  	     Log_Util.LogMessage('RCKUMP -  Parameter '||P_METHOD||' is not a valid Parameter.');
605  	     Log_Util.LogMessage('RCKUMP -  ');
606  	     Log_Util.LogMessage('RCKUMP -  Usage:');
607  	     Log_Util.LogMessage('RCKUMP -  ');
608  	     Log_Util.LogMessage('RCKUMP -  cdw_data_transerfer_pkg_new.Recheck_Unmapped_Labs(''CHECK''|''MARK''|''PROCESS'')');
609  	     Log_Util.LogMessage('RCKUMP -  ');
610  	     Log_Util.LogMessage('RCKUMP -  CHECK   - Reports into the log file, those labs that are NEWLY mapped and');
611  	     Log_Util.LogMessage('RCKUMP -	      can be used in the Marking Process.');
612  	     Log_Util.LogMessage('RCKUMP -  MARK    - Marks the records as "NEW" and resets the field ERROR_REASON.');
613  	     Log_Util.LogMessage('RCKUMP -	      These records will then wait for the next batch of Lab Loading');
614  	     Log_Util.LogMessage('RCKUMP -  PROCESS - Performs the MARK function, but will then process the records');
615  	     Log_Util.LogMessage('RCKUMP -	      immediately.');
616  	     Log_Util.LogMessage('RCKUMP - ');
617  	 Else
618  	    If Upper(P_Method) in ('MARK','PROCESS','CHECK') Then
619  	       -- Report The LABS that will be found as having been mapped.
620  		For Xrec in (SELECT count(*) Rec_Count, N.TEST_COMPONENT_ID, N.LABORATORY
621  			      FROM nci_labs n
622  			     WHERE load_flag = 'E'
623  			       AND ERROR_REASON = 'Lab Test is unmapped'
624  			     Group by N.Test_Component_id, n.laboratory) Loop
625  
626  		   v_oc_lab_question := cdw_data_transfer_v3.FIND_LAB_QUESTION(Xrec.test_component_id, XRec.laboratory);
627  		   If v_oc_Lab_Question is not null Then
628  		      Log_Util.LogMessage('RCKUMP - Lab: "'||Xrec.Laboratory||'"  Test_ID: "'||Xrec.TEST_COMPONENT_ID||'"'||
629  					  ' can be mapped to: "'|| V_OC_LAB_QUESTION ||'"  - Records Needing Update: '||
630  					   to_char(Xrec.Rec_Count));
631  
632  		     If Upper(P_Method) in ('MARK','PROCESS') Then
633  			-- Mark the Records for re-processing
634  			Update NCI_LABS n
635  			   Set Load_flag    = 'N'
636  			      ,Error_Reason = 'Reloaded due to: ' || Error_Reason
637  			 where load_flag = 'E'
638  			   and error_Reason = 'Lab Test is unmapped'
639  			   and n.test_component_id = Xrec.TEST_COMPONENT_ID
640  			   and n.laboratory = XRec.Laboratory;
641  
642  			Log_Util.LogMessage('RCKUMP - '||to_char(SQL%RowCount)||' rows successfully marked for reprocessing.');
643  
644  			Commit;
645  
646  		     End If;
647  
648  		   Else
649  		      Log_Util.LogMessage('RCKUMP - Lab: "'||Xrec.Laboratory||'"  Test_ID: "'||Xrec.TEST_COMPONENT_ID||'"'||
650  					  ' STILL NOT MAPPED - Records Needing mapped: '||to_char(Xrec.Rec_Count));
651  		   End If;
652  
653  	       End Loop;
654  
655  
656  	    End If;
657  	    If Upper(P_Method) in ('MARK') Then
658  	       Log_Util.LogMessage('RCKUMP - '||'Records will be processed during next Lab Load Run.');
659  	    End If;
660  
661  	    If Upper(P_Method) in ('PROCESS') Then
662  
663  	       Log_Util.LogMessage('RCKUMP - Finished "RELOAD_ERROR_LABS"');
664  	       Log_Util.LogMessage('RCKUMP - Records will be processed NOW.');
665  
666  	       Get_Process_Load_labs('WAITING');
667  
668  	    End If;
669  
670  	  End If;
671  
672  	  Log_Util.LogMessage('RCKUMP - Recheck Unmapped Labs Finished.');
673  
674    End; -- Reload_Error_Labs
675  
676    Procedure FindandMark_Updates is
677  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
678  	 /*	Author: Patrick Conrad - Ekagra Software Technologies			      */
679  	 /*	  Date: 08/09/2005							      */
680  	 /*Description: This procedure is used to identify lab test results that are updates  */
681  	 /*		to existing OC Lab Question values.  This allows for special	      */
682  	 /*		processing of updates.						      */
683  	 /*  Modification History							      */
684  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
685  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
686  
687  	 U_Count Number := 0;
688  
689    Begin
690  	 If Log_Util.Log$LogName is null Then
691  	    Log_Util.LogSetName('UPDATE_LOADED_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
692  	 End If;
693  	 Log_Util.LogMessage('FMU - Starting FindandMark_Updates.');
694  
695  	 -- prc 08/03/06: Removed all references to question.  It only matters if the sample date was previously
696  	 --		  loaded, not the question.  This way, if a Repeat Default is added, and it needs loaded
697  	 --		  to an existing panel, it will load as an UPDATE to the panel.
698  	 update nci_labs n
699  	    set load_flag    = 'W',
700  		Error_reason = 'Records should be loaded as updates.'
701  	  where load_flag = 'L'    -- Change N to L, because of LLI Processing.
702  	    and exists
703  		(SELECT n.PATIENT_ID, n.LABTEST_NAME, n.RESULT, n.sample_datetime, rd.dcm_time
704  		   FROM dcms	      d,
705  			received_dcms rd
706  		  WHERE d.DOMAIN=n.OC_STUDY
707  		    AND d.NAME=n.OC_LAB_PANEL
708  		    AND d.SUBSET_NAME=n.OC_LAB_SUBSET
709  		    and d.CLINICAL_STUDY_ID =rd.CLINICAL_STUDY_ID
710  		    AND d.dcm_id=rd.dcm_id
711  		    AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
712  		    AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
713  		    and rd.patient = n.oc_patient_pos
714  		    AND rd.DCM_DATE=TO_CHAR(TO_DATE(n.SAMPLE_DATETIME,'mmddrrhh24mi'),'yyyymmdd')
715  		    AND rd.DCM_TIME=SUBSTR(n.SAMPLE_DATETIME,7)||'00'
716  		    and Rd.END_TS = to_date(3000000, 'J'));
717  
718  	 Log_Util.LogMessage('FMU - '||to_char(SQL%RowCount)||' rows successfully marked as "Load as Update" for existing records.');
719  
720  	 -- Mark records as updates, if a soft-deleted record for the same date is found AND it is the
721  	 -- latest received record.  This removes the problem where a record was applied to a subevent number
722  	 -- but the sample datetime is different from the original.
723  	 update nci_labs n
724  	    set load_flag    = 'S',
725  		Error_reason = 'Records should be loaded as updates (soft-deleted).'
726  	  where load_flag = 'L'    -- Change N to L, because of LLI Processing.
727  	    and exists
728  		(SELECT n.PATIENT_ID, n.LABTEST_NAME, n.RESULT, n.sample_datetime, rd.dcm_time
729  		   FROM dcms	      d,
730  			received_dcms rd
731  		  WHERE d.DOMAIN=n.OC_STUDY
732  		    AND d.NAME=n.OC_LAB_PANEL
733  		    AND d.SUBSET_NAME=n.OC_LAB_SUBSET
734  		    and d.CLINICAL_STUDY_ID =rd.CLINICAL_STUDY_ID
735  		    AND d.dcm_id=rd.dcm_id
736  		    AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
737  		    AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
738  		    and rd.patient = n.oc_patient_pos
739  		    AND rd.DCM_DATE=TO_CHAR(TO_DATE(n.SAMPLE_DATETIME,'mmddrrhh24mi'),'yyyymmdd')
740  		    AND rd.DCM_TIME=SUBSTR(n.SAMPLE_DATETIME,7)||'00'
741  		    and rd.received_dci_id = (
742  				   SELECT max(rd2.received_dci_id)
743  				     FROM dcms		d2,
744  					  received_dcms rd2
745  				    WHERE d2.DOMAIN = d.domain
746  				      AND d2.NAME   = d.NAME
747  				      AND d2.SUBSET_NAME = d.SUBSET_NAME
748  				      and d2.CLINICAL_STUDY_ID =rd2.CLINICAL_STUDY_ID
749  				      AND d2.dcm_id = rd2.dcm_id
750  				      AND d2.DCM_SUBSET_SN = rd2.DCM_SUBSET_SN
751  				      AND d2.dcm_layout_sn = rd2.DCM_LAYOUT_SN
752  				      and rd2.patient = rd.patient
753  				      and rd2.clin_plan_eve_name = rd.clin_plan_eve_name
754  				      and rd2.subevent_number	 = rd.subevent_number));
755  
756  	 Log_Util.LogMessage('FMU - '||to_char(SQL%RowCount)||' rows successfully marked as "Load as Soft-Delete Update".');
757  
758  	 -- prc 09/22/06:
759  	 -- Find Records that are marked as soft-deletes that have more than one record per lab test Questions.
760  	 -- Leave the Earliest Lab Test Received marked as Soft-Delete, but mark the rest of them as
761  	 -- Updates to Loading Records 'D'.
762  
763  	 For A_Rec in (select count(*), oc_study, oc_patient_pos, oc_lab_panel, oc_lab_subset, sample_datetime, oc_lab_question
764  			 from nci_labs
765  			where load_flag = 'S'
766  			group by oc_study, oc_patient_pos, oc_lab_panel, oc_lab_subset, sample_datetime, oc_lab_question
767  		       having count(*) > 1) loop
768  
769  	    update nci_labs n
770  	       set load_flag	= 'D',
771  	      Error_reason = 'Records should be loaded as updates.'
772  	     where load_flag = 'S'    -- Change N to L, because of LLI Processing.
773  	       and oc_study	   = A_Rec.oc_study
774  	       and oc_patient_pos  = A_Rec.oc_patient_pos
775  	       and oc_lab_panel    = A_Rec.oc_lab_panel
776  	       and oc_lab_subset   = A_Rec.oc_lab_subset
777  	       and sample_datetime = A_Rec.sample_datetime
778  	       and oc_lab_question = A_Rec.oc_lab_question
779  	       and cdw_result_id > (select min(cdw_result_id) from nci_labs
780  		      where load_flag = 'S'
781  			and oc_study	    = A_Rec.oc_study
782  			and oc_patient_pos  = A_Rec.oc_patient_pos
783  			and oc_lab_panel    = A_Rec.oc_lab_panel
784  			and oc_lab_subset   = A_Rec.oc_lab_subset
785  			and sample_datetime = A_Rec.sample_datetime
786  			and oc_lab_question = A_Rec.oc_lab_question);
787  
788  		 U_Count := U_Count + SQL%RowCount;
789  	 End Loop;
790  
791  	 Log_Util.LogMessage('FMU - '||U_Count||' rows successfully marked as "Load as Update" for loading soft-delete Records.');
792  
793  
794  	 Log_Util.LogMessage('FMU - Finished FindandMark_Updates.');
795  
796  	 Commit;
797  
798    End FindandMark_Updates;
799  
800    Procedure Update_After_Batch_Load is
801  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
802  	 /*	Author: Patrick Conrad - Ekagra Software Technologies			      */
803  	 /*	  Date: 07/10/2003							      */
804  	 /*Description: This procedure is used to identify labs that were recently loaded, but*/
805  	 /*		the overall batch file load failed.  Labs that are set to 'NEW'       */
806  	 /*		(load_flag = 'N'), are checked against recently entered responses.    */
807  	 /*		If a match is found, then the NCI_LABS lab record is updated to 'C'.  */
808  	 /*  Modification History							      */
809  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
810  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
811  	 /*   Date: 08/29/04								      */
812  	 /*    Mod: Replaced the "exists" clause with a more appropriate query. 	      */
813  	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
814  	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
815  	 /*   Date: 08/29/04								      */
816  	 /*    Mod: Renamed from Failure to Load					      */
817  	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
818  
819    Begin
820  	 If Log_Util.Log$LogName is null Then
821  	    Log_Util.LogSetName('UPDATE_LOADED_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
822  	 End If;
823  	 Log_Util.LogMessage('UABL - Starting Update_After_Batch_Load.');
824  
825  
826  	 update nci_labs n
827  	    set load_flag    = 'C'
828  	       ,load_date    = sysdate
829  	       ,Error_reason = 'Records Loaded and Verified.'
830  	  where load_flag = 'L'
831  	    and exists
832  		 (SELECT n.PATIENT_ID, n.LABTEST_NAME, n.RESULT, n.sample_datetime,
833  			 rd.dcm_time,  rv.VALUE_TEXT
834  		    FROM dcms	       d,
835  			 received_dcms rd,
836  			 dcm_questions dp,
837  			 dcm_questions dv,
838  			 responses     rv,
839  			 responses     rp
840  		   WHERE d.DOMAIN=n.OC_STUDY
841  		     AND d.NAME=n.OC_LAB_PANEL
842  		     AND d.SUBSET_NAME=n.OC_LAB_SUBSET
843  		     and d.CLINICAL_STUDY_ID =rd.CLINICAL_STUDY_ID
844  		     AND d.dcm_id=rd.dcm_id
845  		     AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
846  		     AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
847  		     and rd.patient = n.oc_patient_pos
848  		     AND rd.DCM_DATE=TO_CHAR(TO_DATE(n.SAMPLE_DATETIME,'mmddrrhh24mi'),'yyyymmdd') -- change yy to rr
849  		     AND rd.DCM_TIME=SUBSTR(n.SAMPLE_DATETIME,7)||'00'
850  		     AND dp.DCM_ID=d.dcm_id
851  		     AND dp.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
852  		     AND dp.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
853  		     AND dp.QUESTION_NAME='LPARM'
854  		     and rp.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
855  		     AND rp.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
856  		     AND rp.DCM_QUESTION_ID=dp.DCM_QUESTION_ID
857  		     AND rp.VALUE_TEXT=n.OC_LAB_QUESTION
858  		     AND dv.DCM_ID=d.dcm_id
859  		     AND dv.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
860  		     AND dv.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
861  		     AND dv.QUESTION_NAME='LVALUE'
862  		     and rv.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
863  		     AND rv.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
864  		     AND rv.DCM_QUESTION_ID=dv.DCM_QUESTION_ID
865  		     AND rv.VALUE_TEXT=n.RESULT
866  		     AND rv.REPEAT_SN=rp.REPEAT_SN
867  		     and Rp.END_TS = to_date(3000000, 'J')
868  		     and Rv.END_TS = to_date(3000000, 'J'));
869  
870  	 Log_Util.LogMessage('UABL - '||to_char(SQL%RowCount)||' rows successfully marked as Loaded and Verified.');
871  
872  	 Commit;
873  
874  	 update nci_labs n
875  	    set load_flag    = 'C'
876  	       ,load_date    = sysdate
877  	       ,Error_reason = 'Soft-Delete Records Reloaded and Verified .'
878  	  where load_flag = 'S'
879  	    and exists
880  		 (SELECT n.PATIENT_ID, n.LABTEST_NAME, n.RESULT, n.sample_datetime,
881  			 rd.dcm_time,  rv.VALUE_TEXT
882  		    FROM dcms	       d,
883  			 received_dcms rd,
884  			 dcm_questions dp,
885  			 dcm_questions dv,
886  			 responses     rv,
887  			 responses     rp
888  		   WHERE d.DOMAIN=n.OC_STUDY
889  		     AND d.NAME=n.OC_LAB_PANEL
890  		     AND d.SUBSET_NAME=n.OC_LAB_SUBSET
891  		     and d.CLINICAL_STUDY_ID =rd.CLINICAL_STUDY_ID
892  		     AND d.dcm_id=rd.dcm_id
893  		     AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
894  		     AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
895  		     and rd.patient = n.oc_patient_pos
896  		     AND rd.DCM_DATE=TO_CHAR(TO_DATE(n.SAMPLE_DATETIME,'mmddrrhh24mi'),'yyyymmdd') -- change yy to rr
897  		     AND rd.DCM_TIME=SUBSTR(n.SAMPLE_DATETIME,7)||'00'
898  		     AND dp.DCM_ID=d.dcm_id
899  		     AND dp.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
900  		     AND dp.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
901  		     AND dp.QUESTION_NAME='LPARM'
902  		     and rp.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
903  		     AND rp.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
904  		     AND rp.DCM_QUESTION_ID=dp.DCM_QUESTION_ID
905  		     AND rp.VALUE_TEXT=n.OC_LAB_QUESTION
906  		     AND dv.DCM_ID=d.dcm_id
907  		     AND dv.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
908  		     AND dv.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
909  		     AND dv.QUESTION_NAME='LVALUE'
910  		     and rv.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
911  		     AND rv.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
912  		     AND rv.DCM_QUESTION_ID=dv.DCM_QUESTION_ID
913  		     AND rv.VALUE_TEXT=n.RESULT
914  		     AND rv.REPEAT_SN=rp.REPEAT_SN
915  		     and Rp.END_TS = to_date(3000000, 'J')
916  		     and Rv.END_TS = to_date(3000000, 'J'));
917  
918  	 Log_Util.LogMessage('UABL - '||to_char(SQL%RowCount)||' rows successfully marked as Soft -Delete Reloaded and Verified.');
919  
920  	 Commit;
921  
922  	 update nci_labs n
923  	      set load_flag    = 'U'
924  		 ,load_date    = sysdate
925  		 ,Error_reason = 'Records loaded as updates.'
926  	    where load_flag = 'D'
927  	      and exists
928  		   (SELECT n.PATIENT_ID, n.LABTEST_NAME, n.RESULT, n.sample_datetime,
929  			   rd.dcm_time,  rv.VALUE_TEXT
930  		      FROM dcms 	 d,
931  			   received_dcms rd,
932  			   dcm_questions dp,
933  			   dcm_questions dv,
934  			   responses	 rv,
935  			   responses	 rp
936  		     WHERE d.DOMAIN=n.OC_STUDY
937  		       AND d.NAME=n.OC_LAB_PANEL
938  		       AND d.SUBSET_NAME=n.OC_LAB_SUBSET
939  		       and d.CLINICAL_STUDY_ID =rd.CLINICAL_STUDY_ID
940  		     AND d.dcm_id=rd.dcm_id
941  		     AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
942  		     AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
943  		     and rd.patient = n.oc_patient_pos
944  		     AND rd.DCM_DATE=TO_CHAR(TO_DATE(n.SAMPLE_DATETIME,'mmddrrhh24mi'),'yyyymmdd') -- change yy to rr
945  		     AND rd.DCM_TIME=SUBSTR(n.SAMPLE_DATETIME,7)||'00'
946  		     AND dp.DCM_ID=d.dcm_id
947  		     AND dp.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
948  		     AND dp.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
949  		     AND dp.QUESTION_NAME='LPARM'
950  		     and rp.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
951  		     AND rp.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
952  		     AND rp.DCM_QUESTION_ID=dp.DCM_QUESTION_ID
953  		     AND rp.VALUE_TEXT=n.OC_LAB_QUESTION
954  		     AND dv.DCM_ID=d.dcm_id
955  		     AND dv.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
956  		     AND dv.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
957  		     AND dv.QUESTION_NAME='LVALUE'
958  		     and rv.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
959  		     AND rv.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
960  		     AND rv.DCM_QUESTION_ID=dv.DCM_QUESTION_ID
961  		     AND rv.VALUE_TEXT=n.RESULT
962  		     AND rv.REPEAT_SN=rp.REPEAT_SN
963  		     and Rp.END_TS = to_date(3000000, 'J')
964  		     and Rv.END_TS = to_date(3000000, 'J'));
965  
966  	 Log_Util.LogMessage('UABL - '||to_char(SQL%RowCount)||' rows successfully marked as Loaded as Updates and verified (D).');
967  
968  	 Commit;
969  
970  	 update nci_labs n
971  	      set load_flag    = 'U'
972  		 ,load_date    = sysdate
973  		 ,Error_reason = 'Records loaded as updates.'
974  	    where load_flag = 'W'
975  	      and exists
976  		   (SELECT n.PATIENT_ID, n.LABTEST_NAME, n.RESULT, n.sample_datetime,
977  			   rd.dcm_time,  rv.VALUE_TEXT
978  		      FROM dcms 	 d,
979  			   received_dcms rd,
980  			   dcm_questions dp,
981  			   dcm_questions dv,
982  			   responses	 rv,
983  			   responses	 rp
984  		     WHERE d.DOMAIN=n.OC_STUDY
985  		       AND d.NAME=n.OC_LAB_PANEL
986  		       AND d.SUBSET_NAME=n.OC_LAB_SUBSET
987  		       and d.CLINICAL_STUDY_ID =rd.CLINICAL_STUDY_ID
988  		     AND d.dcm_id=rd.dcm_id
989  		     AND d.DCM_SUBSET_SN=rd.DCM_SUBSET_SN
990  		     AND d.dcm_layout_sn=rd.DCM_LAYOUT_SN
991  		     and rd.patient = n.oc_patient_pos
992  		     AND rd.DCM_DATE=TO_CHAR(TO_DATE(n.SAMPLE_DATETIME,'mmddrrhh24mi'),'yyyymmdd') -- change yy to rr
993  		     AND rd.DCM_TIME=SUBSTR(n.SAMPLE_DATETIME,7)||'00'
994  		     AND dp.DCM_ID=d.dcm_id
995  		     AND dp.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
996  		     AND dp.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
997  		     AND dp.QUESTION_NAME='LPARM'
998  		     and rp.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
999  		     AND rp.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
1000 		     AND rp.DCM_QUESTION_ID=dp.DCM_QUESTION_ID
1001 		     AND rp.VALUE_TEXT=n.OC_LAB_QUESTION
1002 		     AND dv.DCM_ID=d.dcm_id
1003 		     AND dv.DCM_QUE_DCM_SUBSET_SN=d.DCM_SUBSET_SN
1004 		     AND dv.DCM_QUE_DCM_LAYOUT_SN=d.DCM_LAYOUT_SN
1005 		     AND dv.QUESTION_NAME='LVALUE'
1006 		     and rv.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
1007 		     AND rv.RECEIVED_DCM_ID=rd.RECEIVED_DCM_ID
1008 		     AND rv.DCM_QUESTION_ID=dv.DCM_QUESTION_ID
1009 		     AND rv.VALUE_TEXT=n.RESULT
1010 		     AND rv.REPEAT_SN=rp.REPEAT_SN
1011 		     and Rp.END_TS = to_date(3000000, 'J')
1012 		     and Rv.END_TS = to_date(3000000, 'J'));
1013 
1014 	 Log_Util.LogMessage('UABL - '||to_char(SQL%RowCount)||' rows successfully marked as Loaded as Updates and verified (W).');
1015 
1016 	 Commit;
1017 
1018 	 Log_Util.LogMessage('UABL - Finished Update_After_Batch_Load.');
1019 
1020   End; -- Update_After_Batch_Load
1021 
1022 Procedure Check_SubEvent_Numbers is
1023   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1024   /*     Author: Patrick Conrad- Ekagra Software Technologies				*/
1025   /*	Date: 08/22/03									*/
1026   /*Description: THis procedure checks each lab that is to be loaded, to ensure that it has*/
1027   /*	      room to load within the DCM/Subevent notation.  Each DCM has a date/time	*/
1028   /*	      that relates to a SubEvent Number.  This procedure marks those labs that	*/
1029   /*	      would cause the subevent number to hit 95 or higher.  99 is the breaking	*/
1030   /*	      point of SubEvent within the System.					*/
1031   /*  Modification History 								*/
1032   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
1033   /* Author: Patrick Conrad- Ekagra Software Technologies					*/
1034   /*   Date: 08/28/03									*/
1035   /*    Mod: Changed patient,study,lab query to only return 1 row.  Also added When Others */
1036   /*	  exception to catch unexpected errors. 					*/
1037   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
1038   /* Author: Patrick Conrad- Ekagra Software Technologies					*/
1039   /*   Date: 08/29/04									*/
1040   /*    Mod: Altered SubEvent Checking to now after filling a visit, the next visit is	*/
1041   /*	  found, and the subevents start again.  This now allows for subevents for fill */
1042   /*	  above 95, by going to the next event (visit). 				*/
1043   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1044 	   v_errm	   Varchar2(100);
1045 	   V_Max_SubeventN Number;
1046 	   v_dummy	   varchar2(1);
1047 	   v_hold_event    varchar2(20);
1048 	   v_hold_dsn	   number;
1049 	   d_hold_event    varchar2(20);
1050 
1051 	   Cursor Get_Event (in_study varchar2, in_Panel varchar2, in_Subset Varchar2) is
1052 	      select distinct CPE_NAME, display_sn
1053 		from nci_study_ALL_dcms_events_vw C
1054 	       where c.oc_study = in_study
1055 		 and c.DCM_name = in_panel
1056 		 and C.Subset_name = in_subset
1057 		 order by display_sn;
1058 
1059 	Begin
1060 	 If Log_Util.Log$LogName is null Then
1061 	    Log_Util.LogSetName('CHCKSUBEVNT_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
1062 	 End If;
1063 
1064 	 Log_Util.LogMessage('CHKSUBEVNT - Check SubEvent Numbers Starting');
1065 
1066 	   -- Primary Loop; Get all Distinct Study,patient,labs that will load.
1067 	   For Cr1 in
1068 	      (select Distinct a.oc_study, b.clinical_study_id, a.oc_patient_pos,
1069 			       a.oc_lab_panel, a.oc_lab_subset
1070 		 from nci_labs a
1071 		      ,clinical_studies b
1072 		where b.study = a.OC_STUDY
1073 		  and a.load_flag IN ('L')) Loop
1074 
1075 	      Open Get_event(Cr1.clinical_study_id, Cr1.OC_Lab_Panel, Cr1.OC_Lab_Subset);
1076 
1077 	      v_max_subEventN := 100;
1078 
1079 	      -- Secondary Loop; Get all distinct dates for the Study,Patient,Lab
1080 	      For Cr2 in (select distinct sample_datetime
1081 			    from nci_labs a
1082 			   where oc_study	= cr1.oc_study
1083 			     and oc_patient_pos = cr1.oc_patient_pos
1084 			     and oc_lab_panel	= cr1.oc_lab_panel
1085 			     and oc_lab_subset	= cr1.oc_lab_subset
1086 			     and load_flag in ('L')
1087 			  ) Loop
1088 
1089 		 Begin
1090 		    -- Does this study,patient,lab exist in OC for this date
1091 		    -- This checks the ACTIVE record
1092 		    Select CLIN_PLAN_EVE_NAME
1093 		      into d_hold_event
1094 		      from received_dcms a,
1095 			   dcms b
1096 		     where a.dcm_id = b.dcm_id
1097 		       and a.DCM_SUBSET_SN = b.DCM_SUBSET_SN	     -- prc 04/08/04: Added Subset
1098 		       and a.DCM_layout_SN = b.DCM_layout_SN	     -- prc 10/20/04
1099 		       and b.subset_name = cr1.oc_lab_subset	     -- prc 04/08/04: Added Subset
1100 		       and a.patient = Cr1.oc_patient_pos
1101 		       and a.clinical_study_id = cr1.Clinical_study_id
1102 		       and b.name = cr1.oc_lab_panel
1103 		       and substr(dcm_date,5,2)||substr(dcm_date,7,2)||substr(dcm_date,3,2)||
1104 			   substr(nvl(dcm_time,'000000'),1,4) = cr2.sample_datetime
1105 		       and a.END_TS = to_date(3000000, 'J');
1106 
1107 		    UPDATE NCI_LABS N
1108 		       SET OC_LAB_EVENT = d_hold_Event
1109 		     WHERE oc_study = cr1.oc_study
1110 		       and oc_patient_pos = cr1.oc_patient_pos
1111 		       and oc_lab_panel = cr1.oc_lab_panel
1112 		       and oc_lab_subset= cr1.oc_lab_subset
1113 		       and sample_datetime = cr2.sample_datetime
1114 		       and load_flag in ('L');
1115 
1116 
1117 		 Exception
1118 		    When No_data_Found Then
1119 		       Begin
1120 			  -- Check again to see if the Sample Date once existed and was soft-deleted
1121 			  -- pick the first EVENT where it was soft-deleted.
1122 			  Select distinct CLIN_PLAN_EVE_NAME
1123 			    into d_hold_event
1124 			    from received_dcms a,
1125 				 dcms b,
1126 				 NCI_STUDY_ALL_DCMS_EVENTS_VW c
1127 			   where a.dcm_id = b.dcm_id
1128 			     and a.DCM_SUBSET_SN = b.DCM_SUBSET_SN
1129 			     and a.DCM_layout_SN = b.DCM_layout_SN
1130 			     and b.subset_name = cr1.oc_lab_subset
1131 			     and a.patient = Cr1.oc_patient_pos
1132 			     and a.clinical_study_id = cr1.Clinical_study_id
1133 			     and b.name = cr1.oc_lab_panel
1134 			     and substr(dcm_date,5,4)||substr(dcm_date,3,2)||
1135 				 substr(nvl(dcm_time,'000000'),1,4) = cr2.sample_datetime
1136 			     and c.OC_STUDY = a.clinical_study_id
1137 			     and c.dcm_name = b.name
1138 			     and c.subset_name = b.SUBSET_NAME
1139 			     and c.cpe_name = a.clin_plan_eve_name
1140 			     and c.display_sn = (select min(c.display_sn)
1141 						   from received_dcms a,
1142 							dcms b,
1143 							NCI_STUDY_ALL_DCMS_EVENTS_VW c
1144 						  where a.dcm_id = b.dcm_id
1145 						    and a.DCM_SUBSET_SN = b.DCM_SUBSET_SN
1146 						    and a.DCM_layout_SN = b.DCM_layout_SN
1147 						    and b.subset_name = cr1.oc_lab_subset
1148 						    and a.patient = Cr1.oc_patient_pos
1149 						    and a.clinical_study_id = cr1.Clinical_study_id
1150 						    and b.name = cr1.oc_lab_panel
1151 						    and substr(dcm_date,5,4)||substr(dcm_date,3,2)||
1152 							substr(nvl(dcm_time,'000000'),1,4) = cr2.sample_datetime
1153 						    and c.OC_STUDY = a.clinical_study_id
1154 						    and c.dcm_name = b.name
1155 						    and c.subset_name = b.SUBSET_NAME
1156 						    and c.cpe_name = a.clin_plan_eve_name);
1157 
1158 			  UPDATE NCI_LABS N
1159 			     SET OC_LAB_EVENT = d_hold_Event
1160 			   WHERE oc_study = cr1.oc_study
1161 			     and oc_patient_pos = cr1.oc_patient_pos
1162 			     and oc_lab_panel = cr1.oc_lab_panel
1163 			     and oc_lab_subset= cr1.oc_lab_subset
1164 			     and sample_datetime = cr2.sample_datetime
1165 			     and load_flag in ('L');
1166 
1167 		       Exception
1168 			  When no_data_found then
1169 			     -- This will cause a new event when above select has no data
1170 			     If v_max_SubEventN < 95 Then
1171 
1172 				-- Increment the max Subevent incase there are more labs for patient
1173 				v_max_subEventN := v_Max_SubEventN + 1;
1174 
1175 				-- Set the Event in the Lab Record.
1176 				UPDATE NCI_LABS N
1177 				   SET OC_LAB_EVENT = v_hold_Event
1178 				 WHERE oc_study = cr1.oc_study
1179 				   and oc_patient_pos = cr1.oc_patient_pos
1180 				   and oc_lab_panel = cr1.oc_lab_panel
1181 				   and oc_lab_subset= cr1.oc_lab_subset
1182 				   and sample_datetime = cr2.sample_datetime
1183 				   and load_flag in ('L');
1184 
1185 			     Else
1186 
1187 				Loop
1188 
1189 				   Fetch Get_Event Into v_Hold_Event, v_hold_dsn;
1190 				   If Get_Event%NOTFOUND Then
1191 
1192 				       Log_Util.LogMessage('CHKSUBEVNT - SubEvent error:"'||cr1.OC_STUDY||'/'||
1193 							    cr1.oc_patient_pos||'/'||cr1.oc_lab_panel||'/'||
1194 							    cr1.oc_lab_subset||'/'||cr2.sample_datetime||'.');
1195 
1196 				      UPDATE NCI_LABS N
1197 					 SET Load_Flag = 'E', Error_Reason = 'SubEvent Has Reached 95+.  Lab Not Loaded.',
1198 					     OC_LAB_EVENT = v_Hold_Event
1199 				       WHERE oc_study = cr1.oc_study
1200 					 and oc_patient_pos = cr1.oc_patient_pos
1201 					 and oc_lab_panel = cr1.oc_lab_panel
1202 					 and oc_lab_subset= cr1.oc_lab_subset
1203 					 and sample_datetime = cr2.sample_datetime
1204 					 and load_flag in ('L');
1205 
1206 				       Log_Util.LogMessage('CHKSUBEVNT - '||to_char(SQL%RowCount)||
1207 							   ' rows marked with "SubEvent" Error.');
1208 				       Exit;
1209 
1210 				   End If;
1211 
1212 				   -- Check the current maximum SubEvent Number
1213 				   select nvl(max(subevent_number),0)
1214 				     into v_max_SubEventN
1215 				     from received_dcms a,
1216 					  dcms b
1217 				    where a.dcm_id = b.dcm_id
1218 				      and a.DCM_SUBSET_SN = b.DCM_SUBSET_SN	       -- prc 04/08/04: Added Subset
1219 				      and a.DCM_layout_SN = b.DCM_layout_SN	    -- prc 10/20/04
1220 				      and b.subset_name = cr1.oc_lab_subset	       -- prc 04/08/04: Added Subset
1221 				      and a.patient = cr1.oc_patient_pos
1222 				      and a.clinical_study_id = cr1.Clinical_study_id
1223 				      and b.name = cr1.oc_lab_panel
1224 				      and a.CLIN_PLAN_EVE_NAME = v_Hold_Event;
1225 
1226 
1227 				   Exit When v_max_subEventN < 95;
1228 
1229 				   Log_Util.LogMessage('CHKSUBEVNT - Bumped beyond Next Event('||v_hold_Event||')'||
1230 							cr1.OC_STUDY||'/'||cr1.oc_patient_pos||'/'||
1231 							cr1.oc_lab_panel||'/'||cr1.oc_lab_subset||'/'||cr2.sample_datetime||'.');
1232 
1233 				End Loop;
1234 
1235 				If v_max_SubEventN < 95 Then
1236 				   -- Increment the max Subevent incase there are more labs for patient
1237 				   v_max_subEventN := v_Max_SubEventN + 1;
1238 
1239 				   -- Set the Event in the Lab Record.
1240 				   UPDATE NCI_LABS N
1241 				      SET OC_LAB_EVENT = v_hold_Event
1242 				    WHERE oc_study = cr1.oc_study
1243 				      and oc_patient_pos = cr1.oc_patient_pos
1244 				      and oc_lab_panel = cr1.oc_lab_panel
1245 				      and oc_lab_subset= cr1.oc_lab_subset
1246 				      and sample_datetime = cr2.sample_datetime
1247 				      and load_flag in ('L');
1248 
1249 				   -- Log_Util.LogMessage('SUBEVNTCHCK - Bumped to Next Event('||v_hold_Event||')'||
1250 				   --		    cr1.OC_STUDY||'/'||cr1.oc_patient_pos||'/'||
1251 				   --		    cr1.oc_lab_panel||'/'||cr1.oc_lab_subset||'/'||cr2.sample_datetime||'.');
1252 
1253 				End If;
1254 			     End If;
1255 			  When Others Then -- prc 08/28/03 added When others exception
1256 			     Log_Util.LogMessage('CHKSUBEVNT - Error For"'||
1257 						  cr1.OC_STUDY||'('||CR1.clinical_study_id||')/'||cr1.oc_patient_pos||'/'||
1258 						  cr1.oc_lab_panel||'/'||cr1.oc_lab_subset||'/'||cr2.sample_datetime||'.');
1259 			     Log_Util.LogMessage('Error Encountered: ' || SQLCODE);
1260 			     Log_Util.LogMessage('Error Message: ' || SQLERRM);
1261 			     v_errm := substr(sqlerrm,1,100);
1262 
1263 			     UPDATE NCI_LABS N
1264 				SET LOAD_FLAG = 'E', ERROR_REASON = substr(v_errm,1,30)
1265 			      WHERE oc_study = cr1.oc_study
1266 				and oc_patient_pos = cr1.oc_patient_pos
1267 				and oc_lab_panel = cr1.oc_lab_panel
1268 				and oc_lab_subset= cr1.oc_lab_subset
1269 				and sample_datetime = cr2.sample_datetime
1270 				and load_flag in ('L');
1271 
1272 			     Log_Util.LogMessage('CHKSUBEVNT - '||to_char(SQL%RowCount)||' rows marked with "OTHER" Error.');
1273 
1274 		       End;
1275 		 End;
1276 	      End Loop;
1277 
1278 	      Close Get_Event;
1279 
1280 	   End Loop;
1281 
1282 	   Log_Util.LogMessage('CHKSUBEVNT - Check SubEvent Numbers Finished.');
1283 
1284 	End; -- Check_SubEvent_NUmbers
1285 
1286   Function pull_latest_labs Return Number IS
1287   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1288   /*  Modification History 							    */
1289   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
1290   /* Author: Patrick Conrad- Ekagra Software Technologies				    */
1291   /*   Date: 08/28/03								    */
1292   /*    Mod: Altered processing.  If primary select finds no candidates to execute, the*/
1293   /*	  process stops.							    */
1294   /*  PRC 03/03/2004: 1) Changed primary select.  Sybase Link no longer exists.  Data  */
1295   /*		   is uploaded to NCI_UPLOAD_SYBASE_LAB_RESULTS, and the query now  */
1296   /*		   runs against it.						    */
1297   /*										    */
1298   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1299 	  v_rcount  number := 0;  -- prc 08/28/03
1300 
1301   BEGIN
1302 	  Log_Util.LogMessage('PLL - Beginning "PULL_LATEST_LABS".');
1303 
1304 	  -- Load Prospect Data from the FTPed CDW Data Dump File
1305 	  Log_Util.LogMessage('PLL - About to call "cdw_load_lab_FTPdata.Load_Flat_File"');
1306 	  cdw_load_lab_FTPdata.Load_Flat_File;
1307 
1308 	  Begin
1309 	     INSERT INTO cdw_lab_results
1310 		    (RESULT_ID
1311 		    ,PATIENT_ID
1312 		    ,RECORD_DATETIME
1313 		    ,TEST_ID
1314 		    ,TEST_CODE
1315 		    ,TEST_NAME
1316 		    ,TEST_UNIT
1317 		    ,ORDER_ID
1318 		    ,PARENT_TEST_ID
1319 		    ,ORDER_NUMBER
1320 		    ,ACCESSION
1321 		    ,TEXT_RESULT
1322 		    ,NUMERIC_RESULT
1323 		    ,HI_LOW_FLAG
1324 		    ,UPDATED_FLAG
1325 		    ,LOW_RANGE
1326 		    ,HIGH_RANGE
1327 		    ,REPORTED_DATETIME
1328 		    ,RECEIVED_DATETIME
1329 		    ,COLLECTED_DATETIME
1330 		    ,MASKED
1331 		    ,RANGE
1332 		    ,SPECIMEN_ID
1333 		    ,SPECIMEN_MODIFIER_ID
1334 		    ,QUALITATIVE_DICT_ID
1335 		    ,INSERTED_DATETIME
1336 		    ,UPDATE_DATETIME
1337 		    ,LOAD_FLAG
1338 		    ,LOAD_DATE)
1339 	     select Result_Id
1340 		    ,Patient_id
1341 		    ,Record_DateTime
1342 		    ,Test_id
1343 		    ,Test_Code
1344 		    ,test_name
1345 		    ,test_unit
1346 		    ,Order_Id
1347 		    ,parent_test_id
1348 		    ,order_number
1349 		    ,accession
1350 		    ,text_result
1351 		    ,numeric_result
1352 		    ,hi_low_flag
1353 		    ,updated_flag
1354 		    ,low_range
1355 		    ,high_range
1356 		    ,Reported_Datetime
1357 		    ,Received_Datetime
1358 		    ,Collected_Datetime
1359 		    ,masked
1360 		    ,range
1361 		    ,specimen_id
1362 		    ,specimen_modifier_id
1363 		    ,qualitative_dict_id
1364 		    ,Inserted_Datetime
1365 		    ,update_datetime
1366 		    ,'N'
1367 		    ,sysdate
1368 	       from NCI_UPLOAD_SYBASE_LAB_RESULTS;
1369 
1370 	  Exception
1371 	     When Others Then
1372 		Log_Util.LogMessage('PLL - PRIMINS - Error Encountered: ' || SQLCODE);
1373 		Log_Util.LogMessage('PLL - PRIMINS - Error Message: ' || SQLERRM);
1374 
1375 	  End;
1376 	  v_rcount := SQL%RowCount;
1377 
1378 	  Commit;
1379 
1380 	  Log_Util.LogMessage('PLL - '||to_char(v_rcount)||' rows inserted into "cdw_lab_results" from "NCI_UPLOAD_SYBASE_LAB_RESULTS".');
1381 	  Log_Util.LogMessage('PLL - Completed execution of Primary Select');
1382 
1383 	  Log_Util.LogMessage('PLL - Finished "PULL_LATEST_LABS"');
1384 
1385 	  Return v_Rcount;
1386 
1387   END pull_latest_labs;
1388 
1389   Function pull_missed_labs Return Number IS
1390   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1391   /*  Modification History 							    */
1392   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
1393   /* Author: Patrick Conrad- Ekagra Software Technologies				    */
1394   /*   Date: 08/02/06								    */
1395   /*   Desc: The function will check the Current Lab Results table and copy any missed */
1396   /*	  records into the CDW_LAB_RESULTS table.  Records are normally copied to   */
1397   /*	  the table based upon dates.  This routine copies records based upon the   */
1398   /*	  field RESULT_ID.							    */
1399   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1400 	  v_rcount  number := 0;
1401 
1402   BEGIN
1403 	  Log_Util.LogMessage('PML - Beginning "PULL_MISSED_LABS".');
1404 
1405 	  Log_Util.LogMessage('PML - Beginning Primary INSERT');
1406 
1407 	  Begin
1408 	     INSERT INTO cdw_lab_results
1409 		    (RESULT_ID
1410 		    ,PATIENT_ID
1411 		    ,RECORD_DATETIME
1412 		    ,TEST_ID
1413 		    ,TEST_CODE
1414 		    ,TEST_NAME
1415 		    ,TEST_UNIT
1416 		    ,ORDER_ID
1417 		    ,PARENT_TEST_ID
1418 		    ,ORDER_NUMBER
1419 		    ,ACCESSION
1420 		    ,TEXT_RESULT
1421 		    ,NUMERIC_RESULT
1422 		    ,HI_LOW_FLAG
1423 		    ,UPDATED_FLAG
1424 		    ,LOW_RANGE
1425 		    ,HIGH_RANGE
1426 		    ,REPORTED_DATETIME
1427 		    ,RECEIVED_DATETIME
1428 		    ,COLLECTED_DATETIME
1429 		    ,MASKED
1430 		    ,RANGE
1431 		    ,SPECIMEN_ID
1432 		    ,SPECIMEN_MODIFIER_ID
1433 		    ,QUALITATIVE_DICT_ID
1434 		    ,INSERTED_DATETIME
1435 		    ,UPDATE_DATETIME
1436 		    ,LOAD_FLAG
1437 		    ,LOAD_DATE)
1438 	     select Result_Id
1439 		    ,MPI
1440 		    ,Date_Time
1441 		    ,Test_id
1442 		    ,Test_Code
1443 		    ,test_name
1444 		    ,test_unit
1445 		    ,Order_Id
1446 		    ,parent_test_id
1447 		    ,order_number
1448 		    ,accession
1449 		    ,text_result
1450 		    ,numeric_result
1451 		    ,hi_low_flag
1452 		    ,updated_flag
1453 		    ,low_range
1454 		    ,high_range
1455 		    ,Reported_Datetime
1456 		    ,Received_Datetime
1457 		    ,Collected_Datetime
1458 		    ,masked
1459 		    ,range
1460 		    ,specimen_id
1461 		    ,specimen_modifier_id
1462 		    ,qualitative_dict_id
1463 		    ,Inserted_Datetime
1464 		    ,update_datetime
1465 		    ,'N'
1466 		    ,sysdate
1467 	      from mis_lab_results_current a
1468 	       where exists (select 'X' from NCI_LAB_VALID_PATIENTS b
1469 			      where a.MPI = b.pt_id)
1470 		 and not exists (select 'X' from CDW_LAB_RESULTS c
1471 		     where a.result_id = c.result_id);
1472 
1473 	  Exception
1474 	     When Others Then
1475 		Log_Util.LogMessage('PML - INSERT - Error Encountered: ' || SQLCODE);
1476 		Log_Util.LogMessage('PML - INSERT - Error Message: ' || SQLERRM);
1477 
1478 	  End;
1479 	  v_rcount := SQL%RowCount;
1480 
1481 	  Commit;
1482 
1483 	  Log_Util.LogMessage('PML - '||to_char(v_rcount)||' rows inserted into "cdw_lab_results" from "MIS_LAB_RESULTS_CURRENT".');
1484 
1485 	  Log_Util.LogMessage('PML - Finished "PULL_MISSED_LABS"');
1486 
1487 	  Return v_Rcount;
1488 
1489   END pull_missed_labs;
1490 
1491   Procedure Populate_Study_Patient Is
1492 	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1493 	 /* Author: Patrick Conrad- Ekagra Software Technologies			      */
1494 	 /*   Date: 02/06/2006								      */
1495 	 /*  Descr: UNION VIEW REPLACEMENT						      */
1496 	 /*	    The procedure was created to replace the Patient_ID Union View	      */
1497 	 /*	    This procedure will populate the table nci_study_patient_ids with pt_id   */
1498 	 /*	    and nci_inst_cd by querying the C3D responses table for the "question"    */
1499 	 /*	    that each study uses for PT_ID and NCI_INST_CD.			      */
1500 	 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
1501 	 /* Modification History:							      */
1502 	 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1503 
1504 	  X_Cnt   Number;
1505 	  V_Hold_Statement Varchar2(100);
1506 
1507   Begin
1508 	  If Log_Util.Log$LogName is null Then
1509 	     Log_Util.LogSetName('POPSTUDPAT_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
1510 	  End If;
1511 
1512 	  Log_Util.LogMessage('PSP - Starting: Populate_Study_Patient');
1513 
1514 	  Log_Util.LogMessage('PSP - About to truncate table NCI_STUDY_PATIENT_IDS.');
1515 
1516 	  --Remove data from last run.	"TRUNCATE" cannot be directly in PL/SQL, so execute the statement.
1517 	  v_Hold_statement := 'Truncate table nci_study_patient_ids';
1518 
1519 	  execute immediate v_hold_statement;
1520 
1521 	  Log_Util.LogMessage('PSP - Table Truncated.');
1522 
1523 
1524 	  Log_Util.LogMessage('PSP - Beginning Primary Insertion Loop.');
1525 	  -- For every study, that has patients, that have data;
1526 	  -- 1st: For every defined study in the control table, use that studies controls
1527 	  -- 2nd: For every study not specifical in the control table  use the default controls
1528 	  For X_Rec in (select s.study, s.clinical_study_id, b.patient_id_dcm_name, b.patient_id_quest_name
1529 			  from clinical_studies s,
1530 			       nci_study_patient_ids_ctl b
1531 			 where s.study = b.oc_study
1532 			   and exists (select * from patient_positions d
1533 					where d.CLINICAL_STUDY_ID = s.CLINICAL_STUDY_ID
1534 					  and d.has_data_flag <> 'N')
1535 			UNION
1536 			select s.study, s.clinical_study_id, b.patient_id_dcm_name, b.patient_id_quest_name
1537 			  from clinical_studies s,
1538 			       nci_study_patient_ids_ctl b
1539 			 where b.oc_study = 'ALL'
1540 			   and not exists (select 'X' from nci_study_patient_ids_ctl c
1541 					    where s.study = c.oc_study)
1542 			   and exists (select * from patient_positions d
1543 					where D.CLINICAL_STUDY_ID = s.CLINICAL_STUDY_ID
1544 					  and d.has_data_flag <> 'N') ) Loop
1545 
1546 	     Begin
1547 		-- Insert each Study / Patient found into the study patient table, using each studies definition for
1548 		-- the location of the patient id question in C3D. Get the REPEAT_SN so that question group can
1549 		-- be matched up later when getting NCI_INST_CD
1550 		-- Note: Get what the user entered even if it causes and exception.
1551 		Insert into nci_study_patient_ids (OC_STUDY, OC_PATIENT_POS, PT_ID_FUL, REPEAT_SN)
1552 		SELECT X_Rec.Study, rd.patient, nvl(r1.exception_value_text, r1.value_text), r1.repeat_sn
1553 		  FROM DCMS D, DCM_QUESTIONS Q, RECEIVED_DCMS RD, RESPONSES R1
1554 		 WHERE D.NAME = X_Rec.Patient_id_dcm_name
1555 		   AND D.DCM_STATUS_CODE = 'A'
1556 		   AND D.CLINICAL_STUDY_ID = RD.CLINICAL_STUDY_ID
1557 		   and D.clinical_study_id = X_Rec.CLINICAL_STUDY_ID
1558 		   and D.DCM_ID = RD.DCM_ID
1559 		   AND d.dcm_subset_sn = rd.dcm_subset_sn
1560 		   and d.dcm_layout_sn = rd.dcm_layout_sn
1561 		   and D.DCM_ID = Q.DCM_ID
1562 		   AND q.dcm_que_dcm_subset_sn = d.dcm_subset_sn
1563 		   and q.dcm_que_dcm_layout_sn = d.dcm_layout_sn
1564 		   and R1.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
1565 		   and R1.RECEIVED_DCM_ID = RD.RECEIVED_DCM_ID
1566 		   AND R1.DCM_QUESTION_ID = Q.DCM_QUESTION_ID
1567 		   AND R1.END_TS = RD.END_TS
1568 		   AND R1.END_TS = to_date(3000000, 'J')
1569 		   AND Q.QUESTION_NAME = X_Rec.Patient_id_quest_name
1570 		   AND rtrim(nvl(r1.exception_value_text, r1.value_text)) is not null;
1571 
1572 	     -- If the INSERT can't, give an alert message, but keep going.
1573 	     Exception
1574 		When Others Then
1575 		   Log_Util.LogMessage('PSP - ERROR: During Insert into NCI_STUDY_PATIENT_IDS.');
1576 		   Log_Util.LogMessage('PSP - Error Code:    ' || SQLCODE);
1577 		   Log_Util.LogMessage('PSP - Error Message: ' || SQLERRM);
1578 		   Log_Util.LogMessage('PSP - Study="'||X_Rec.Study||'".');
1579 	     End;
1580 
1581 	  End Loop;
1582 	  Log_Util.LogMessage('PSP - Finished Primary Insertion Loop.');
1583 
1584 	  Select count(*) into X_Cnt from nci_study_patient_ids;
1585 	  Log_Util.LogMessage('PSP - '||to_Char(x_Cnt)||' record(s) inserted into NCI_STUDY_PATIENT_IDS.');
1586 
1587 	  Log_Util.LogMessage('PSP - Beginning NCI_INST_CD Update Loop.');
1588 
1589 	  -- For every record found from above
1590 	  -- 1st: For every defined study in the control table, use that studies controls
1591 	  -- 2nd: For every study not specifical in the control table  use the default controls
1592 	  For X_Rec in (select a.oc_study, a.oc_patient_pos, a.repeat_sn,
1593 			    b.nci_inst_cd_dcm_name, b.nci_inst_cd_quest_name
1594 		       from nci_study_patient_ids     a,
1595 			    nci_study_patient_ids_ctl b
1596 		      where a.oc_study = b.oc_study
1597 		     union
1598 		     select a.oc_study, a.oc_patient_pos, a.repeat_sn,
1599 			    b.nci_inst_cd_dcm_name, b.nci_inst_cd_quest_name
1600 		       from nci_study_patient_ids     a,
1601 			    nci_study_patient_ids_ctl b
1602 		      where b.oc_study = 'ALL'
1603 			and not exists (select 'X' from nci_study_patient_ids_ctl c
1604 					 where a.OC_study = c.oc_study)
1605 		     ) Loop
1606 
1607 	     Begin
1608 		-- Update each Study / Patient found above, using each studies definition for
1609 		-- the location of the institution code question in C3D.
1610 		-- Note: Get what the user entered even if it causes and exception.
1611 		Update nci_study_patient_ids
1612 		   set NCI_INST_CD_FUL = (SELECT nvl(r1.exception_value_text, r1.value_text)
1613 					    FROM DCMS D, DCM_QUESTIONS Q, RECEIVED_DCMS RD, RESPONSES R1
1614 					   WHERE D.NAME = X_Rec.NCI_INST_CD_DCM_NAME
1615 					     AND D.DCM_STATUS_CODE = 'A'
1616 					     AND D.CLINICAL_STUDY_ID = RD.CLINICAL_STUDY_ID
1617 					     and D.domain = X_Rec.OC_Study
1618 					     and D.DCM_ID = RD.DCM_ID
1619 					     AND d.dcm_subset_sn = rd.dcm_subset_sn
1620 					     and d.dcm_layout_sn = rd.dcm_layout_sn
1621 					     and D.DCM_ID = Q.DCM_ID
1622 					     AND q.dcm_que_dcm_subset_sn = d.dcm_subset_sn
1623 					     and q.dcm_que_dcm_layout_sn = d.dcm_layout_sn
1624 					     and R1.CLINICAL_STUDY_ID = rd.CLINICAL_STUDY_ID
1625 					     and R1.RECEIVED_DCM_ID = RD.RECEIVED_DCM_ID
1626 					     AND R1.DCM_QUESTION_ID = Q.DCM_QUESTION_ID
1627 					     AND R1.END_TS = RD.END_TS
1628 					     AND R1.END_TS = to_date(3000000, 'J')
1629 					     AND Q.QUESTION_NAME = X_Rec.NCI_INST_CD_quest_name
1630 					     and rd.patient = X_Rec.oc_patient_pos
1631 					     and r1.repeat_sn = X_REc.Repeat_sn)
1632 		 where oc_study       = X_Rec.OC_Study
1633 		   and oc_patient_pos = X_Rec.OC_Patient_Pos
1634 		   and repeat_sn      = X_Rec.Repeat_SN;
1635 
1636 		-- If the UPDATE doesn't, give an alert and continue.
1637 		Exception
1638 		   When Others Then
1639 		      Log_Util.LogMessage('PSP - ERROR: During Update for NCI_INST_CD.');
1640 		      Log_Util.LogMessage('PSP - Error Code:	' || SQLCODE);
1641 		      Log_Util.LogMessage('PSP - Error Message: ' || SQLERRM);
1642 		      Log_Util.LogMessage('PSP - Study="'||X_Rec.OC_Study||'";	'||
1643 					  'PatientPos="'||X_Rec.OC_Patient_Pos||'";  '||
1644 					  'RepeatSN="'||X_Rec.Repeat_SN||'".');
1645 		End;
1646 
1647 	  End Loop;
1648 	  Log_Util.LogMessage('PSP - Finished NCI_INST_CD Update Loop.');
1649 
1650 
1651 	  Log_Util.LogMessage('PSP - Beginning NCI_INST_CD CONST Update Loop.');
1652 
1653 	  -- For every record that does not have a NCI_ISNT_CD:
1654 	  -- 1st: Use the Studies define Constant unless it is null
1655 	  -- 2nd: Use the Default Constant, unless null, when the study is not specifically defined
1656 	  For X_Rec in (select a.oc_study, a.oc_patient_pos, a.repeat_sn,
1657 			       b.nci_inst_cd_const
1658 			  from nci_study_patient_ids	 a,
1659 			       nci_study_patient_ids_ctl b
1660 			 where a.oc_study = b.oc_study
1661 			   and b.nci_inst_cd_const is not null
1662 			   and a.nci_inst_cd_ful is null
1663 			union
1664 			select a.oc_study, a.oc_patient_pos, a.repeat_sn,
1665 			       b.nci_inst_cd_const
1666 			  from nci_study_patient_ids	 a,
1667 			       nci_study_patient_ids_ctl b
1668 			 where b.oc_study = 'ALL'
1669 			   and not exists (select 'X' from nci_study_patient_ids_ctl c
1670 					    where a.OC_study = c.oc_study)
1671 			  and b.nci_inst_cd_const is not null
1672 			  and a.nci_inst_cd_ful is null
1673 		       ) Loop
1674 
1675 	     Begin
1676 		-- Update each Study / Patient found above with the NCI_INST_CD Constant.
1677 		Update nci_study_patient_ids
1678 		   set NCI_INST_CD_FUL = X_Rec.Nci_inst_cd_const
1679 		 where oc_study       = X_Rec.OC_Study
1680 		   and oc_patient_pos = X_Rec.OC_Patient_Pos
1681 		   and repeat_sn      = X_Rec.Repeat_SN;
1682 
1683 	     -- If the UPDATE doesn't, give an alert and continue.
1684 	     Exception
1685 		When Others Then
1686 		   Log_Util.LogMessage('PSP - ERROR: During Update for NCI_INST_CD Constant.');
1687 		   Log_Util.LogMessage('PSP - Error Code:    ' || SQLCODE);
1688 		   Log_Util.LogMessage('PSP - Error Message: ' || SQLERRM);
1689 		   Log_Util.LogMessage('PSP - Study="'||X_Rec.OC_Study||'";  '||
1690 				       'PatientPos="'||X_Rec.OC_Patient_Pos||'";  '||
1691 				       'RepeatSN="'||X_Rec.Repeat_SN||'";  '||
1692 				       'Constant="'||X_Rec.Nci_inst_Cd_Const||'".');
1693 	     End;
1694 
1695 	  End Loop;
1696 	  Log_Util.LogMessage('PSP - Finished NCI_INST_CD CONST Update Loop.');
1697 
1698 	  Commit;
1699 
1700 	  Log_Util.LogMessage('PSP - Finished: Populate_Study_Patient');
1701 
1702   End Populate_Study_Patient;
1703 
1704   Procedure Pre_Load_Patients is
1705   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1706   /* Author: Patrick Conrad- Ekagra Software Technologies				    */
1707   /*   Date: 10/20/04								    */
1708   /*  Descr: The procedure was created to resolve the problem with querying against a  */
1709   /*	  view that has the tendacy to become invalid, due to is relying on $CURRENT*/
1710   /*	  views.								    */
1711   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
1712   /* Modification History: 							    */
1713   /* PRC 06/23/05 : Added variable and code to count records after insert into	    */
1714   /*		 NCI_LAB_VALID_PATIENTS 					    */
1715   /*		 Added Logging of Error Code and Message to Exception Section	    */
1716   /* PRC 02/07/06: Added call to Patient Study Populate, which builds a table of all   */
1717   /*		Study Patients that have PATEINT_IDs. Also corrected a small count  */
1718   /*		bug.								    */
1719   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1720 	  v_Hold_statement varchar2(300);
1721 	  X_cnt 	   Number;
1722 
1723   Begin
1724 	 Begin
1725 	    Log_Util.LogMessage('PLP - Starting: Pre Load Patients.');
1726 
1727 	    Log_Util.LogMessage('PLP - About to call Populate_Study_Patient'); -- prc 020706
1728 
1729 	    Populate_Study_Patient;					       -- prc 020706
1730 
1731 	    Log_Util.LogMessage('PLP - About to delete from NCI_LAB_VALID_PATIENTS.');
1732 
1733 	    Delete from NCI_LAB_VALID_PATIENTS;
1734 
1735 	    Log_Util.LogMessage('PLP - Deleted '||to_char(SQL%RowCount)||' records from NCI_LAB_VALID_PATIENTS');
1736 
1737 	    v_Hold_statement := 'INSERT INTO NCI_LAB_VALID_PATIENTS (PT_ID, PT, STUDY, NCI_INST_CD) '||
1738 				'select PT_ID, PT, STUDY, NCI_INST_CD from NCI_LAB_VALID_PATIENTS_VW';
1739 
1740 	    execute immediate v_hold_statement;
1741 
1742 	    Select count(*) into X_cnt from NCI_LAB_VALID_PATIENTS;
1743 
1744 	    Log_Util.LogMessage('PLP - Inserted '||to_char(X_Cnt)||' records into NCI_LAB_VALID_PATIENTS'); -- prc 020706
1745 
1746 	    For x_Rec in (select oc_study, Laboratory from NCI_LAB_LOAD_CTL
1747 			   where oc_study <> 'ALL'
1748 			     and Laboratory is not null) Loop
1749 
1750 	       Update NCI_LAB_VALID_PATIENTS
1751 		  set laboratory = X_Rec.Laboratory
1752 		where study = X_Rec.oc_Study;
1753 
1754 	       Log_Util.LogMessage('PLP - Updated '||to_char(SQL%RowCount)||' records with Laboratory '||
1755 				    X_REC.Laboratory||' for study '||X_Rec.oc_Study);
1756 
1757 	    End Loop;
1758 
1759 	    For x_Rec in (select oc_study, Laboratory from NCI_LAB_LOAD_CTL
1760 			   where oc_study = 'ALL'
1761 			     and Laboratory is not null) Loop
1762 
1763 	       Update NCI_LAB_VALID_PATIENTS
1764 		  set laboratory = X_Rec.Laboratory
1765 		where laboratory is null;
1766 
1767 	       Log_Util.LogMessage('PLP - Updated '||to_char(SQL%RowCount)||' records with default Laboratory '||
1768 				    X_REC.Laboratory);
1769 
1770 	    End Loop;
1771 
1772 	    Commit;
1773 	    Log_Util.LogMessage('PLP - Commit Complete.');
1774 
1775 	  Exception
1776 	    When Others Then
1777 	       Log_Util.LogMessage('PLP - ERROR DURING INSERT INTO NCI_LAB_VALID_PATIENTS. ROLLBACK OCCURRED.');
1778 	       Log_Util.LogMessage('PLP - Error Code:	 ' || SQLCODE);
1779 	       Log_Util.LogMessage('PLP - Error Message: ' || SQLERRM);
1780 	       Rollback;
1781 
1782 	  End;
1783 
1784 	  Log_Util.LogMessage('PLP - Finished: Pre Load Patients.');
1785 
1786 
1787   End Pre_Load_Patients;
1788 
1789   Function pull_Historical_labs_4(PatID in Varchar2) Return Number IS
1790   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1791   /* Author: Patrick Conrad- Ekagra Software Technologies				    */
1792   /*   Date: 08/28/03								    */
1793   /*  Descr: Pulls lab records from the Historical Lab Records Table		    */
1794   /*	  CTDEV.MIS_LAB_RESULT_HISTORY, and places them in the CDW_LAB_RESULTS table*/
1795   /*	  for processing.  By passing in the MPI (Patient_ID), only that patient's  */
1796   /*	  labs will be pulled.							    */
1797   /*	  This process is needed when the Lab Date is much earlier than expected,   */
1798   /*	  and not found in the Current Lab Results data set.			    */
1799   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1800 	  v_rcount  number := 0;
1801 
1802   BEGIN
1803 	  If Log_Util.Log$LogName is null Then
1804 	     Log_Util.LogSetName('PULLHISTLABS_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
1805 	  End If;
1806 
1807 	  Log_Util.LogMessage('PHL4 - Beginning "PULL_HISTORICAL_LABS_4".');
1808 	  Log_Util.LogMessage('PHL4 - Processing Patient ID "'||PatID||'".');
1809 
1810 	  If PatID is not null Then
1811 
1812 	     Log_Util.LogMessage('PHL4 - About to insert data for '||PatID||'.');
1813 
1814 	     Begin
1815 		INSERT INTO cdw_lab_results
1816 		       (RESULT_ID
1817 		       ,PATIENT_ID
1818 		       ,RECORD_DATETIME
1819 		       ,TEST_ID
1820 		       ,TEST_CODE
1821 		       ,TEST_NAME
1822 		       ,TEST_UNIT
1823 		       ,ORDER_ID
1824 		       ,PARENT_TEST_ID
1825 		       ,ORDER_NUMBER
1826 		       ,ACCESSION
1827 		       ,TEXT_RESULT
1828 		       ,NUMERIC_RESULT
1829 		       ,HI_LOW_FLAG
1830 		       ,UPDATED_FLAG
1831 		       ,LOW_RANGE
1832 		       ,HIGH_RANGE
1833 		       ,REPORTED_DATETIME
1834 		       ,RECEIVED_DATETIME
1835 		       ,COLLECTED_DATETIME
1836 		       ,MASKED
1837 		       ,RANGE
1838 		       ,SPECIMEN_ID
1839 		       ,SPECIMEN_MODIFIER_ID
1840 		       ,QUALITATIVE_DICT_ID
1841 		       ,INSERTED_DATETIME
1842 		       ,UPDATE_DATETIME
1843 		       ,LOAD_FLAG
1844 		       ,LOAD_DATE)
1845 		select Result_Id
1846 		       ,MPI
1847 		       ,Date_Time
1848 		       ,Test_id
1849 		       ,Test_Code
1850 		       ,test_name
1851 		       ,test_unit
1852 		       ,Order_Id
1853 		       ,parent_test_id
1854 		       ,order_number
1855 		       ,accession
1856 		       ,text_result
1857 		       ,numeric_result
1858 		       ,hi_low_flag
1859 		       ,updated_flag
1860 		       ,low_range
1861 		       ,high_range
1862 		       ,Reported_Datetime
1863 		       ,Received_Datetime
1864 		       ,Collected_Datetime
1865 		       ,masked
1866 		       ,range
1867 		       ,specimen_id
1868 		       ,specimen_modifier_id
1869 		       ,qualitative_dict_id
1870 		       ,Inserted_Datetime
1871 		       ,update_datetime
1872 		       ,'N'
1873 		       ,sysdate
1874 		  from MIS_LAB_RESULTS_HISTORY a
1875 		 where MPI = PatID
1876 		   and Not Exists (select '1' from CDW_LAB_RESULTS b
1877 				   where b.Result_ID = a.result_id);
1878 
1879 	     Exception
1880 		When Others Then
1881 		   Log_Util.LogMessage('PHL4 - PRIMINS - Error Encountered: ' || SQLCODE);
1882 		   Log_Util.LogMessage('PHL4 - PRIMINS - Error Message: ' || SQLERRM);
1883 
1884 	     End;
1885 	     v_rcount := SQL%RowCount;
1886 
1887 	     Commit;
1888 
1889 	     Log_Util.LogMessage('PHL4 - '||to_char(v_rcount)||' rows inserted into "cdw_lab_results" from "MIS_LAB_RESULTS_HISTORY".');
1890 	     Log_Util.LogMessage('PHL4 - Completed execution of Primary Insert');
1891 
1892 	     Log_Util.LogMessage('PHL4 - Finished "PULL_HISTORICAL_LABS_4"');
1893 	  Else
1894 	     Log_Util.LogMessage('PHL4 - Patient_ID (MPI) cannot be null.');
1895 	     v_RCount := 0;
1896 	  End If;
1897 
1898 	  Return v_Rcount;
1899 
1900   END pull_Historical_labs_4;
1901 
1902   Procedure Get_Process_Load_Labs(Process_Type in Varchar2 default 'FULL') Is
1903   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1904   /* This procedure is used to control the processing of Lab Loading.  This      */
1905   /* procedure accepts one parameter.  The parameter control which process of    */
1906   /* the lab loading process should be executed.				      */
1907   /* GET_PROC	  Get records from Flat Files (Sybase), process them up to the*/
1908   /*		  point of Batch Loading.  DO NOT BATCH LOAD.		      */
1909   /*		  DO NOT MARK FOR REVIEW				      */
1910   /* BATCH 	  Batch Load Records contained in NCI_LABS.		      */
1911   /*		  DO NOT GET RECORDS FROM FLAT FILES			      */
1912   /* FULL		  Get records from FLAT FILES, process them up to the point   */
1913   /*		  of Batch Loading, perform Batch Loading.		      */
1914   /* WAITING	  Only look at "NEW" records in NCI_LABS, and process them up */
1915   /*		  to the point of Batch Load, and Batch Load them.	      */
1916   /*		  DO NOT GET RECORDS FROM FLAT FILES.			      */
1917   /* GET_PROC_MARK   Get records from Flat Files, process them upto the point    */
1918   /*		  of Batch Loading, mark study records needing REVIEW.	      */
1919   /*		  DO NOT BATCH LOAD.					      */
1920   /* WAIT_PROC	  Only look at "NEW" records in NCI_LABS, and process them up */
1921   /*		  to the point of Batch Load.DO NOT BATCH LOAD. 	      */
1922   /*		  DO NOT MARK FOR REVIEW. DO NOT GET RECORDS FROM FLAT FILES. */
1923   /* WAIT_PROC_MARK  Only look at "NEW" records in NCI_LABS and process them up  */
1924   /*		  to the point of Batch Load.  Marm records for REVIEW.  DO   */
1925   /*		  NOT BATCH LOAD.  DO NOT GET RECORDS FROM FLAT FILES.	      */
1926   /*-----------------------------------------------------------------------------*/
1927   /* Modification History: 						      */
1928   /* PRC 08/19/04: Added Paramter to allow for running of 'NEW' items, without   */
1929   /*		loading addtional records. 'WAITING' is new parameter	      */
1930   /*-----------------------------------------------------------------------------*/
1931   /* PRC 10/19/04: Added Paramter to allow for running of 'NEW' items, without   */
1932   /*		loading addtional records, same as above, with the option to  */
1933   /*		only process upto and excluding the actual load.	      */
1934   /*		'WAIT_PROC' is new parameter				      */
1935   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
1936 
1937 	  v_MISCount	  Number := 0;
1938 	  v_MISCount2	  Number := 0;
1939 	  v_NEWCount	  Number := 0;
1940 	  v_JobNumber	  Number;
1941 	  v_Process_Type  Varchar2(20);
1942 
1943   Begin
1944 	  v_Process_Type := Substr(Upper(Process_Type),1,20);
1945 
1946 	  Log_Util.LogSetName('LABLOAD_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
1947 	  Log_Util.LogMessage('GPLL - Beginning "GET_PROCESS_LOAD_LABS".');
1948 	  Log_Util.LogMessage('GPLL - Processing Type is "'||v_Process_Type||'".');
1949 	  Commit;
1950 
1951 	  If v_Process_Type in ('GET_PROC','FULL', 'WAITING','WAIT_PROC', 'GET_PROC_MARK','WAIT_PROC_MARK') Then
1952 	     Pre_Load_Patients; -- prc 10/20/04
1953 	  End If;
1954 
1955 	  If v_Process_Type in ('GET_PROC', 'FULL', 'GET_PROC_MARK') Then
1956 
1957 	     -- Pull the MIS Labs from Flat Files.
1958 	     Log_Util.LogMessage('GPLL - About to call "cdw_data_transfer_v3.pull_latest_labs"');
1959 	     v_MISCount := Pull_Latest_labs;
1960 
1961 	     Log_Util.LogMessage('GPLL - Checking for Missed Result Ids'); -- prc 08/01/06
1962 	     v_MISCount2:= Pull_missed_labs;
1963 
1964 	     /* Moved up from below.*/
1965 	     Log_Util.LogMessage('GPLL - About to call "cdw_data_transfer.prepare_cdw_labs"');
1966 	     prepare_cdw_labs;
1967 
1968 	     Log_Util.LogMessage('GPLL - Latest Pull found '||to_Char(v_MISCOunt)||' record(s).');
1969 	  End If;
1970 
1971 	  If v_Process_Type in ('GET_PROC','FULL', 'WAITING','WAIT_PROC', 'GET_PROC_MARK','WAIT_PROC_MARK') Then
1972 
1973 	     Identify_Additional_Labs; -- prc 08/10/06: Additional records should be created, regardless of RAW.
1974 
1975 	     Select Count(*)
1976 	       into v_NEWCount
1977 	       from NCI_LABS
1978 	      where load_flag = 'N';
1979 
1980 	     Log_Util.LogMessage('GPLL - "NEW" NCI_LABS records to process '||to_Char(v_NewCount)||'.');
1981 
1982 	     If (v_MISCount+v_NEWCount) > 0 Then
1983 
1984 		-- moved up.  This should be with Flat file pull, since it only allpies to this.
1985 		-- Log_Util.LogMessage('GPLL - About to call "cdw_data_transfer.prepare_cdw_labs"');
1986 		-- prepare_cdw_labs;
1987 
1988 		Log_Util.LogMessage('GPLL - About to call "cdw_data_transfer.process_lab_data"');
1989 		process_lab_data;
1990 
1991 	     Else
1992 		Log_Util.LogMessage('GPLL - 0 candidate records in NCI_LABS.  Process Stopping.');
1993 	     End If;
1994 	  End If;
1995 
1996 	  If v_Process_Type in ('WAITING', 'FULL','GET_PROC_MARK','WAIT_PROC_MARK') Then
1997 
1998 	     Select Count(*)
1999 	       into v_NEWCount
2000 	       from NCI_LABS
2001 	      where load_flag in ('N','R');
2002 
2003 	     Log_Util.LogMessage('GPLL - "NEW" NCI_LABS records to process '||to_Char(v_NewCount)||'.');
2004 
2005 	     If (v_NEWCount) > 0 Then
2006 		Log_Util.LogMessage('GPLL - About to call "LLI_Processing".');
2007 		LLI_Processing;
2008 
2009 		-- Identify Updates to Loaded Records.
2010 		Log_Util.LogMessage('GPLL - About to call "FindandMark_Updates".');
2011 		FindandMark_Updates;
2012 
2013 		select count(*)
2014 		  into labs_count
2015 		  from NCI_LABS
2016 		 where load_flag in ('L'); -- 06/21/05 : LLI Process
2017 
2018 		Log_Util.LogMessage('GPLL - '||to_char(labs_Count)||' records ready for LOAD as NEW.');
2019 
2020 		select count(*)
2021 		  into labs_count
2022 		  from NCI_LABS
2023 		 where load_flag in ('S'); -- 08/18/06
2024 
2025 		Log_Util.LogMessage('GPLL - '||to_char(labs_Count)||' records ready for RELOAD for Soft-Deletes.');
2026 
2027 		select count(*)
2028 		  into labs_count
2029 		  from NCI_LABS
2030 		 where load_flag in ('W'); -- 08/17/05 : Update Records
2031 
2032 		Log_Util.LogMessage('GPLL - '||to_char(labs_Count)||' records ready for LOAD as UPDATES.');
2033 
2034 		select count(*)
2035 		  into labs_count
2036 		  from NCI_LABS
2037 		 where load_flag in ('R'); -- 06/21/05 : LLI Process
2038 
2039 		Log_Util.LogMessage('GPLL - '||to_char(labs_Count)||' records ready for REVIEW.');
2040 
2041 	     Else
2042 		Log_Util.LogMessage('GPLL - 0 candidate records in NCI_LABS.  Process Stopping.');
2043 	     End If;
2044 	  End If;
2045 
2046 
2047 	  If v_Process_type in ('FULL', 'WAITING') Then
2048 	     -- Check Count
2049 	     select count(*)
2050 	       into labs_count
2051 	       from NCI_LABS
2052 	      where load_flag in ('L');
2053 
2054 	     -- If there are Loadable Records, process them for Upload.
2055 	     If labs_count > 0 Then
2056 		Log_Util.LogMessage('GPLL - '||to_char(labs_Count)||' records need processed for Loading.');
2057 
2058 		-- Check for Updates within the Loadable Data
2059 		Log_Util.LogMessage('GPLL - Checking for Update records in the batch fo "To Load" Records.');
2060 		Flag_UPD_Lab_Results('L');
2061 		Log_Util.LogMessage('GPLL - Check.');
2062 
2063 		-- Check Maximum SubEvent Number.
2064 		Log_Util.LogMessage('GPLL ****** Starting Check SubEvent Numbers for all Loadable Labs.');
2065 		Check_SubEvent_Numbers;
2066 		Log_Util.LogMessage('GPLL ****** Finished Check SubEvent Numbers for all Loadable Labs.');
2067 
2068 		-- Commit
2069 		Commit;
2070 	     End If;
2071 
2072 	     Log_Util.LogMessage('GPLL - Processing LOAD and UPDATE records.');
2073 	     select count(*)
2074 	       into labs_count
2075 	       from NCI_LABS
2076 	      where load_flag in ('L', 'D', 'W', 'S'); -- prc 08/1806: Added 'S'
2077 
2078 	     Log_Util.LogMessage('GPLL - There are '||to_char(labs_count)||' lab records to Process for Loading.');
2079 
2080 	     If labs_count > 0 then
2081 
2082 		-- UPDATE RECORDS (Previously Loaded)
2083 		select count(*)
2084 		  into labs_count
2085 		  from NCI_LABS
2086 		 where load_flag in ('W');
2087 
2088 		 Log_Util.LogMessage('GPLL - There are '||to_char(labs_count)||' "UPDATE" lab records to Process.');
2089 
2090 		 If labs_count > 0 then
2091 		    Log_Util.LogMessage('GPLL - Checking for Multiple Update records in the batch of "Update" Records.');
2092 	       Flag_UPD_Lab_Results('W');
2093 	       Log_Util.LogMessage('GPLL - Check.');
2094 
2095 		    Log_Util.LogMessage('GPLL - Executing Update Existing - "load_lab_results_upd(W)".');
2096 		    DELETE FROM BDL_TEMP_FILES;
2097 		    Log_Util.LogMessage('GPLL - '||to_char(SQL%RowCount)||' rows deleted from "BDL_TEMP_FILES" prior to load.');
2098 		    load_lab_results_upd('W');
2099 		    Log_Util.LogMessage('GPLL - About to call "cdw_data_transfer_v3.Process_Batch_Load"');
2100 		    cdw_data_transfer_v3.Process_Batch_Load;
2101 		 End If;
2102 
2103 		-- RE-LOAD RECORDS (Soft-Deleted Reloads)
2104 		select count(*)
2105 		  into labs_count
2106 		  from NCI_LABS
2107 		 where load_flag in ('S');
2108 
2109 		 Log_Util.LogMessage('GPLL - There are '||to_char(labs_count)||' "Soft-Delete" lab records to reload.');
2110 
2111 		 If labs_count > 0 then
2112 		    Log_Util.LogMessage('GPLL - Checking for Update Records in the batch of "Soft-Delete" Records.');
2113 	       Flag_UPD_Lab_Results('S');
2114 	       Log_Util.LogMessage('GPLL - Check.');
2115 
2116 		    Log_Util.LogMessage('GPLL - Executing Update Existing - "load_lab_results(S)".');
2117 		    DELETE FROM BDL_TEMP_FILES;
2118 		    Log_Util.LogMessage('GPLL - '||to_char(SQL%RowCount)||' rows deleted from "BDL_TEMP_FILES" prior to load.');
2119 		    load_lab_results('S');
2120 		    Log_Util.LogMessage('GPLL - About to call "cdw_data_transfer_v3.Process_Batch_Load"');
2121 		    cdw_data_transfer_v3.Process_Batch_Load;
2122 		 End If;
2123 
2124 		-- NEW RECORDS
2125 		select count(*)
2126 		  into labs_count
2127 		  from NCI_LABS
2128 		 where load_flag in ('L');
2129 
2130 		 Log_Util.LogMessage('GPLL - There are '||to_char(labs_count)||' "NEW" lab records to Process.');
2131 
2132 		 If labs_count > 0 then
2133 		   Log_Util.LogMessage('GPLL - Executing NEW Record Load - "load_lab_results(L)".');
2134 		   DELETE FROM BDL_TEMP_FILES;
2135 		   Log_Util.LogMessage('GPLL - '||to_char(SQL%RowCount)||' rows deleted from "BDL_TEMP_FILES" prior to load.');
2136 		   load_lab_results('L');
2137 		   Log_Util.LogMessage('GPLL - About to call "cdw_data_transfer_v3.Process_Batch_Load"');
2138 		   cdw_data_transfer_v3.Process_Batch_Load;
2139 		End If;
2140 
2141 		Log_Util.LogMessage('GPLL - Processing Updates of Records found in current batch.');
2142 		-- The problem is that BDL does not like batch data files having more than one response for the same key.
2143 		-- To alleviate this problem, a study/patient/panel/sampledate time/lab test cannot be in a batch file
2144 		-- more than once.  This routine loops through all available records, making sure that there are no
2145 		-- duplicates in the batch to be process.  Records are processed in the order they are received.
2146 		Loop
2147 		   -- LOAD RECORDS (FOR NEWLY INSERTED ABOVE)
2148 		   select count(*)
2149 		     into labs_count
2150 		     from NCI_LABS
2151 		    where load_flag in ('D');
2152 
2153 		   exit when labs_count = 0;
2154 
2155 		   -- Set ALL Updates In batch to normal Update Status.
2156 		   Update nci_labs set load_flag = 'W' where Load_Flag = 'D';
2157 
2158 		   -- Check for Multiple Updates within the Update Records,  Any Multiple is set to 'D' for reprocessing
2159 		   -- while 'W' will fall through and process for loading.
2160 		   Log_Util.LogMessage('GPLL - Checking for Update records in the batch of "Update to New" Records.');
2161 		   Flag_UPD_Lab_Results('W');
2162 		   Log_Util.LogMessage('GPlL - Check Finsihed.');
2163 
2164 		   -- UPDATE RECORDS (FOR 'L','S', D' and 'W' records above)
2165 		   select count(*)
2166 		     into labs_count
2167 		     from NCI_LABS
2168 		    where load_flag in ('W');
2169 
2170 		   Log_Util.LogMessage('GPLL - There are '||to_char(labs_count)||' "UPDATES TO PROCESSED" lab records to Process.');
2171 
2172 		   If labs_count > 0 then
2173 		      Log_Util.LogMessage('GPLL - Loading Updates Existing in Batch - "load_lab_results(W)".');
2174 		      DELETE FROM BDL_TEMP_FILES;
2175 		      Log_Util.LogMessage('GPLL - '||to_char(SQL%RowCount)||' rows deleted from "BDL_TEMP_FILES" prior to load.');
2176 		      load_lab_results_upd('W');
2177 		      Log_Util.LogMessage('GPLL - About to call "cdw_data_transfer_v3.Process_Batch_Load"');
2178 		      cdw_data_transfer_v3.Process_Batch_Load;
2179 		   Else
2180 		      Exit;
2181 		   End If;
2182 		End Loop;
2183 
2184 	     Else
2185 		Log_Util.LogMessage('GPLL - There are no records in "NCI_LABS" to process for Loading.');
2186 	     End If;
2187 	  End If;
2188 
2189 	  If (v_Process_type ='BATCH') Then
2190 
2191 	     Log_Util.LogMessage('GPLL - About to call "cdw_data_transfer_v3.Process_Batch_Load"');
2192 	     cdw_data_transfer_v3.Process_Batch_Load;
2193 
2194 	  End If;
2195 
2196 	  /*
2197 	  If (V_Process_type in ('FULL','WAITING', 'BATCH')) Then
2198 
2199 	     Log_Util.LogMessage('GPLL - Sumbitting "ctvw_pkg.p_ct_data_dt"');	-- 01/23/04 now batch
2200 	     DBMS_JOB.Submit(v_jobnumber,'Begin ctvw_pkg.p_ct_data_dt; End;');	-- 01/23/04 now batch
2201 	     Log_Util.LogMessage('GPLL - Sumbitted "ctvw_pkg.p_ct_data_dt" Job Number='||v_jobnumber); -- 01/23/04 now batch
2202 
2203 	  End If;
2204 	  */
2205 
2206 	  If v_Process_Type not in ('GET_PROC','BATCH','FULL','WAITING','WAIT_PROC', 'GET_PROC_MARK','WAIT_PROC_MARK') Then
2207 	     Log_Util.LogMessage('GPLL - Invalid Processing type.  Choose "GET_PROC", "BATCH", "FULL", "WAITING", "WAIT_PROC"');
2208 	     Log_Util.LogMessage('GPLL -  "GET_PROC"	   - Get New Records from RAW data files, process data, DO NOT Batch Load into OC.');
2209 	     Log_Util.LogMessage('GPLL -  "GET_PROC_MARK"  - Get New Records from RAW data files, process data, mark for LLI, DO NOT Batch Load into OC.');
2210 	     Log_Util.LogMessage('GPLL -  "BATCH"	   - Batch Load into OC any existing records');
2211 	     Log_Util.LogMessage('GPLL -  "FULL"	   - Get New Records from RAW data File, process data, Batch Load into OC.');
2212 	     Log_Util.LogMessage('GPLL -  "WAITING"	   - DO NOT get New Records from Raw data files, process data, Batch Load into OC.');
2213 	     Log_Util.LogMessage('GPLL -  "WAIT_PROC"	   - DO NOT get New Records from Raw data files, process data, DO NOT Batch Load into OC.');
2214 	     Log_Util.LogMessage('GPLL -  "WAIT_PROC_MARK" - DO NOT get New Records from Raw data files, process data, mark for LLI, DO NOT Batch Load into OC.');
2215 	  End If;
2216 
2217 	  Log_Util.LogMessage('GPLL - Finished "GET_PROCESS_LOAD_LABS".');
2218 
2219 	  Commit;
2220 
2221   End Get_Process_Load_Labs;
2222 
2223   PROCEDURE prepare_cdw_labs IS
2224   BEGIN
2225 	 DECLARE
2226 
2227 	   curr_pt	     number(10);
2228 	   last_pt	     number(10);
2229 	   lab_count	     number(10);
2230 	   -- oc_pt		varchar2(10);  -- prc 09/30/05 removed per biopharm
2231 	   -- oc_study_dom	varchar2(15);  -- prc 09/30/05 removed per biopharm
2232 	   check_max	     char(1);
2233 	   -- prestudy_lab_date date;  -- prc 09/30/05 removed per biopharm
2234 	   -- pt_enrollment_dt	date;  -- prc 09/30/05 removed per biopharm
2235 
2236   /* -- Removed Cursor because it is no longer used...will delete later.
2237 	  -- PRC 09/30/05 per biopharm
2238 	  CURSOR c1 is
2239 	     SELECT PATIENT_ID
2240 		   ,RESULT_ID
2241 		   ,SUBSTR(COLLECTED_DATETIME, 1, 6) ||
2242 		    SUBSTR(COLLECTED_DATETIME, 8, 2) ||
2243 		    SUBSTR(COLLECTED_DATETIME, 11, 2) COLLECT_DATETIME
2244 		   ,to_date(SUBSTR(COLLECTED_DATETIME, 1, 6), 'MMDDRR') COLLECTION_DATE -- PRC Change YY to RR
2245 		   ,TEST_ID
2246 		   ,TEST_CODE
2247 		   ,'CDW' LABORATORY
2248 		   ,TEST_NAME
2249 		   ,TEXT_RESULT
2250 		   ,TEST_UNIT
2251 		   ,RANGE
2252 		   ,SYSDATE
2253 	       FROM CDW_LAB_RESULTS
2254 	      WHERE LOAD_FLAG = 'N'
2255 	      ORDER BY patient_id, collected_datetime, test_id, test_name;
2256 
2257 	   c1_record c1%ROWTYPE; */
2258 
2259 	 BEGIN
2260 	    last_pt   := null;
2261 	    curr_pt   := null;
2262 	    lab_count := 0;
2263 
2264 	    Log_Util.LogMessage('PCL - Beginning "PREPARE_CDW_LABS".');
2265 
2266 	    insert into NCI_LABS
2267 		       (PATIENT_ID
2268 			,CDW_RESULT_ID
2269 			,SAMPLE_DATETIME
2270 			,TEST_COMPONENT_ID
2271 			,TEST_CODE
2272 			,LABORATORY
2273 			,LABTEST_NAME
2274 			,RESULT
2275 			,UNIT
2276 			,NORMAL_VALUE
2277 			,RECEIVED_DATE)
2278 		 SELECT PATIENT_ID
2279 			,RESULT_ID
2280 			,SUBSTR(COLLECTED_DATETIME, 1, 6) ||
2281 			 SUBSTR(COLLECTED_DATETIME, 8, 2) ||
2282 			 SUBSTR(COLLECTED_DATETIME, 11, 2) COLLECT_DATETIME
2283 			,TEST_ID
2284 			,TEST_CODE
2285 			,'CDW' LABORATORY
2286 			,TEST_NAME
2287 			,TEXT_RESULT
2288 			,TEST_UNIT
2289 			,RANGE
2290 			,SYSDATE
2291 		   FROM CDW_LAB_RESULTS
2292 		  WHERE LOAD_FLAG = 'N';
2293 
2294 	     Log_Util.LogMessage(to_char(SQL%RowCount)||' records inserted into "NCI_LABS" from "CDW_LAB_RESULTS".');
2295 
2296 	    BEGIN
2297 
2298 	     begin
2299 	       DELETE FROM CDW_LAB_RESULTS WHERE LOAD_FLAG = 'E';
2300 	       Log_Util.LogMessage(to_char(SQL%RowCount)||' ERROR rows deleted from "CDW_LAB_RESULTS".');
2301 
2302 	     EXCEPTION
2303 	       WHEN NO_DATA_FOUND then
2304 		 null;
2305 	       when others then
2306 		 dbms_output.put_line('Error Encountered: ' || SQLCODE);
2307 		 dbms_output.put_line('Error Message: ' || SQLERRM);
2308 		 Log_Util.LogMessage('PCL - DELCDW - Error Encountered: ' || SQLCODE);
2309 		 Log_Util.LogMessage('PCL - DELCDW - Error Message: ' || SQLERRM);
2310 	     end;
2311 
2312 	     begin
2313 	       select count(*)
2314 		 into lab_count
2315 		 from cdw_lab_results
2316 		where load_flag = 'N';
2317 	     EXCEPTION
2318 	       WHEN NO_DATA_FOUND then
2319 		 null;
2320 	       when others then
2321 		 dbms_output.put_line('Error Encountered: ' || SQLCODE);
2322 		 dbms_output.put_line('Error Message: ' || SQLERRM);
2323 		 Log_Util.LogMessage('PCL - CNTCDW - Error Encountered: ' || SQLCODE);
2324 		 Log_Util.LogMessage('PCL - CNTCDW - Error Message: ' || SQLERRM);
2325 	     end;
2326 
2327 	     begin
2328 	       check_max := 'Y';
2329 	       select 'N'
2330 		 into check_max
2331 		 from CDW_LAB_RESULTS
2332 	       having max(to_date(inserted_datetime, 'MMDDRR hh24:MI:SS')) -- PRC 07/01/03 Changed from YY to RR
2333 			  <= (SELECT INSERTED_DATE FROM CDW_LAST_LOAD);
2334 	     EXCEPTION
2335 	       WHEN NO_DATA_FOUND then
2336 		 null;
2337 	       when others then
2338 		 dbms_output.put_line('Error Encountered: ' || SQLCODE);
2339 		 dbms_output.put_line('Error Message: ' || SQLERRM);
2340 		 Log_Util.LogMessage('PCL - CHKMAX - Error Encountered: ' || SQLCODE);
2341 		 Log_Util.LogMessage('PCL - CHKMAX - Error Message: ' || SQLERRM);
2342 	     end;
2343 
2344 	     begin
2345 
2346 		if (lab_count > 0 and check_max = 'Y') then
2347 
2348 		   UPDATE CDW_LAST_LOAD
2349 		      SET INSERTED_DATE = (SELECT max(to_date(inserted_datetime
2350 							   ,'MMDDRR hh24:MI:SS')) -- PRC 07/01/03 Changed from YY to RR
2351 					     FROM CDW_LAB_RESULTS
2352 					    WHERE LOAD_FLAG = 'N');
2353 		   Log_Util.LogMessage('PCL - Updated CDW_LAST_LOAD(INSERTED_DATE).');
2354 
2355 		end if;
2356 	     end;
2357 
2358 	     begin
2359 		UPDATE CDW_LAB_RESULTS
2360 		   SET LOAD_FLAG = 'U'
2361 		 WHERE LOAD_FLAG = 'N' AND UPDATED_FLAG = '1';
2362 
2363 		Log_Util.LogMessage('PCL - '||to_char(SQL%RowCount)||' CDW_LAB_RESULTS records updated LOAD_FLAG to "U".');
2364 
2365 	     EXCEPTION
2366 		WHEN NO_DATA_FOUND then
2367 		   null;
2368 		when others then
2369 		   dbms_output.put_line('Error Encountered: ' || SQLCODE);
2370 		   dbms_output.put_line('Error Message: ' || SQLERRM);
2371 		   Log_Util.LogMessage('PCL - SETLDU - Error Encountered: ' || SQLCODE);
2372 		   Log_Util.LogMessage('PCL - SETLDU - Error Message: ' || SQLERRM);
2373 	     end;
2374 
2375 	     begin
2376 		UPDATE CDW_LAB_RESULTS
2377 		   set load_flag = 'C'
2378 		 WHERE LOAD_FLAG IN ('U', 'N');
2379 
2380 		Log_Util.LogMessage('PCL - '||to_char(SQL%RowCount)||' CDW_LAB_RESULTS records updated LOAD_FLAG to "C".');
2381 
2382 	     EXCEPTION
2383 		WHEN NO_DATA_FOUND then
2384 		  null;
2385 		when others then
2386 		  dbms_output.put_line('Error Encountered: ' || SQLCODE);
2387 		  dbms_output.put_line('Error Message: ' || SQLERRM);
2388 		  Log_Util.LogMessage('PCL - SETLDC - Error Encountered: ' || SQLCODE);
2389 		  Log_Util.LogMessage('PCL - SETLDC - Error Message: ' || SQLERRM);
2390 	     end;
2391 
2392 	     COMMIT;
2393 
2394 	   END;
2395 	 END;
2396 	 Log_Util.LogMessage('PCL - Finishing "PREPARE_CDW_LABS".');
2397 
2398   END prepare_cdw_labs;
2399 
2400   PROCEDURE identify_duplicate_records IS
2401   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2402   /* Modification History: 					      */
2403   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
2404   /* PRC - Ekagra - 04/02/2004:					      */
2405   /* Modified Cursor to incorporate Study when determining if the record */
2406   /* to be loaded is a duplicate.	Added Code to support this new method */
2407   /* Also added code to report an error message when setting the load    */
2408   /* flag to 'X'							      */
2409   /* Also cleaned this section of code for readability.		      */
2410   /* PRC - Ekagra - 04/28/2004:					      */
2411   /* Modified cursor to so that an index could be utilized. This routine */
2412   /* was identified as having an execution time of over 1 hour when the  */
2413   /* number of 'NEW' records was in the 30K range.  Additionally, an     */
2414   /* index was added to speed up the routine (NCI_LABS_IDX5)	      */
2415   /* ALSO								      */
2416   /* Found that this routine could be simplified by just identifying     */
2417   /* PRC - 09/07/2004:						      */
2418   /* Found error in routine, where all exact duplicates of "to be loaded"*/
2419   /* records where being marked.  Corrected error, now only 2+ records   */
2420   /* are being marked as exact dupes				      */
2421   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
2422   /* PRC - 11/17/2004:						      */
2423   /* Added counter and Log Message for counter.			      */
2424   /* PRC - 06/21/2005:						      */
2425   /* LLI Enhancements; Moved here from "insert_lab_data" package.	      */
2426   /* Removed references to 'R' load_flag types			      */
2427   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
2428   /* PRC - 06/05/2006:						      */
2429   /* Altered first duplicate checker so that it only counts distinct     */
2430   /* record ids that need marked as duplicates.			      */
2431   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2432 
2433 	  last_oc_study   varchar2(20); -- prc 04/02/2004
2434 	  last_patient_id varchar2(10);
2435 	  last_oc_patient_pos nci_labs.oc_patient_pos%type; -- prc 09/27/04 :
2436 	  last_sample_dt  varchar2(10);
2437 	  last_labtest	  nci_labs.labtest_name%type;  -- prc 09/24/04 : Converted Type
2438 	  last_question   nci_labs.oc_lab_question%type;  -- prc 10/26/04 : Added Question
2439 	  last_result	  varchar2(20);
2440 	  last_record_id  varchar2(20);
2441 	  first_patient   char(1);
2442 
2443 	  X_cnt 	  number := 0; -- prc 11/17/04 : Added Counter.
2444 
2445 	  CURSOR c1 is
2446 	  select  a.record_id
2447 		 ,b.record_id loaded_rec_id
2448 		 ,a.oc_study		 -- prc 04/02/2004
2449 		 ,a.patient_id
2450 		 ,a.sample_datetime
2451 		 ,a.labtest_name labtest_name
2452 		 ,a.result
2453 		 ,a.unit
2454 		 ,a.load_flag
2455 	    from nci_labs a,
2456 		 nci_labs b
2457 	   where a.oc_study   = b.oc_study
2458 	     and a.OC_Patient_Pos = b.OC_Patient_Pos -- 08/07/06: Use Pat_pos instead of ID
2459 	     and a.sample_datetime = b.sample_datetime
2460 	     and a.labtest_name = b.labtest_name
2461 	     and a.result = b.result
2462 	     and nvl(a.unit,'~')   = nvl(b.unit,'~')
2463 	     and a.LOAD_FLAG IN ('N','D')  -- New or Duplicate
2464 	     and b.load_flag in ('C','U','L'); -- Loaded or Updated
2465 
2466 	  Cursor C2 is
2467 	  select  a.record_id
2468 		 ,a.oc_study		 -- prc 04/02/2004
2469 		 ,a.patient_id
2470 		 ,a.oc_patient_pos
2471 		 ,a.sample_datetime
2472 		 ,a.labtest_name labtest_name
2473 		 ,a.oc_lab_question l_question	-- prc 10/26/04 added question
2474 		 ,a.result
2475 		 ,a.unit
2476 		 ,a.load_flag
2477 	    from nci_labs a
2478 	   where a.LOAD_FLAG IN ('N','D')
2479 	   order by a.oc_study, a.oc_patient_pos, a.sample_datetime,
2480 		    a.oc_lab_question, a.result, a.unit, a.patient_id; --changed to oc_lab_question from labtes_name
2481 
2482 	  c1_record c1%ROWTYPE;
2483 	  c2_record c2%ROWTYPE;
2484 
2485   BEGIN
2486 
2487 	  Log_Util.LogMessage('IDR - Checking Exact Dup. against already loaded.');
2488 	  x_cnt := 0;
2489 
2490 	  last_record_id := 0;
2491 	  --  Each record found needs to be marked as a duplicate.
2492 	  OPEN c1;
2493 	  LOOP
2494 	     FETCH c1 INTO c1_record;
2495 	     EXIT WHEN c1%NOTFOUND;
2496 
2497 	     -- PRC 06/06/06: Modified. Was counting records based on a cartisean product, making it appear
2498 	     -- 	      that more records were affected.
2499 	     If Last_Record_id <> c1_record.record_id then
2500 
2501 		update nci_labs
2502 		   set load_flag = 'X',
2503 		       error_reason = 'Exact Record Match Error with Loaded ('||c1_record.loaded_rec_id||')'
2504 		 where oc_study = c1_record.oc_study
2505 		   and record_id = c1_record.record_id;
2506 
2507 		last_record_id := c1_record.record_id;
2508 
2509 		x_Cnt := X_Cnt + 1;
2510 	     End If;
2511 
2512 	  END LOOP;
2513 	  CLOSE c1;
2514 	  Log_Util.LogMessage('IDR - Found '||to_char(X_cnt)||' "Exact Dup. against already loaded" records. ');
2515 
2516 
2517 	  Log_Util.LogMessage('IDR - Checking Exact Dup. against to be loaded records.');
2518 	  first_patient := 'Y';
2519 	  x_cnt := 0;
2520 
2521 	  last_oc_study   := '~';
2522 	  last_patient_id := '0';
2523 	  last_oc_patient_pos := 0;
2524 	  last_sample_dt  := '~';
2525 	  last_labtest	  := '~';
2526 	  last_question   := '~';
2527 	  last_result	  := '~';
2528 	  last_Record_id  := '0';
2529 
2530 	  OPEN c2;
2531 	  LOOP
2532 	     FETCH c2 INTO c2_record;
2533 	     EXIT WHEN c2%NOTFOUND;
2534 	     --Log_Util.LogMessage('IDR - LastPat="'||Last_patient_id||'"  PatID="'||c2_record.patient_id||'".');
2535 	     --Log_Util.LogMessage('IDR - LastREC="'||Last_Record_Id||'"  ThisRec="'||c2_record.Record_id||'".');
2536 
2537 
2538 	     if (c2_RECORD.oc_study	  = last_oc_study)	 AND
2539 		(c2_record.oc_patient_pos = last_oc_patient_pos) AND
2540 		(c2_record.sample_datetime= last_sample_dt)	 AND
2541 		(c2_record.l_question	  = last_question)	 AND
2542 		(c2_record.result	  = last_result)		   then
2543 		--Log_Util.LogMessage('IDR - Equal, Setting "X".');
2544 		--Log_Util.LogMessage('IDR - '||c2_RECORD.oc_study || c2_record.patient_id || c2_record.sample_datetime ||
2545 		--				c2_record.labtest_name || c2_record.result);
2546 		--Log_Util.LogMessage('IDR - '||last_oc_study || last_patient_id || last_sample_dt ||
2547 		--				last_labtest || last_result);
2548 		update nci_labs
2549 		   set load_flag = 'X',
2550 		       error_reason = 'Exact Record Match Error for ('||Last_Record_Id||')'
2551 		 where oc_study = c2_record.oc_study
2552 		   and record_id = c2_record.record_id;
2553 
2554 		x_cnt := x_cnt + 1;
2555 	     Else
2556 		Null;
2557 		--Log_Util.LogMessage('IDR - NOT Equal, Skipping "X".');
2558 		--Log_Util.LogMessage('IDR - '||c2_RECORD.oc_study || c2_record.patient_id || c2_record.sample_datetime ||
2559 		--				c2_record.labtest_name || c2_record.result);
2560 		--Log_Util.LogMessage('IDR - '||last_oc_study || last_patient_id || last_sample_dt ||
2561 		--				last_labtest || last_result);
2562 	     end if;
2563 
2564 	     last_oc_study   := c2_record.oc_study;
2565 	     last_patient_id := c2_record.patient_id;
2566 	     last_oc_patient_pos := c2_record.oc_patient_pos;
2567 	     last_sample_dt  := c2_record.sample_datetime;
2568 	     last_labtest    := c2_record.labtest_name;
2569 	     last_question   := c2_record.l_question;
2570 	     last_result     := c2_record.result;
2571 	     last_Record_id  := c2_record.Record_id;
2572 
2573 	  END LOOP;
2574 
2575 	  CLOSE c2;
2576 	  Log_Util.LogMessage('IDR - Found '||to_char(X_cnt)||' "Exact Dup. against to be loaded" records. ');
2577 
2578   END identify_duplicate_records;
2579 
2580   PROCEDURE Flag_UPD_Lab_Results (P_Type in Varchar2) AS
2581   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2582   /*Description: This code is used to mark duplicates within the Lab Records waiting to*/
2583   /*	      to be loaded.  These "Duplicates" are actually UPDATES to already     */
2584   /*	      loaded data.							    */
2585   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2586   /*  Modification History 							    */
2587   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
2588   /* PRC - 10/27/04 : Rewrote this routine.  Now it is Much more straight forward	    */
2589   /*		   Get all "NEW" lab results, order them by			    */
2590   /*		   study/patient/sample/question; loop through if last = current    */
2591   /*		   then mark current as dup.					    */
2592   /* LLI Enhancements; Moved here from single procedure "Flag_Dup_Lab_Results".	    */
2593   /* Removed references to 'R' load_flag types					    */
2594   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2595 
2596 	  R_Count	Number := 0;
2597 
2598 	  last_study	       nci_labs.oc_study%type;
2599 	  last_pat_pos	       nci_labs.oc_Patient_Pos%type;
2600 	  last_sample_datetime nci_labs.sample_datetime%type;
2601 	  last_lab_question    nci_labs.oc_lab_question%type;
2602 	  last_record_id       nci_labs.Record_ID%type;
2603 
2604 	  CURSOR c1 is
2605 	     SELECT record_id
2606 		    ,sample_datetime
2607 		    ,result
2608 		    ,unit
2609 		    ,oc_lab_question
2610 		    ,oc_patient_pos
2611 		    ,oc_study
2612 		    ,nvl(cdw_result_id,record_id)
2613 	       FROM nci_labs n
2614 	      WHERE LOAD_FLAG IN (P_Type)
2615 	      ORDER BY oc_study
2616 		       ,oc_patient_pos
2617 		       ,sample_datetime
2618 		       ,oc_lab_question
2619 		       ,nvl(cdw_result_id,record_id);
2620 
2621 	  c1_record c1%ROWTYPE;
2622 
2623   BEGIN
2624 
2625 	  If Log_Util.Log$LogName is null Then
2626 	     Log_Util.LogSetName('FNDDUP_' || to_char(sysdate, 'YYYYMMDD-HH24MI'),'LABLOAD');
2627 	  End If;
2628 	  Log_Util.LogMessage('FDLLP - Flag Update Lab Results Started');
2629 
2630 	  last_study	       := '~';
2631 	  last_pat_pos	       := 0;
2632 	  last_sample_datetime := '~';
2633 	  Last_lab_question    := '~';
2634 	  Last_record_id       := 0;
2635 
2636 	  R_Count := 0;
2637 
2638 	  OPEN c1;
2639 	  LOOP
2640 	     FETCH c1 INTO c1_record;
2641 	     EXIT WHEN c1%NOTFOUND;
2642 
2643 	     If (Last_study	      = c1_Record.oc_study) AND
2644 		(Last_pat_pos	      = c1_Record.oc_patient_pos) and
2645 		(Last_Sample_datetime = c1_Record.Sample_datetime) and
2646 		(Last_lab_Question    = c1_Record.Oc_Lab_Question)
2647 	     Then
2648 		update nci_labs
2649 		   set load_flag = 'D',
2650 		       error_reason = 'Study/Patient/DateTime/Question Duplicate (UPDATE) ['||Last_Record_id||']'
2651 		 where oc_study = c1_record.oc_study
2652 		   and record_id = c1_record.record_id;
2653 
2654 		R_count := R_Count + 1;
2655 	     else
2656 		null;
2657 	     end if;
2658 
2659 	     Last_study 	  := c1_Record.oc_study;
2660 	     Last_pat_pos	  := c1_Record.oc_patient_pos;
2661 	     Last_Sample_datetime := c1_Record.Sample_datetime;
2662 	     Last_lab_Question	  := c1_Record.Oc_Lab_Question;
2663 	     Last_record_id	  := c1_Record.Record_ID;
2664 
2665 	  END LOOP;
2666 
2667 	  Log_Util.LogMessage('FDLLR - '||to_char(R_Count)||' records marked for Lab Panel/Subset/Pt/DtTm/Q Update');
2668 
2669 	  CLOSE c1;
2670 
2671 	  Log_Util.LogMessage('FDLLP - Flag Update Lab Results Finished');
2672 
2673   END Flag_UPD_Lab_Results;
2674 
2675   Procedure Identify_Additional_Labs is
2676   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2677   /* This section is used to added additional records to NCI_LABS for processing */
2678   /* by identifying new study/patients relationships for existin patients.  Also */
2679   /* resets those errors held in the automatic error reset control table.	      */
2680   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2681   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
2682   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2683 
2684 	   Hold_unit  nci_labs.unit%type;
2685 	   X_Cnt      Number := 0;
2686   Begin
2687 	  process_error_labs;  -- added 10/19/2005
2688 
2689 	  -- Set the study and patient position for those NEW records that do not have either.
2690 	  update nci_labs
2691 	     set (oc_patient_pos, oc_study) = (select pt, Study
2692 						 from nci_lab_valid_patients
2693 						WHERE PT_ID = nci_labs.PATIENT_ID
2694 						  and laboratory = nci_labs.laboratory -- prc 12/08/04
2695 						  and rownum = 1    )
2696 	   WHERE LOAD_FLAG IN ('N')
2697 	     and (oc_patient_pos is null or oc_study is null);
2698 
2699 	  Log_Util.LogMessage('IAL - '||to_char(SQL%RowCount)||' rows successfully set "oc_patient_pos" and "oc_study"');
2700 
2701 	  -- Generate additional lab records for patient on more than one study.or on same study more than once.
2702 	  Begin
2703 	     Log_Util.LogMessage('IAL - Starting Additional Record Inserts');
2704 
2705 	     For x_Rec in (select distinct
2706 				  NULL RECORD_ID	 ,PATIENT_ID
2707 				  ,SAMPLE_DATETIME	 ,TEST_COMPONENT_ID
2708 				  ,b.LABORATORY 	 ,LABTEST_NAME
2709 				  ,LAB_GRADE		 ,RESULT
2710 				  ,NULL UNIT		 ,NORMAL_VALUE
2711 				  ,PANEL_NAME		 ,PATIENT_NAME
2712 				  ,COMMENTS		 ,NULL OC_LAB_PANEL
2713 				  ,NULL OC_LAB_QUESTION  ,NULL OC_LAB_EVENT
2714 				  ,T.PT OC_PATIENT_POS	 ,NULL LOAD_DATE
2715 				  ,'N' LOAD_FLAG	 ,RECEIVED_DATE
2716 				  ,NULL DATE_CREATED	 ,NULL DATE_MODIFIED
2717 				  ,NULL CREATED_BY	 ,NULL MODIFIED_BY
2718 				  ,TEST_CODE		 ,CDW_RESULT_ID
2719 				  ,T.STUDY OC_STUDY	 ,NULL ERROR_REASON
2720 				  ,NULL OC_LAB_SUBSET
2721 			     from NCI_LAB_VALID_PATIENTS T, -- from patient_id_ptid_vw T, -- prc 10/20/04
2722 				  nci_labs b
2723 			    WHERE T.PT_ID = b.PATIENT_ID
2724 			      and t.laboratory = b.laboratory
2725 			      and b.cdw_result_id is not null
2726 			   MINUS
2727 			   select NULL RECORD_ID	 ,PATIENT_ID
2728 				  ,SAMPLE_DATETIME	  ,TEST_COMPONENT_ID
2729 				  ,LABORATORY		  ,LABTEST_NAME
2730 				  ,LAB_GRADE		  ,RESULT
2731 				  ,NULL UNIT		  ,NORMAL_VALUE
2732 				  ,PANEL_NAME		  ,PATIENT_NAME
2733 				  ,COMMENTS		  ,NULL OC_LAB_PANEL
2734 				  ,NULL OC_LAB_QUESTION   ,NULL OC_LAB_EVENT
2735 				  ,OC_PATIENT_POS	  ,NULL LOAD_DATE
2736 				  ,'N' LOAD_FLAG	  ,RECEIVED_DATE
2737 				  ,NULL DATE_CREATED	  ,NULL DATE_MODIFIED
2738 				  ,NULL CREATED_BY	  ,NULL MODIFIED_BY
2739 				  ,TEST_CODE		  ,CDW_RESULT_ID
2740 				  ,OC_STUDY		  ,NULL ERROR_REASON
2741 				  ,NULL OC_LAB_SUBSET
2742 			      from nci_labs b)	LOOP
2743 	     Begin
2744 		X_Cnt := X_Cnt + 1;
2745 
2746 		Begin
2747 		   Hold_Unit := Null;
2748 
2749 		   For y_Rec in (select unit
2750 				   from nci_labs
2751 				  where cdw_result_id = x_rec.cdw_result_id
2752 				    and unit is not null
2753 				  order by record_id) Loop
2754 
2755 		      Hold_Unit := Y_Rec.Unit;
2756 		   End Loop;
2757 
2758 		Exception
2759 		   When No_Data_Found Then
2760 		      Hold_Unit := NULL;
2761 		End;
2762 
2763 		Insert into NCI_LABS
2764 		       (RECORD_ID,	PATIENT_ID,	  SAMPLE_DATETIME,	 TEST_COMPONENT_ID,
2765 			LABORATORY,	LABTEST_NAME,	  LAB_GRADE,		 RESULT,
2766 			UNIT,		NORMAL_VALUE,	  PANEL_NAME,		 PATIENT_NAME,
2767 			COMMENTS,	OC_LAB_PANEL,	  OC_LAB_QUESTION,	 OC_LAB_EVENT,
2768 			OC_PATIENT_POS, LOAD_DATE,	  LOAD_FLAG,		 RECEIVED_DATE,
2769 			DATE_CREATED,	DATE_MODIFIED,	  CREATED_BY,		 MODIFIED_BY,
2770 			TEST_CODE,	CDW_RESULT_ID,	  OC_STUDY,		 ERROR_REASON,
2771 			OC_LAB_SUBSET)
2772 		Values (X_Rec.RECORD_ID,      X_Rec.PATIENT_ID,    X_Rec.SAMPLE_DATETIME, X_Rec.TEST_COMPONENT_ID,
2773 			X_Rec.LABORATORY,     X_Rec.LABTEST_NAME,  X_Rec.LAB_GRADE,	  X_Rec.RESULT,
2774 			Hold_Unit,	      X_Rec.NORMAL_VALUE,  X_Rec.PANEL_NAME,	  X_Rec.PATIENT_NAME,
2775 			X_Rec.COMMENTS,       X_Rec.OC_LAB_PANEL,  X_Rec.OC_LAB_QUESTION, X_Rec.OC_LAB_EVENT,
2776 			X_Rec.OC_PATIENT_POS, X_Rec.LOAD_DATE,	   X_Rec.LOAD_FLAG,	  X_Rec.RECEIVED_DATE,
2777 			X_Rec.DATE_CREATED,   X_Rec.DATE_MODIFIED, X_Rec.CREATED_BY,	  X_Rec.MODIFIED_BY,
2778 			X_Rec.TEST_CODE,      X_Rec.CDW_RESULT_ID, X_Rec.OC_STUDY,	  X_Rec.ERROR_REASON,
2779 			X_Rec.OC_LAB_SUBSET);
2780 	     End;
2781 	     End loop;
2782 
2783 	     Log_Util.LogMessage('IAL - Finished Additional Record Inserts.');
2784 
2785 	  End;
2786 
2787 	  Log_Util.LogMessage('IAL - Generated additional '||to_char(X_Cnt)||
2788 				  ' lab records for patients on more than one study, or on same study more than once.');
2789   End Identify_Additional_Labs;
2790 
2791   PROCEDURE process_lab_data IS
2792   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2793   /* This section is used to process records in NCI_LABS.	Records are marked    */
2794   /* with the appropriate values for patient and study as well as marked with an */
2795   /* error flag when they don't meet each of the individual tests below.	      */
2796   /* The types of errors include:						      */
2797   /*    Patient found on more than one study				      */
2798   /*    Patient not on-study						      */
2799   /*    Etc.								      */
2800   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2801   /*  Modification History 							    */
2802   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
2803   /* PRC - 01/24/06 : Replace single "Map Lab Test Question" update code with 4 new    */
2804   /*		   update statement to provide mechanism to copy LABTEST_NAME to    */
2805   /*		   OC_LAB_QUESTION.						    */
2806   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2807 
2808 	   T_Counter   Number := 0;
2809 	   U_Counter   Number := 0;
2810 	   I_Counter   Number := 0;
2811 	   crnt_ptid   nci_labs.Patient_id%type;
2812 	   crnt_Study  nci_labs.OC_Study%type;
2813 	   crnt_OFF_OffSet_Days Number := 0;
2814 	   v_off_study_dcm   varchar2(30); -- prc 09/09/04: DCM where the off study question is
2815 	   v_off_study_quest varchar2(30); -- prc 09/09/04: Name of off study question
2816 	   pt_enrollment_dt  Date;
2817 	   OffStudy_Date     Date;
2818 	   Prestudy_Lab_Date Date;
2819 	   dummy       varchar2(1);
2820 	   v_result    responses.value_text%type;
2821 	   v_found     boolean := False;
2822 
2823 	   v_date_check_code		nci_lab_load_ctl.DATE_CHECK_CODE%type;
2824 	   v_offstudy_dcm		nci_lab_load_ctl.OFF_STUDY_DCM%type;
2825 	   v_offstudy_quest		nci_lab_load_ctl.OFF_STUDY_QUEST%type;
2826 	   v_OffStudy_Offset		nci_lab_load_ctl.OFF_STUDY_OFFSET_DAYS%type;
2827 	   v_Prestudy_Dcm		nci_lab_load_ctl.PRESTUDY_LAB_DATE_DCM%type;
2828 	   v_Prestudy_Quest		nci_lab_load_ctl.PRESTUDY_LAB_DATE_QUEST%type;
2829 	   v_Prestudy_Offset		nci_lab_load_ctl.PRESTUDY_OFFSET_DAYS%type;
2830 	   v_blank_prestudy_use_enroll	nci_lab_load_ctl.BLANK_PRESTUDY_USE_ENROLL%type;
2831 	   v_enrollment_dcm		nci_lab_load_ctl.ENROLLMENT_DATE_DCM%type;
2832 	   v_enrollment_quest		nci_lab_load_ctl.ENROLLMENT_DATE_QUEST%type;
2833 
2834 	   Use_Enroll Varchar2(1)  := Null; -- "Use Enroll Date when Prestudy Date Null" Flag
2835 
2836 	 BEGIN
2837 	    Log_Util.LogMessage('PLD - Beginning "PROCESS_LAB_DATA".');
2838 
2839 	    /* Moved code the generated new records and reset error records to its own procedure */
2840 
2841 	    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2842 	    /* PRC 04/13/04: Moved Section to Here (After Insert of "On More Than One Study"	 */
2843 	    /* PRC 04/07/04: Added Section							 */
2844 	    /* Data Contraint Section.	Remove Records for Studies that have stopped loading labs*/
2845 	    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2846 
2847 	    -- Mark Records as Rejected where the study is flagged to stop loading
2848 	    UPDATE NCI_LABS
2849 	       SET LOAD_FLAG = 'E',
2850 		   ERROR_REASON = 'Study is no longer loading labs. (NCI_LAB_LOAD_CTL.STOP_LAB_LOAD_FLAG=''Y'')'
2851 	     WHERE LOAD_FLAG IN ('N')
2852 	       AND OC_STUDY IN (select OC_STUDY from NCI_LAB_LOAD_CTL
2853 				 where STOP_LAB_LOAD_FLAG = 'Y');
2854 
2855 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Study is no longer loading labs"');
2856 
2857 	    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2858 	    /* PRC 01/21/04: Added Section						       */
2859 	    /* Data Contraint Section.	Remove Rcords for Bad Type, Length, etc 	       */
2860 	    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
2861 	    -- Trim extract spaces from results
2862 	    UPDATE NCI_LABS
2863 	       SET result = trim(result)
2864 	     WHERE LOAD_FLAG IN ('N');
2865 
2866 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' Results trimmed.');
2867 
2868 	    -- Trim extract spaces from units
2869 	    UPDATE NCI_LABS
2870 	       SET UNIT = trim(UNIT)
2871 	     WHERE LOAD_FLAG ='N';
2872 
2873 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' Units trimmed.');
2874 
2875 	    -- Mark Records as Rejected where Results is Greater than 20 characters
2876 	    UPDATE NCI_LABS
2877 	       SET LOAD_FLAG = 'E', ERROR_REASON = 'RESULT has length greater than 20 characters.'
2878 	     WHERE Length(result) > 20 AND LOAD_FLAG IN ('N');
2879 
2880 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "RESULT has length greater than 20 characters."');
2881 
2882 	    -- Mark Records as Rejected where Normal Value > 30;
2883 	    UPDATE NCI_LABS
2884 	       SET LOAD_FLAG = 'E', ERROR_REASON = 'NORMAL_VALUE to Long (> 30)'
2885 	     WHERE Length(NORMAL_VALUE) > 30 AND LOAD_FLAG IN ('N');
2886 
2887 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "NORMAL_VALUE to Long (> 30)"');
2888 
2889 	    -- Ensure each record has a patient_position_id
2890 	    UPDATE NCI_LABS
2891 	       SET LOAD_FLAG = 'E', ERROR_REASON = 'Patient not on-study'
2892 	     WHERE OC_PATIENT_POS IS NULL AND LOAD_FLAG IN ('N');
2893 
2894 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Patient not on-study"');
2895 
2896 
2897 	    crnt_ptid := '~';
2898 	    crnt_Study:= '~';
2899 	    U_Counter := 0; -- Count Bad PreStudy
2900 	    I_Counter := 0; -- Count Bad Off Study
2901 	    For I_Rec in (select distinct Patient_id, OC_Study, OC_Patient_Pos
2902 			    from nci_labs
2903 			   where load_flag = 'N'
2904 			   order by OC_Study, Patient_ID) LOOP
2905 	       BEGIN
2906 
2907 		  Log_Util.LogMessage('PLD - Processing Records for Study / patient / position: ' ||
2908 				       I_Rec.OC_Study ||' / '||I_REc.patient_id || ' / ' || I_Rec.OC_Patient_Pos);
2909 
2910 		  If crnt_Study <> I_Rec.OC_Study Then
2911 
2912 		     Log_Util.LogMessage('PLD - Study changed, getting Date Controls for study: ' || I_Rec.OC_Study);
2913 		     Begin
2914 			-- Get the study specific Date Check Options. If a particular option is blank,
2915 			-- then get the DEFAULT (STUDY='ALL') value for the option.
2916 			Select Nvl(a.DATE_CHECK_CODE, b.DATE_CHECK_CODE) DATE_CHECK_CODE,
2917 			       Nvl(a.OFF_STUDY_DCM, b.OFF_STUDY_DCM) OFF_STUDY_DCM,
2918 			       Nvl(a.OFF_STUDY_QUEST, b.OFF_STUDY_QUEST) OFF_STUDY_QUEST,
2919 			       Nvl(a.OFF_STUDY_OFFSET_DAYS, b.OFF_STUDY_OFFSET_DAYS) OFF_STUDY_OFFSET_DAYS,
2920 			       Nvl(a.PRESTUDY_LAB_DATE_DCM, b.PRESTUDY_LAB_DATE_DCM) PRESTUDY_LAB_DATE_DCM,
2921 			       Nvl(a.PRESTUDY_LAB_DATE_QUEST, b.PRESTUDY_LAB_DATE_QUEST) PRESTUDY_LAB_DATE_QUEST,
2922 			       Nvl(a.PRESTUDY_OFFSET_DAYS, b.PRESTUDY_OFFSET_DAYS) PRESTUDY_OFFSET_DAYS,
2923 			       Nvl(a.BLANK_PRESTUDY_USE_ENROLL, b.BLANK_PRESTUDY_USE_ENROLL) BLANK_PRESTUDY_USE_ENROLL,
2924 			       Nvl(a.ENROLLMENT_DATE_DCM, b.ENROLLMENT_DATE_DCM) ENROLLMENT_DATE_DCM,
2925 			       Nvl(a.ENROLLMENT_DATE_QUEST, b.ENROLLMENT_DATE_QUEST) ENROLLMENT_DATE_QUEST
2926 			  into v_date_check_code,
2927 			       v_offstudy_dcm, v_offstudy_quest, v_OffStudy_Offset,
2928 			       v_Prestudy_Dcm, v_Prestudy_Quest, v_Prestudy_Offset,
2929 			       v_blank_prestudy_use_enroll, v_enrollment_dcm, v_enrollment_quest
2930 			  from NCI_LAB_LOAD_CTL a,
2931 			       NCI_LAB_LOAD_CTL b
2932 			 where a.OC_STUDY = I_Rec.OC_STUDY
2933 			   and b.OC_STUDY = 'ALL';
2934 
2935 		     Exception
2936 			When NO_DATA_FOUND Then
2937 			   Begin
2938 			      -- Get the default Date Check Options.
2939 			      Select DATE_CHECK_CODE,
2940 				     OFF_STUDY_DCM,
2941 				     OFF_STUDY_QUEST,
2942 				     OFF_STUDY_OFFSET_DAYS,
2943 				     PRESTUDY_LAB_DATE_DCM,
2944 				     PRESTUDY_LAB_DATE_QUEST,
2945 				     PRESTUDY_OFFSET_DAYS,
2946 				     BLANK_PRESTUDY_USE_ENROLL,
2947 				     ENROLLMENT_DATE_DCM,
2948 				     ENROLLMENT_DATE_QUEST
2949 				into v_date_check_code,
2950 				     v_offstudy_dcm, v_offstudy_quest, v_OffStudy_Offset,
2951 				     v_Prestudy_Dcm, v_Prestudy_Quest, v_Prestudy_Offset,
2952 				     v_blank_prestudy_use_enroll, v_enrollment_dcm, v_enrollment_quest
2953 				from NCI_LAB_LOAD_CTL a
2954 			       where a.OC_STUDY = 'ALL';
2955 
2956 			   Exception
2957 			      When NO_DATA_FOUND Then
2958 				 Log_Util.LogMessage('PLD - WARNING: No DEFAULT Study Controls');
2959 				 v_OFFStudy_OffSet := 30;
2960 				 v_blank_prestudy_use_enroll := 'N';
2961 			   End;
2962 		     End;
2963 		     -- Write to the log, the values found
2964 		     Log_Util.LogMessage('PLD - Date Control Values for Study: "'|| I_Rec.OC_STUDY );
2965 		     Log_Util.LogMessage('	'||
2966 					 'Date_Check="'      ||v_date_check_code||'";  '||
2967 					 'OffStudy DCM="'    ||v_offstudy_dcm||'";  '||
2968 					 'OffStudy Quest="'  ||v_offstudy_quest||'";  '||
2969 					 'OffStudy OffSet="' ||to_char(v_OffStudy_OffSet)||'";	'||
2970 					 'PreStudy DCM="'    ||v_Prestudy_dcm||'";  '||
2971 					 'PreStudy Quest="'  ||v_Prestudy_quest||'";  '||
2972 					 'PreStudy OffSet="' ||to_char(v_PreStudy_OffSet)||'";	'||
2973 					 'Blank Use Enroll="'||v_blank_prestudy_use_enroll||'";  '||
2974 					 'Enrollment DCM="'  ||v_Enrollment_dcm||'";  '||
2975 					 'Enrollment Quest="'||v_Enrollment_quest||'".');
2976 
2977 		     -- set the current study value
2978 		     crnt_Study := I_Rec.OC_Study;
2979 		  End If;
2980 
2981 	       EXCEPTION
2982 		  when others then
2983 		     Log_Util.LogMessage('PLD - WARNING: Unexpected ERROR Occurred.');
2984 		     Log_Util.LogMessage('PLD - RPED - Error Encountered: ' || SQLCODE);
2985 		     Log_Util.LogMessage('PLD - RPED - Error Message: ' || SQLERRM);
2986 	       END;
2987 
2988 	       prestudy_lab_date := NULL; -- The default value
2989 
2990 	       If v_date_check_code = 'NONE' Then
2991 		  Log_Util.LogMessage('PLD - No Date Check Performed (DATE_CHECK_CODE = "NONE").'); --prc 08/09/06
2992 		  Null; -- DO NOTHING, LET THE RECORD PASS THROUGH
2993 	       End If;
2994 	       If v_date_check_code in ('BOTH','PRE') Then
2995 		  -- Get Pre Study Lab Date.
2996 		  Get_Response(I_Rec.OC_Study, I_Rec.oc_patient_pos,
2997 			      v_PreStudy_DCM, v_PreStudy_Quest, v_result, v_found);
2998 
2999 		  If not v_found Then
3000 		     If v_blank_prestudy_use_enroll = 'Y' Then
3001 			Log_Util.LogMessage('PLD - Prestudy date not found, using registration date.');
3002 			-- Use Enrollment Date for PreStudy Lab Date
3003 			Get_Response(I_Rec.OC_Study, I_Rec.oc_patient_pos,
3004 				    v_Enrollment_DCM, v_Enrollment_Quest, v_result, v_found);
3005 			If not v_found Then
3006 			   Log_Util.LogMessage('PLD - No Enrollment Date found, setting Blank.');
3007 			Else
3008 			   prestudy_lab_Date := text2date(v_result);
3009 			End If;
3010 		     End If;
3011 		  Else
3012 		     prestudy_lab_Date := text2date(v_result);
3013 		  End If;
3014 	       End If;
3015 	       If v_date_check_code in ('BOTH','OFF') Then
3016 		  -- Get Pre Study Lab Date.
3017 		  Get_Response(I_Rec.OC_Study, I_Rec.oc_patient_pos,
3018 			      v_OffStudy_DCM, v_OffStudy_Quest, v_result, v_found);
3019 
3020 		  If not v_found Then
3021 		     Log_Util.LogMessage('PLD - Off Study Date not Found, using end of time.');
3022 		     OffStudy_date := to_date(3000000, 'J');
3023 		  Else
3024 		      OffStudy_date := text2date(v_result);
3025 		  End If;
3026 	       End If;
3027 
3028 	       If v_date_check_code = 'NONE' Then
3029 		  Null; -- DO NOTHING, LET THE RECORD PASS THROUGH
3030 	       End If;
3031 	       If v_date_check_code in ('BOTH','PRE') Then
3032 		  If prestudy_lab_date is null Then
3033 		     -- Mark Lab Records as Errors, where PresStudy Date is null
3034 		     update nci_labs
3035 			set load_flag = 'E',
3036 			    Error_Reason = 'PreStudy Lab Date is NULL.'
3037 		      where load_flag in ('N')
3038 			and OC_Patient_Pos = I_Rec.OC_Patient_Pos -- 08/07/06: Use Pat_pos instead of ID
3039 			and OC_Study   = I_rec.OC_Study;
3040 
3041 		     U_Counter := U_Counter + SQL%RowCount;
3042 		     Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||
3043 					 ' records rejected because PreStudy Lab Date is NULL');
3044 		  Else
3045 		     -- Mark Lab Records as Errors, where Lab Sample Date is Less Than PresStudy Date.
3046 		     update nci_labs
3047 			set load_flag = 'E',
3048 			    Error_Reason = 'Lab Sample Date is less than PreStudy Lab Date + Offset'
3049 		      where to_date(substr(SAMPLE_DATETIME,1,6), 'mmddRR') < prestudy_lab_date + v_PreStudy_Offset
3050 			and load_flag = 'N'
3051 			and OC_Patient_Pos = I_Rec.OC_Patient_Pos -- 08/07/06: Use Pat_pos instead of ID
3052 			and OC_Study   = I_rec.OC_Study;
3053 
3054 		     U_Counter := U_Counter + SQL%RowCount;
3055 		     Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||
3056 					 ' records rejected because Lab Sample Date is less than PreStudy Lab Date (' || prestudy_lab_date||') + Offset "'||v_Prestudy_offset||'".');
3057 		  End If;
3058 	       End If;
3059 	       If v_date_check_code in ('BOTH','OFF') Then
3060 		  -- Mark Lab Records as Errors, where Lab Sample Date is more than 30 days after Study Date
3061 		  update nci_labs
3062 		     set load_flag = 'E',
3063 			 Error_Reason = 'Lab Sample Date is more than '||
3064 					 crnt_OFF_OffSet_Days|| ' days after Off Study Date'
3065 		   where to_date(substr(SAMPLE_DATETIME,1,6), 'mmddRR') > OffStudy_Date + v_OffStudy_OffSet
3066 		     and load_flag = 'N'
3067 			and OC_Patient_Pos = I_Rec.OC_Patient_Pos -- 08/07/06: Use Pat_pos instead of ID
3068 		     and OC_Study   = I_rec.OC_Study;
3069 
3070 		  I_Counter := I_Counter + SQL%RowCount;
3071 		  Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||
3072 				      ' records rejected because Lab Sample Date is more than '||
3073 				      crnt_OFF_OffSet_Days|| ' days after Off Study Date(' || OffStudy_Date||')');
3074 
3075 	       End If;
3076 
3077 	    End loop;
3078 	    Log_Util.LogMessage('PLD - '||to_char(U_Counter)||' Total rows marked with Error for "Lab Sample Date is less than PreStudy Lab Date + Offset"');
3079 	    Log_Util.LogMessage('PLD - '||to_char(I_Counter)||' Total rows marked with Error for "Lab Sample Date is more than the specified days after Off Study Date"');
3080 
3081 	    -- Set error condition for a lab defined to be in more than one place (either DCM or Visit) in a study.
3082 	    -- Even with NEW LAB TEST LOOKUP, this should still work fine.
3083 	    I_Counter := 0;
3084 
3085 	    -- prc 12/01/04 : Modified for loop to only execute if it really has to.
3086 	    For Dup_Lab in (SELECT distinct V.STUDY, M.test_component_id,
3087 					  M.laboratory, V.DEFAULT_VALUE_TEXT
3088 				     FROM nci_lab_mapping   m
3089 					 ,duplicate_lab_mappings v
3090 					 ,nci_labs N
3091 				    WHERE V.DEFAULT_VALUE_TEXT = M.OC_LAB_QUESTION
3092 				      and m.test_component_id  = N.test_component_id
3093 				      and M.laboratory	       = decode(N.laboratory,'DUPE','CDW')
3094 				      and n.oc_study	       = v.study
3095 				      and N.load_flag in ('N')			 ) Loop -- prc 11/30 added load_flag
3096 
3097 		Update NCI_LABS N
3098 		   SET LOAD_FLAG    = 'E'
3099 		      ,ERROR_REASON = 'Lab found in more than one DCM/Visit'
3100 		 WHERE load_flag in ('N')
3101 		   and N.test_component_id = Dup_lab.test_component_id
3102 		   and N.laboratory	   = Dup_Lab.Laboratory
3103 		   and N.OC_Study	   = Dup_Lab.Study;
3104 
3105 	       I_Counter := I_Counter + SQL%RowCount;
3106 	       Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||
3107 				   ' rows updated for error "Lab found in more than one DCM/Visit" '||
3108 				   'Study/Test Component ID/Laboratory - '||
3109 				   Dup_Lab.STUDY||'/'||Dup_Lab.test_component_id||'/'||Dup_Lab.laboratory);
3110 	    End Loop;
3111 
3112 	    Log_Util.LogMessage('PLD - '||I_Counter||' TOTAL rows updated for error "Lab found in more than one DCM/Visit"');
3113 	    /* PRC 01/23/06: Add new way of mapping.  Some studies send data with C3D Questions identified.
3114 	    */
3115 	    -- Map C3D Question Name using LabTest_Name for Studies distinctly identified "YES"
3116 	    Update nci_labs a
3117 	       set OC_LAB_QUESTION = Substr(LABTEST_NAME,1,20)
3118 	     where Load_flag = 'N'
3119 	       and exists (select 'X' from nci_lab_load_ctl b
3120 			    where b.oc_study = a.oc_study
3121 			      and b.LABTESTNAME_IS_OCLABQUEST = 'Y');
3122 
3123 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows successfully updated "OC_LAB_QUESTION" '||
3124 				       'for studies specifically identified to use "LABTEST_NAME"');
3125 
3126 	    -- Map C3D Question Name using LabTest_NameUpdate for Studies distinctly identified "NO"
3127 	    UPDATE NCI_LABS A
3128 	       SET (OC_LAB_QUESTION) = FIND_LAB_QUESTION(A.test_component_id, A.laboratory)
3129 	     WHERE load_flag in ('N')
3130 	       and exists (select 'X' from nci_lab_load_ctl b
3131 			    where b.oc_study = A.oc_study
3132 			      and b.LABTESTNAME_IS_OCLABQUEST = 'N');
3133 
3134 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows successfully updated "OC_LAB_QUESTION" '||
3135 				       'for studies specifically identified to use "FIND_LAB_QUESTION"');
3136 
3137 	    -- Map C3D Question Name using LabTest_Name for Studies defaulted to "YES"
3138 	    Update nci_labs a
3139 	       set OC_LAB_QUESTION = Substr(LABTEST_NAME,1,20)
3140 	     where Load_flag = 'N'
3141 	       and exists (select 'X' from nci_lab_load_ctl b
3142 			    where b.oc_study = 'ALL'
3143 			      and b.LABTESTNAME_IS_OCLABQUEST = 'Y')
3144 	       and not exists (select 'X' from nci_lab_load_ctl b   -- these were processed above
3145 			       where b.oc_study = a.oc_study	   -- don't redo them.
3146 				 and b.LABTESTNAME_IS_OCLABQUEST IN ('N','Y'));
3147 
3148 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows successfully updated "OC_LAB_QUESTION" '||
3149 				       'for studies defaulted to use "LABTEST_NAME"');
3150 
3151 	    -- Map C3D Question Name using LabTest_Name for Studies defaulted to "NO"
3152 	    Update nci_labs a
3153 	       set OC_LAB_QUESTION = FIND_LAB_QUESTION(A.test_component_id, A.laboratory)
3154 	     where Load_flag = 'N'
3155 	       and exists (select 'X' from nci_lab_load_ctl b
3156 			    where b.oc_study = 'ALL'
3157 			      and b.LABTESTNAME_IS_OCLABQUEST = 'N')
3158 	       and not exists (select 'X' from nci_lab_load_ctl b   -- these were processed above
3159 			       where b.oc_study = a.oc_study	   -- don't redo them.
3160 				 and b.LABTESTNAME_IS_OCLABQUEST IN ('N','Y'));
3161 
3162 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows successfully updated "OC_LAB_QUESTION" '||
3163 				       'for studies defaulted to use "FIND_LAB_QUESTION"');
3164 	    /*
3165 	    */
3166 
3167 	    -- PRC 12/16/04: Check to make sure Mapped Question is a valid OC Question
3168 	    UPDATE NCI_LABS N
3169 	       SET LOAD_FLAG	= 'E'
3170 		  ,ERROR_REASON = 'Mapped OC_LAB_QUESTION not a valid OC Question'
3171 	     WHERE load_flag in ('N')
3172 	       and OC_LAB_QUESTION IS not NULL
3173 	       and not exists (select 'X' from labtests where
3174 				name = n.OC_LAB_QUESTION);
3175 
3176 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error '||
3177 				'"Mapped OC_LAB_QUESTION not a valid OC Question".');
3178 
3179 	    -- Set error for test_component_id have 2 questions
3180 	    -- PRC 07/02/03:  There may be more than one oc_question per test_component_id
3181 	    UPDATE NCI_LABS N
3182 	       SET LOAD_FLAG	= 'E'
3183 		  ,ERROR_REASON = 'Lab Test Component ID (' || test_component_id ||
3184 				  ') is double-mapped'
3185 	     WHERE load_flag in ('N')
3186 	       and Cnt_Lab_Test_Maps(n.test_component_id,n.laboratory) > 1;
3187 
3188 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Lab Test Component ID ( xxx ) is double-mapped".');
3189 
3190 	    -- PRC 12/20/2004: New; Populates indexed table to greatly increase speed of
3191 	    -- DCM, EVENT, SUBSET assignment.
3192 
3193 	    Log_Util.LogMessage('PLD - Calling Populate_LABDCM_EVENTS_Table.');
3194 
3195 	    Populate_LABDCM_EVENTS_Table;
3196 
3197 	    -- Found that under some conditions, a question could appear on more than one DCM, Event, Subset
3198 	    -- so we now mark those records as errors, and should have the DCMs fixed.
3199 	    -- New Routine uses NCI_STUDY_LABDCM_EVENTS_TB table for much faster response.
3200 	    update nci_labs n
3201 	       set load_flag = 'E' , error_reason = 'OC_Lab_Question on more than one Panel'
3202 	    where exists (SELECT 'X'
3203 			    FROM  NCI_STUDY_LABDCM_EVENTS_TB B
3204 			   WHERE b.study = n.oc_study
3205 			     and b.oc_lab_question = n.oc_lab_question
3206 			     and b.oc_lab_question is not null
3207 			     and display_sn = (select min(display_sn)
3208 						 from  NCI_STUDY_LABDCM_EVENTS_TB a
3209 						where a.study = b.study
3210 						  and a.dcm_name = b.dcm_NAME
3211 						  and a.subset_name = b.subset_name
3212 						  and a.question_name = b.question_name
3213 						  and a.repeat_sn = b.repeat_sn
3214 						  and a.oc_lab_question = b.oc_lab_question)
3215 			   having count(*) > 1)
3216 	    and load_flag in ('N');
3217 
3218 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "OC_Lab_Question on more than one Panel".');
3219 
3220 	    -- Determine the DCM, Subset and Clinical Planned Event for each mapped lab result
3221 	    -- may want to convert NCI_STUDY_DCMS_EVENTS_vw to a table for SPEED
3222 	    -- Version #2, Made Table out of NCI_STUDY_DCMS_EVENTS_VW with Lab Specific Questions Only,
3223 	    -- using NEW view NCI_STUDY_LABDCM_EVENTS_VW.
3224 	    -- Placed strategic indexes on the table to increase the speed of this step by light years.
3225 	    UPDATE NCI_LABS N
3226 	       SET (OC_LAB_PANEL, OC_LAB_EVENT, OC_LAB_SUBSET) =
3227 			   (SELECT dcm_name, cpe_name, subset_name
3228 			      FROM  NCI_STUDY_LABDCM_EVENTS_TB B
3229 			     WHERE b.study = n.oc_study
3230 			       and b.oc_lab_question = n.oc_lab_question
3231 			       and b.oc_lab_question is not null
3232 			       and b.display_sn = (select min(display_sn)
3233 						     from  NCI_STUDY_LABDCM_EVENTS_TB a
3234 						    where a.oc_study = b.oc_study
3235 						      and a.dcm_name = b.dcm_NAME
3236 						      and a.subset_name = b.subset_name
3237 						      and a.question_name = b.question_name
3238 						      and a.repeat_sn = b.repeat_sn
3239 						      and a.oc_lab_question = b.oc_lab_question))
3240 	     WHERE load_flag in ('N');
3241 
3242 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows successfully updated "OC_LAB_PANEL", "OC_LAB_EVENT", "OC_LAB_SUBSET".');
3243 
3244 	    -- Process "Other Lab Records"
3245 	    Process_Lab_Other;
3246 
3247 	    -- Check for Reject Records and specify Error Message
3248 
3249 	    UPDATE NCI_LABS
3250 	       SET LOAD_FLAG = 'E', ERROR_REASON = 'Lab Test is unmapped'
3251 	     WHERE OC_LAB_QUESTION IS NULL AND LOAD_FLAG IN ('N');
3252 
3253 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Lab Test is unmapped".');
3254 
3255 	    UPDATE NCI_LABS
3256 	       SET LOAD_FLAG = 'E', ERROR_REASON = 'Lab Test is invalid'
3257 	     WHERE UPPER(LABTEST_NAME) IN
3258 		   (SELECT UPPER(LABTEST_NAME) FROM NCI_INVALID_LABTESTS) AND
3259 		   LOAD_FLAG IN ('N');
3260 
3261 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Lab Test is invalid".');
3262 
3263 	    UPDATE NCI_LABS
3264 	       SET LOAD_FLAG = 'E', ERROR_REASON = 'Lab Result is null'
3265 	     WHERE RESULT IS NULL AND LOAD_FLAG IN ('N');
3266 
3267 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Lab Result is null".');
3268 
3269 	    UPDATE NCI_LABS
3270 	       SET LOAD_FLAG = 'E', ERROR_REASON = 'Lab Result is invalid'
3271 	     WHERE UPPER(RESULT) IN
3272 		   (SELECT UPPER(RESULT_VALUE) FROM NCI_INVALID_RESULTS) AND
3273 		   LOAD_FLAG IN ('N');
3274 
3275 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Lab Result is invalid".');
3276 
3277 	    UPDATE NCI_LABS
3278 	       SET LOAD_FLAG = 'E', ERROR_REASON = 'Sample date is invalid'
3279 	     WHERE to_number(substr(sample_datetime, 7, 2)) > 23 AND
3280 		   LOAD_FLAG IN ('N');
3281 
3282 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Sample date is invalid".');
3283 
3284 	    -- prc 08/17/2004 : Added explicit test for NULL Sample Date/Time
3285 	    UPDATE NCI_LABS
3286 	       SET LOAD_FLAG = 'E', ERROR_REASON = 'Sample Date/Time is Null'
3287 	     WHERE sample_datetime is null
3288 	       AND LOAD_FLAG IN ('N');
3289 
3290 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Sample Date/Time is Null".');
3291 
3292 	    UPDATE NCI_LABS N
3293 	       SET LOAD_FLAG	= 'E'
3294 		  ,ERROR_REASON = 'Invalid OC question used in mapping'
3295 	     WHERE LOAD_FLAG IN ('N') AND OC_LAB_QUESTION IS NOT NULL AND
3296 		   OC_LAB_PANEL != 'LAB_ALL' AND
3297 		   oc_lab_panel || ',' || oc_lab_question not in
3298 		   (SELECT DISTINCT V.DCM_NAME || ',' || V.OC_LAB_QUESTION
3299 		      FROM CLINICAL_STUDIES S, NCI_STUDY_DCMS_VW V
3300 		     WHERE N.OC_STUDY = S.STUDY AND
3301 			   S.CLINICAL_STUDY_ID = V.OC_STUDY AND
3302 			   V.QUESTION_NAME = 'LPARM' AND
3303 			   V.SUBSET_NAME = N.OC_LAB_SUBSET AND
3304 			   V.DCM_NAME = N.OC_LAB_PANEL);
3305 
3306 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Invalid OC question used in mapping".');
3307 
3308 	    -- PRC 09/17/2003: Added this error check when new study caused this error.
3309 	    -- prc 04/01/2004: Added DCI Books and Book Pages. Only look at 'Active' DCI Books
3310 	    -- prc 04/05/2004: Okay, Only mark records where there are 2 DIFFERENT DCI Names that can be
3311 	    --		       associated to the Study/DCM/DCM_Subset. (Which is done in load_lab_results)
3312 	    UPDATE NCI_LABS N
3313 	       SET LOAD_FLAG	= 'E'
3314 		  ,ERROR_REASON = 'Lab Panel and Subset have Multiple DCIs'
3315 	     WHERE LOAD_FLAG IN ('N')
3316 	       AND exists (SELECT count(distinct dc.name), d.name, d.dcm_id, d.subset_name -- prc 04/05/2004 : Count Distinct DCI NAME
3317 			     FROM DCMS d, DCI_MODULES dm, DCIS dc, CLINICAL_STUDIES S,
3318 				  dci_book_pages bp, dci_books b -- prc 04/01/2004:  Only look at 'Active' DCI Books
3319 			    WHERE s.Study = n.oc_study
3320 			      and d.name = n.oc_lab_panel
3321 			      and d.subset_name = n.oc_lab_subset
3322 			      and d.clinical_study_id = s.clinical_study_id
3323 			      and d.dcm_subset_sn = dm.dcm_subset_sn and d.dcm_id = dm.dcm_id
3324 			      and dm.dci_id = dc.dci_id
3325 			      AND dc.dci_id = bp.dci_id
3326 			      AND b.dci_book_id = bp.dci_book_id
3327 			      and dc.dci_status_code = 'A'     -- prc 10/20/2003:  Only look at 'Active' DCIs
3328 			      and b.DCI_BOOK_STATUS_CODE = 'A' -- prc 04/01/2004:  Only look at 'Active' DCI Books
3329 			    Group by d.name, d.dcm_id, d.subset_name -- prc 04/05/2004 : Count Distinct DCI NAME
3330 			   Having count(distinct dc.name) > 1); -- prc 04/05/2004 : Count Distinct DCI NAME
3331 
3332 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Lab Panel and Subset have Multiple DCIs".');
3333 
3334 	    -- PRC 10/20/2003: Added this error check when a DCI module is requiring Time to be collected.
3335 	    UPDATE NCI_LABS N
3336 	       SET LOAD_FLAG	= 'E'
3337 		  ,ERROR_REASON = 'DCI requires time'
3338 	     WHERE LOAD_FLAG IN ('N')
3339 	       AND exists (SELECT d.name, d.dcm_id, d.subset_name, dc.name
3340 			     FROM DCMS d, DCI_MODULES dm, DCIS dc, CLINICAL_STUDIES S
3341 			    WHERE s.Study = n.oc_study
3342 			      and d.name = n.oc_lab_panel
3343 			      and d.subset_name = n.oc_lab_subset
3344 			      and d.clinical_study_id = s.clinical_study_id
3345 			      and d.dcm_subset_sn = dm.dcm_subset_sn and d.dcm_id = dm.dcm_id
3346 			      and dm.dci_id = dc.dci_id
3347 			      and dc.dci_status_code = 'A'
3348 			      and dc.COLLECT_TIME_FLAG = 'Y' -- prc 10/20/2003:  Only look at DCIs requiring TIME collection
3349 			   );
3350 
3351 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "DCI requires time".');
3352 
3353 	    -- PRC 08/23/2005: Added error check DCI Book Not Active
3354 	    update nci_labs N
3355 	       set load_flag	= 'E',
3356 		   error_reason = 'No Active DCI BOOK for Study'
3357 	     where load_flag = 'N'
3358 	       and not exists (
3359 		   SELECT distinct d.name, d.dcm_id, d.subset_name, dc.name
3360 		     FROM DCMS d, DCI_MODULES dm, DCIS dc, clinical_studies c,
3361 			  dci_book_pages bp, dci_books b
3362 		    WHERE d.name = n.oc_lab_panel
3363 		      and d.subset_name = n.oc_lab_subset
3364 		      and d.clinical_study_id = c.clinical_study_id
3365 		      and d.dcm_subset_sn = dm.dcm_subset_sn
3366 		      and c.study = n.oc_study
3367 		      and d.dcm_id = dm.dcm_id
3368 		      and dm.dci_id = dc.dci_id
3369 		      AND dc.dci_id = bp.dci_id
3370 		      AND b.dci_book_id = bp.dci_book_id
3371 		      AND dc.dci_status_code = 'A'
3372 		      and b.DCI_BOOK_STATUS_CODE = 'A');
3373 
3374 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "DCI requires time".');
3375 
3376 	    -- apply preferred translation of laboratory specific unit of measure
3377 	    UPDATE NCI_LABS N
3378 	       SET UNIT = (SELECT U.PREFERRED
3379 			     FROM NCI_UOM_MAPPING U
3380 			    WHERE UPPER(N.UNIT) = UPPER(U.SOURCE)
3381 			      and UPPER(N.LABORATORY) = UPPER(U.LABORATORY))
3382 	     WHERE LOAD_FLAG IN ('N')
3383 	       AND exists (select 'X' FROM NCI_UOM_MAPPING U
3384 			    WHERE UPPER(N.UNIT) = UPPER(U.SOURCE)
3385 			      and UPPER(N.LABORATORY) = UPPER(U.LABORATORY));
3386 
3387 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' UOMs updated with preferred values..');
3388 
3389 	    -- validate the unit of measure
3390 	    UPDATE NCI_LABS N
3391 	       SET LOAD_FLAG = 'E', ERROR_REASON = 'Invalid Unit of Measure'
3392 	     WHERE LOAD_FLAG IN ('N')
3393 	       AND N.UNIT IS NOT NULL
3394 	       AND N.UNIT != ' '
3395 	       AND NOT EXISTS (SELECT U.VALUE
3396 				 FROM NCI_UOMS U
3397 				WHERE N.UNIT = U.VALUE); -- Removed "UPPER" function.  They must exactly match.
3398 
3399 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "Invalid Unit of Measure".');
3400 
3401 	    /* This code added to catch those Sampe Date/Time updates that would cause an NEW record	*/
3402 	    /* because the DCI Date/Time is null, or doesn't match DCM Date/Time			*/
3403 	    /* A Key Change in OPA will cause DCI Time to NULL, Batch Data Load then mistakenly creates */
3404 	    /* a new received DCI and DCM to be created, and loads the data to the new record.		*/
3405 	    /*
3406 	    /* PRC: 06/06/06: Removed this error check, because update records now include SubEvent Number,
3407 	    /*		      which cause BDL not to look it up, which cause an error when DCI Time<> DCM Time
3408 	    /**/
3409 	    /* UPDATE NCI_LABS N
3410 	       SET LOAD_FLAG	= 'E'
3411 		  ,ERROR_REASON = 'DCI Date/Time doesn''t match DCM Date/Time.'
3412 	     WHERE LOAD_FLAG IN ('N')
3413 	       AND exists (Select a.CLIN_PLAN_EVE_NAME, a.SN, a.SUBEVENT_NUMBER, a.VISIT_NUMBER,
3414 				  a.dcm_date, a.dcm_time, c.dci_date, c.dci_time
3415 			     from received_dcms a,
3416 				  dcms b,
3417 				  received_dcis c,
3418 				  clinical_studies s
3419 			    where a.dcm_id = b.dcm_id
3420 			      and a.RECEIVED_DCI_ID = c.RECEIVED_DCI_ID
3421 			      and a.DCM_SUBSET_SN = b.DCM_SUBSET_SN
3422 			      and a.DCM_layout_SN = b.DCM_layout_SN
3423 			      and b.subset_name = N.oc_lab_subset
3424 			      and a.patient = N.oc_patient_pos
3425 			      and a.clinical_study_id = s.Clinical_study_id
3426 			      and s.study = n.oc_study
3427 			      and b.name = N.oc_lab_panel
3428 			      and substr(dcm_date,5,2)||substr(dcm_date,7,2)||substr(dcm_date,3,2)||
3429 				  substr(nvl(dcm_time,'000000'),1,4) = N.sample_datetime
3430 			      and a.END_TS = to_date(3000000, 'J')
3431 			      and c.END_TS = to_date(3000000, 'J')
3432 			      and (a.dcm_date <> nvl(c.dci_date,'0') or
3433 				   a.dcm_time <> nvl(c.dci_time,'0')));
3434 
3435 	    Log_Util.LogMessage('PLD - '||to_char(SQL%RowCount)||' rows updated for error "DCI Date/Time doesn''t match DCM Date/Time."');
3436 	    */
3437 
3438 	    -- Identify duplicate records
3439 	    Log_Util.LogMessage('PLD ****** Starting Duplicate Records Check (identify_duplicate_records).');
3440 	    identify_duplicate_records;
3441 	    Log_Util.LogMessage('PLD ****** Finished Duplicate Records Check.');
3442 
3443 	    Commit; -- prc 07/14/03  Added commit statement
3444 
3445   /*   MOVED TO GET_PROCESS_LOAD_LABS : Records for Update should not be processed here.
3446 	    -- Identify Updates to Loaded Records.
3447 	    Log_Util.LogMessage('PLD - Begin "Identifying Load as Updates".');
3448 	    FindandMark_Updates;
3449 	    Log_Util.LogMessage('PLD - Finished "Identifying Load as Updates".');
3450 
3451 	    Commit;
3452   */
3453 
3454 	    Log_Util.LogMessage('PLD - Finished "PROCESS_LAB_DATA".');
3455   END process_lab_data;
3456 
3457   Procedure LLI_Processing is
3458   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
3459   /* This section is used to mark New records with either LOAD or REVIEW status. */
3460   /* with the appropriate values for patient and study as well as marked with an */
3461   /* error flag when they don't meet each of the individual tests below.	      */
3462   /* The types of errors include:						      */
3463   /*    Patient found on more than one study				      */
3464   /*    Patient not on-study						      */
3465   /*    Etc.								      */
3466   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
3467   /*  Modification History 						      */
3468   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
3469   /* PRC - 01/06/05: Corrected "Bug" where the count of Archived and Previously  */
3470   /*		  loaded records was incorrect. 			      */
3471   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
3472 	  X_Cnt Number;
3473 
3474   Begin
3475 	  Log_Util.LogMessage('LLIP - Process Records for LLI Started.');
3476 
3477 	  Log_Util.LogMessage('LLIP - Checking for Updates to Previously Loaded Records.');
3478 
3479 	  -- Archive LabTests that were previously Archived
3480 	  Update nci_labs a
3481 	     set load_flag = 'A', LOAD_MARK_DATE = Sysdate, LOAD_MARK_USER = USER
3482 	   where Load_flag IN ('N','D','R')
3483 	     and exists (select 'X' from nci_labs b
3484 			  where b.oc_study   = a.oc_study
3485 			    and b.OC_Patient_Pos = a.OC_Patient_Pos -- 08/07/06: Use Pat_pos instead of ID
3486 			    and b.sample_datetime = a.sample_datetime
3487 			    and b.labtest_name = a.labtest_name
3488 			    and b.load_flag in ('A'));
3489 
3490 	  Log_Util.LogMessage('LLIP - '||to_char(SQL%RowCount)||' records marked ARCHIVE because Lab Test previously Archived');
3491 
3492 	  -- Load LabTests that were previously Loaded
3493 	  Update nci_labs a
3494 	     set load_flag = 'L', error_reason = 'Auto Load because this is an update.'
3495 	   where Load_flag IN ('N','D','R')
3496 	     and exists (select 'X' from nci_labs b
3497 			  where b.oc_study   = a.oc_study
3498 			    and b.OC_Patient_Pos = a.OC_Patient_Pos -- 08/07/06: Use Pat_pos instead of ID
3499 			    and b.sample_datetime = a.sample_datetime
3500 			    and b.labtest_name = a.labtest_name
3501 			    and b.load_flag in ('C','U'));
3502 
3503 	  Log_Util.LogMessage('LLIP - '||to_char(SQL%RowCount)||' records marked for LOAD as they are UPDATES.');
3504 
3505 	  -- Update specific Studies for Review
3506 	  Update nci_labs a
3507 	     set load_flag = 'R'
3508 	   where Load_flag = 'N'
3509 	     and exists (select 'X' from nci_lab_load_ctl b
3510 			 where a.oc_study = b.oc_study
3511 			   and b.Review_study = 'Y');
3512 
3513 	  Log_Util.LogMessage('LLIP - '||to_char(SQL%RowCount)||' rows marked for REVIEW (Study is defined for Review)."');
3514 
3515 	  -- Update specific Studies for Load
3516 	  Update nci_labs a
3517 	     set load_flag = 'L', LOAD_MARK_DATE = Sysdate, LOAD_MARK_USER = USER
3518 	   where Load_flag = 'N'
3519 	     and exists (select 'X' from nci_lab_load_ctl b
3520 			 where a.oc_study = b.oc_study
3521 			   and b.Review_study = 'N');
3522 
3523 	  Log_Util.LogMessage('LLIP - '||to_char(SQL%RowCount)||' rows marked for LOAD (Study is defined for AutoLoad)."');
3524 
3525 	  -- Update specific Studies for Review
3526 	  Update nci_labs a
3527 	     set load_flag = 'R'
3528 	   where Load_flag = 'N'
3529 	     and exists (select 'X' from nci_lab_load_ctl b
3530 			 where b.oc_study = 'ALL'
3531 			   and b.Review_study = 'Y');
3532 
3533 	  Log_Util.LogMessage('LLIP - '||to_char(SQL%RowCount)||' rows marked for REVIEW (Default defined)."');
3534 
3535 	  -- Update specific Studies for Load
3536 	  Update nci_labs a
3537 	     set load_flag = 'L', LOAD_MARK_DATE = Sysdate, LOAD_MARK_USER = USER
3538 	   where Load_flag = 'N'
3539 	     and exists (select 'X' from nci_lab_load_ctl b
3540 			 where b.oc_study = 'ALL'
3541 			   and b.Review_study = 'N');
3542 
3543 	  X_Cnt := SQL%RowCount;
3544 
3545 	  If X_Cnt > 0 Then
3546 	     Log_Util.LogMessage('LLIP - '||to_char(X_Cnt)||' rows marked for LOAD (Default defined)."');
3547 	  End If;
3548 
3549 	  -- Update Anything Left over with error
3550 	  -- This would mean that the study is not specifically set-up either way AND
3551 	  -- that the default record "ALL" is not set-up either way.
3552 	  Update nci_labs a
3553 	     set load_flag = 'E', Error_Reason = 'Can not identify "Review vs Load" for LLI. Contact Administrator.'
3554 	   where Load_flag = 'N';
3555 
3556 	  X_Cnt := SQL%RowCount;
3557 
3558 	  If X_Cnt > 0 Then
3559 	     Log_Util.LogMessage('LLIP - '||to_char(X_Cnt)||' rows marked with REVIEW/LOAD Error (Not defined)."');
3560 	  End If;
3561 
3562 	  Log_Util.LogMessage('LLIP - Process Records for LLI Finished. ');
3563 
3564   End LLI_Processing;
3565 
3566   Procedure Process_Batch_Load Is
3567 	  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
3568 	  /* This section is used to take the Records In NCI_LABS, and process then for  */
3569 	  /* Batch Loading.  This procedure was broken out of Process_Lab_Data. 	 */
3570 	  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
3571 
3572 	  labs_count number;
3573 
3574   BEGIN
3575 	   Log_Util.LogMessage('PBL - Beginning "PROCESS_BATCH_LOAD" (PBL).');
3576 
3577 	  -- check if there enough 'N' records to process, if so continue with loading lab results
3578 	   select count(*)
3579 	     into labs_count
3580 	     from BDL_TEMP_FILES;
3581 
3582 	   if (labs_count > 0) then
3583 	      Log_Util.LogMessage('PBL - There are '||to_char(labs_count)||' records in "BDL_TEMP_FILES" to process for Batch Loading.');
3584 
3585 	      Log_Util.LogMessage('PBL - Executing "automate_bdl.create_dat_file".');
3586 	      automate_bdl.create_dat_file;
3587 
3588 	      Log_Util.LogMessage('PBL - Finished "automate_bdl.create_dat_file".');
3589 
3590 	      Log_Util.LogMessage('PBL - Calling Insert Missing DCMs.');
3591 
3592 	      insert_lab_data.insert_missing_DCMs;
3593 
3594 	      select count(*)
3595 		into labs_count
3596 		from BDL_TEMP_FILES;
3597 	      if (labs_count > 0) then
3598 
3599 		 Log_Util.LogMessage('PBL - Executing "automate_bdl.create_dat_file".');
3600 		 automate_bdl.create_dat_file;
3601 
3602 		 Log_Util.LogMessage('PBL - Finished "automate_bdl.create_dat_file".');
3603 	      End If;
3604 	   Else
3605 
3606 	      Log_Util.LogMessage('PBL - There are NO RECORDS in "BDL_TEMP_FILES" to process for Batch Loading.');
3607 
3608 	   end if;
3609 	   Log_Util.LogMessage('PBL - Purging LABLOAD Logs < SYSDATE-14.');
3610 	   MessageLogPurge('LABLOAD%',SYSDATE - 14);
3611 	   Log_Util.LogMessage('PBL - Finished "PROCESS_BATCH_LOAD" (PBL).');
3612   END;
3613 
3614 END cdw_data_transfer_v3;
3615 /

Package body created.

SQL> 
SQL> sho  error
No errors.
SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Function Make_number
Function Make_number
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @Make_number.plsql
SQL> CREATE OR REPLACE FUNCTION 	make_number (v_text   in varchar2,
  2  						     v_option in number default 0)
  3  return number is
  4  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  5  /* Author: Patrick Conrad - Ekagra Software					    */
  6  /* Date  : 07/19/2006								    */
  7  /* Descr : The function takes a TEXT value and tries to convert it into a number.	    */
  8  /* 	The primary use for this function is to allow patient position ids to be    */
  9  /* sorted numerically.  values 1, 2, 3, 4, 11, 12 should appear in this order when     */
 10  /* sorted numerically.  When sorted non-numeric, 1, 11, 12, 2, 3, 4. The TO_NUMBER     */
 11  /* function cannot be used because patient position ids can contain alpha charcaters.  */
 12  /* 1, 2, 3, 3E are all valid patient position ids. 				    */
 13  /* V_OPTION: this option designates where ALPHA values are to appear in the sort.	    */
 14  /* 	  0 - Causes numbers with alpha prefixes to appear at end of sort.	    */
 15  /* 	  1 - Causes numbers with alpha prefixes to appear at beginning of sort.    */
 16  /* 	  2 - Causes numbers with alpha prefixes to appear mixed within the sort    */
 17  /* 	      based upon their translated numeric value.			    */
 18  /* Numeric Value: The premise is, take the value, strip off the first '+' sign if	    */
 19  /* 	       it exists, replace all non-numeric values with decimal points,	    */
 20  /* replace all extra decimal points with zeros, convert value to number.		    */
 21  /* So, 1, 2, 3, 3-1 become 1, 2, 3, 3.1 numerically.				    */
 22  /* NOTE: Since a group of alpha values can return from this function with the same     */
 23  /*       numeric value, it will be necessary to include a secondary sort. If PT is the */
 24  /*       column to sort, using "order by make_number(PT), PT" will provide the subsort */
 25  /*       needed within the alpha values.						    */
 26  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 27  
 28  v_number number;		-- holds numeric value
 29  v_hold   varchar2(2000);	-- holds text to be converted
 30  
 31  Begin
 32  	v_hold := rtrim(ltrim(v_text));   -- remove extra spaces, before and after
 33  
 34  	If Instr(v_hold,'+') = 1 then	  -- If text has '+' prefix,
 35  	   v_hold := substr(v_hold,2);	  -- remove it.
 36  	End If;
 37  
 38  	Begin
 39  	   -- for option 0 and 1 convert text to number High and Low, only if it is
 40  	   -- prefixed with 'A' through 'Z' all other special characters handled below.
 41  
 42  	   select decode(v_option,0,'999999999',    -- 0 option sends alpha to end
 43  				  1,'-999999999',    -- 1 option sends alpha to begining
 44  				  v_hold)	    -- not 0 or 1, build numeric value
 45  	     into v_hold
 46  	     from dual
 47  	    where upper(substr(v_hold,1,1)) between 'A' and 'Z';
 48  
 49  	Exception
 50  	   When no_data_found Then Null;
 51  
 52  	End;
 53  
 54  	-- replace all non-numeric characters with decimal points
 55  	select TRANSLATE(v_hold,
 56  			 '_./ abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-+',
 57  			 '..........................................................')
 58  	  into v_hold
 59  	  from dual;
 60  
 61  
 62  	If Instr(v_hold,'.') <> 0 then		-- if the string has decimal points
 63  	   If replace(v_hold,'.') is null then	-- if the string is ALL decimal points
 64  	      v_hold := '0';			--   then make it 0
 65  	   Else
 66  	      -- for every decimal point after the first one, make them zeroes.
 67  	      v_hold := substr(v_hold,1,instr(v_hold,'.'))||
 68  			replace(substr(v_hold,instr(v_hold,'.')+1),'.','0');
 69  	   End If;
 70  	End If;
 71  
 72  	Begin
 73  	   --Convert value to number
 74  	   v_number := to_number(v_hold);
 75  
 76  	exception
 77  	   -- If the number conversion fail for any reason, set number value to zero
 78  	   When Others then
 79  	   v_number := 0;
 80  	End;
 81  
 82  	-- pass the number value back.
 83  	Return v_number;
 84  
 85  End;
 86  /

Function created.

SQL> 
SQL> 
SQL> Prompt * * * * * * *
* * * * * * *
SQL> Prompt Function Get_Response
Function Get_Response
SQL> Prompt * * * * * * *
* * * * * * *
SQL> @Get_Response.plsql
SQL> CREATE OR REPLACE FUNCTION Get_Response_Value(p_Study in varchar2,
  2  						   p_Pt    in varchar2,
  3  						   p_DCM   in varchar2,
  4  						   p_Question in varchar2)
  5  Return varchar2 is
  6  
  7  	v_result		     varchar2(400);
  8  	v_found 		     boolean;
  9  
 10  
 11  Begin
 12  
 13  	cdw_data_transfer_v3.Get_Response(p_Study, p_PT, p_dcm, p_Question, v_result, v_found);
 14  
 15  	If not v_found Then
 16  	   RETURN 'NULL';
 17  	Else
 18  	   Return V_Result;
 19  	End If;
 20  End;
 21  /

Function created.

SQL> 
SQL> Show Errors;
No errors.
SQL> 
SQL> 
SQL> 
SQL> PROMPT

SQL> PROMPT FINISHED!
FINISHED!
SQL> PROMPT

SQL> 
SQL> Spool off
